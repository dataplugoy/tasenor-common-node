var wr=Object.create;var Ke=Object.defineProperty;var Tr=Object.getOwnPropertyDescriptor;var Ar=Object.getOwnPropertyNames;var vr=Object.getPrototypeOf,br=Object.prototype.hasOwnProperty;var Pr=(s,t)=>()=>(s&&(t=s(s=0)),t);var H=(s,t)=>()=>(t||s((t={exports:{}}).exports,t),t.exports),xr=(s,t)=>{for(var e in t)Ke(s,e,{get:t[e],enumerable:!0})},en=(s,t,e,n)=>{if(t&&typeof t=="object"||typeof t=="function")for(let r of Ar(t))!br.call(s,r)&&r!==e&&Ke(s,r,{get:()=>t[r],enumerable:!(n=Tr(t,r))||n.enumerable});return s};var x=(s,t,e)=>(e=s!=null?wr(vr(s)):{},en(t||!s||!s.__esModule?Ke(e,"default",{value:s,enumerable:!0}):e,s)),Sr=s=>en(Ke({},"__esModule",{value:!0}),s);var v,w,la,p=Pr(()=>{v=require("buffer"),w=x(require("process")),la=function(s){function t(){var n=this||self;return delete s.prototype.__magic__,n}if(typeof globalThis=="object")return globalThis;if(this)return t();s.defineProperty(s.prototype,"__magic__",{configurable:!0,get:t});var e=__magic__;return e}(Object)});var ze=H((da,qe)=>{p();var $r=function(){"use strict";function s(l,f){return f!=null&&l instanceof f}var t;try{t=Map}catch{t=function(){}}var e;try{e=Set}catch{e=function(){}}var n;try{n=Promise}catch{n=function(){}}function r(l,f,d,h,m){typeof f=="object"&&(d=f.depth,h=f.prototype,m=f.includeNonEnumerable,f=f.circular);var S=[],y=[],A=typeof v.Buffer<"u";typeof f>"u"&&(f=!0),typeof d>"u"&&(d=1/0);function T(g,E){if(g===null)return null;if(E===0)return g;var P,k;if(typeof g!="object")return g;if(s(g,t))P=new t;else if(s(g,e))P=new e;else if(s(g,n))P=new n(function(be,Pe){g.then(function(xe){be(T(xe,E-1))},function(xe){Pe(T(xe,E-1))})});else if(r.__isArray(g))P=[];else if(r.__isRegExp(g))P=new RegExp(g.source,u(g)),g.lastIndex&&(P.lastIndex=g.lastIndex);else if(r.__isDate(g))P=new Date(g.getTime());else{if(A&&v.Buffer.isBuffer(g))return v.Buffer.allocUnsafe?P=v.Buffer.allocUnsafe(g.length):P=new v.Buffer(g.length),g.copy(P),P;s(g,Error)?P=Object.create(g):typeof h>"u"?(k=Object.getPrototypeOf(g),P=Object.create(k)):(P=Object.create(h),k=h)}if(f){var se=S.indexOf(g);if(se!=-1)return y[se];S.push(g),y.push(P)}s(g,t)&&g.forEach(function(be,Pe){var xe=T(Pe,E-1),yr=T(be,E-1);P.set(xe,yr)}),s(g,e)&&g.forEach(function(be){var Pe=T(be,E-1);P.add(Pe)});for(var z in g){var ft;k&&(ft=Object.getOwnPropertyDescriptor(k,z)),!(ft&&ft.set==null)&&(P[z]=T(g[z],E-1))}if(Object.getOwnPropertySymbols)for(var Zt=Object.getOwnPropertySymbols(g),z=0;z<Zt.length;z++){var Je=Zt[z],le=Object.getOwnPropertyDescriptor(g,Je);le&&!le.enumerable&&!m||(P[Je]=T(g[Je],E-1),le.enumerable||Object.defineProperty(P,Je,{enumerable:!1}))}if(m)for(var Xt=Object.getOwnPropertyNames(g),z=0;z<Xt.length;z++){var He=Xt[z],le=Object.getOwnPropertyDescriptor(g,He);le&&le.enumerable||(P[He]=T(g[He],E-1),Object.defineProperty(P,He,{enumerable:!1}))}return P}return T(l,d)}r.clonePrototype=function(f){if(f===null)return null;var d=function(){};return d.prototype=f,new d};function a(l){return Object.prototype.toString.call(l)}r.__objToStr=a;function o(l){return typeof l=="object"&&a(l)==="[object Date]"}r.__isDate=o;function c(l){return typeof l=="object"&&a(l)==="[object Array]"}r.__isArray=c;function i(l){return typeof l=="object"&&a(l)==="[object RegExp]"}r.__isRegExp=i;function u(l){var f="";return l.global&&(f+="g"),l.ignoreCase&&(f+="i"),l.multiline&&(f+="m"),f}return r.__getRegExpFlags=u,r}();typeof qe=="object"&&qe.exports&&(qe.exports=$r)});var ht=H(an=>{"use strict";p();an.parse=function(s,t){return new $e(s,t).parse()};var $e=class{constructor(t,e){this.source=t,this.transform=e||Dr,this.position=0,this.entries=[],this.recorded=[],this.dimension=0}isEof(){return this.position>=this.source.length}nextCharacter(){var t=this.source[this.position++];return t==="\\"?{value:this.source[this.position++],escaped:!0}:{value:t,escaped:!1}}record(t){this.recorded.push(t)}newEntry(t){var e;(this.recorded.length>0||t)&&(e=this.recorded.join(""),e==="NULL"&&!t&&(e=null),e!==null&&(e=this.transform(e)),this.entries.push(e),this.recorded=[])}consumeDimensions(){if(this.source[0]==="[")for(;!this.isEof();){var t=this.nextCharacter();if(t.value==="=")break}}parse(t){var e,n,r;for(this.consumeDimensions();!this.isEof();)if(e=this.nextCharacter(),e.value==="{"&&!r)this.dimension++,this.dimension>1&&(n=new $e(this.source.substr(this.position-1),this.transform),this.entries.push(n.parse(!0)),this.position+=n.position-2);else if(e.value==="}"&&!r){if(this.dimension--,!this.dimension&&(this.newEntry(),t))return this.entries}else e.value==='"'&&!e.escaped?(r&&this.newEntry(!0),r=!r):e.value===","&&!r?this.newEntry():this.record(e.value);if(this.dimension!==0)throw new Error("array dimension not balanced");return this.entries}};function Dr(s){return s}});var yt=H((Ra,on)=>{p();var Rr=ht();on.exports={create:function(s,t){return{parse:function(){return Rr.parse(s,t)}}}}});var ln=H((Ca,un)=>{"use strict";p();var Cr=/(\d{1,})-(\d{2})-(\d{2}) (\d{2}):(\d{2}):(\d{2})(\.\d{1,})?.*?( BC)?$/,Or=/^(\d{1,})-(\d{2})-(\d{2})( BC)?$/,Nr=/([Z+-])(\d{2})?:?(\d{2})?:?(\d{2})?/,Fr=/^-?infinity$/;un.exports=function(t){if(Fr.test(t))return Number(t.replace("i","I"));var e=Cr.exec(t);if(!e)return Lr(t)||null;var n=!!e[8],r=parseInt(e[1],10);n&&(r=cn(r));var a=parseInt(e[2],10)-1,o=e[3],c=parseInt(e[4],10),i=parseInt(e[5],10),u=parseInt(e[6],10),l=e[7];l=l?1e3*parseFloat(l):0;var f,d=Ur(t);return d!=null?(f=new Date(Date.UTC(r,a,o,c,i,u,l)),wt(r)&&f.setUTCFullYear(r),d!==0&&f.setTime(f.getTime()-d)):(f=new Date(r,a,o,c,i,u,l),wt(r)&&f.setFullYear(r)),f};function Lr(s){var t=Or.exec(s);if(!!t){var e=parseInt(t[1],10),n=!!t[4];n&&(e=cn(e));var r=parseInt(t[2],10)-1,a=t[3],o=new Date(e,r,a);return wt(e)&&o.setFullYear(e),o}}function Ur(s){if(s.endsWith("+00"))return 0;var t=Nr.exec(s.split(" ")[1]);if(!!t){var e=t[1];if(e==="Z")return 0;var n=e==="-"?-1:1,r=parseInt(t[2],10)*3600+parseInt(t[3]||0,10)*60+parseInt(t[4]||0,10);return r*n*1e3}}function cn(s){return-(s-1)}function wt(s){return s>=0&&s<100}});var dn=H((Oa,fn)=>{p();fn.exports=jr;var _r=Object.prototype.hasOwnProperty;function jr(s){for(var t=1;t<arguments.length;t++){var e=arguments[t];for(var n in e)_r.call(e,n)&&(s[n]=e[n])}return s}});var gn=H((Na,pn)=>{"use strict";p();var Br=dn();pn.exports=fe;function fe(s){if(!(this instanceof fe))return new fe(s);Br(this,Zr(s))}var Vr=["seconds","minutes","hours","days","months","years"];fe.prototype.toPostgres=function(){var s=Vr.filter(this.hasOwnProperty,this);return this.milliseconds&&s.indexOf("seconds")<0&&s.push("seconds"),s.length===0?"0":s.map(function(t){var e=this[t]||0;return t==="seconds"&&this.milliseconds&&(e=(e+this.milliseconds/1e3).toFixed(6).replace(/\.?0+$/,"")),e+" "+t},this).join(" ")};var Mr={years:"Y",months:"M",days:"D",hours:"H",minutes:"M",seconds:"S"},Jr=["years","months","days"],Hr=["hours","minutes","seconds"];fe.prototype.toISOString=fe.prototype.toISO=function(){var s=Jr.map(e,this).join(""),t=Hr.map(e,this).join("");return"P"+s+"T"+t;function e(n){var r=this[n]||0;return n==="seconds"&&this.milliseconds&&(r=(r+this.milliseconds/1e3).toFixed(6).replace(/0+$/,"")),r+Mr[n]}};var Tt="([+-]?\\d+)",Kr=Tt+"\\s+years?",qr=Tt+"\\s+mons?",zr=Tt+"\\s+days?",Gr="([+-])?([\\d]*):(\\d\\d):(\\d\\d)\\.?(\\d{1,6})?",Qr=new RegExp([Kr,qr,zr,Gr].map(function(s){return"("+s+")?"}).join("\\s*")),mn={years:2,months:4,days:6,hours:9,minutes:10,seconds:11,milliseconds:12},Wr=["hours","minutes","seconds","milliseconds"];function Yr(s){var t=s+"000000".slice(s.length);return parseInt(t,10)/1e3}function Zr(s){if(!s)return{};var t=Qr.exec(s),e=t[8]==="-";return Object.keys(mn).reduce(function(n,r){var a=mn[r],o=t[a];return!o||(o=r==="milliseconds"?Yr(o):parseInt(o,10),!o)||(e&&~Wr.indexOf(r)&&(o*=-1),n[r]=o),n},{})}});var yn=H((Fa,hn)=>{"use strict";p();hn.exports=function(t){if(/^\\x/.test(t))return new v.Buffer(t.substr(2),"hex");for(var e="",n=0;n<t.length;)if(t[n]!=="\\")e+=t[n],++n;else if(/[0-7]{3}/.test(t.substr(n+1,3)))e+=String.fromCharCode(parseInt(t.substr(n+1,3),8)),n+=4;else{for(var r=1;n+r<t.length&&t[n+r]==="\\";)r++;for(var a=0;a<Math.floor(r/2);++a)e+="\\";n+=Math.floor(r/2)*2}return new v.Buffer(e,"binary")}});var xn=H((La,Pn)=>{p();var Ee=ht(),Ie=yt(),We=ln(),Tn=gn(),An=yn();function Ye(s){return function(e){return e===null?e:s(e)}}function vn(s){return s===null?s:s==="TRUE"||s==="t"||s==="true"||s==="y"||s==="yes"||s==="on"||s==="1"}function Xr(s){return s?Ee.parse(s,vn):null}function es(s){return parseInt(s,10)}function At(s){return s?Ee.parse(s,Ye(es)):null}function ts(s){return s?Ee.parse(s,Ye(function(t){return bn(t).trim()})):null}var ns=function(s){if(!s)return null;var t=Ie.create(s,function(e){return e!==null&&(e=xt(e)),e});return t.parse()},vt=function(s){if(!s)return null;var t=Ie.create(s,function(e){return e!==null&&(e=parseFloat(e)),e});return t.parse()},K=function(s){if(!s)return null;var t=Ie.create(s);return t.parse()},bt=function(s){if(!s)return null;var t=Ie.create(s,function(e){return e!==null&&(e=We(e)),e});return t.parse()},rs=function(s){if(!s)return null;var t=Ie.create(s,function(e){return e!==null&&(e=Tn(e)),e});return t.parse()},ss=function(s){return s?Ee.parse(s,Ye(An)):null},Pt=function(s){return parseInt(s,10)},bn=function(s){var t=String(s);return/^\d+$/.test(t)?t:s},wn=function(s){return s?Ee.parse(s,Ye(JSON.parse)):null},xt=function(s){return s[0]!=="("?null:(s=s.substring(1,s.length-1).split(","),{x:parseFloat(s[0]),y:parseFloat(s[1])})},as=function(s){if(s[0]!=="<"&&s[1]!=="(")return null;for(var t="(",e="",n=!1,r=2;r<s.length-1;r++){if(n||(t+=s[r]),s[r]===")"){n=!0;continue}else if(!n)continue;s[r]!==","&&(e+=s[r])}var a=xt(t);return a.radius=parseFloat(e),a},os=function(s){s(20,bn),s(21,Pt),s(23,Pt),s(26,Pt),s(700,parseFloat),s(701,parseFloat),s(16,vn),s(1082,We),s(1114,We),s(1184,We),s(600,xt),s(651,K),s(718,as),s(1e3,Xr),s(1001,ss),s(1005,At),s(1007,At),s(1028,At),s(1016,ts),s(1017,ns),s(1021,vt),s(1022,vt),s(1231,vt),s(1014,K),s(1015,K),s(1008,K),s(1009,K),s(1040,K),s(1041,K),s(1115,bt),s(1182,bt),s(1185,bt),s(1186,Tn),s(1187,rs),s(17,An),s(114,JSON.parse.bind(JSON)),s(3802,JSON.parse.bind(JSON)),s(199,wn),s(3807,wn),s(3907,K),s(2951,K),s(791,K),s(1183,K),s(1270,K)};Pn.exports={init:os}});var $n=H((Ua,Sn)=>{"use strict";p();var B=1e6;function is(s){var t=s.readInt32BE(0),e=s.readUInt32BE(4),n="";t<0&&(t=~t+(e===0),e=~e+1>>>0,n="-");var r="",a,o,c,i,u,l;{if(a=t%B,t=t/B>>>0,o=4294967296*a+e,e=o/B>>>0,c=""+(o-B*e),e===0&&t===0)return n+c+r;for(i="",u=6-c.length,l=0;l<u;l++)i+="0";r=i+c+r}{if(a=t%B,t=t/B>>>0,o=4294967296*a+e,e=o/B>>>0,c=""+(o-B*e),e===0&&t===0)return n+c+r;for(i="",u=6-c.length,l=0;l<u;l++)i+="0";r=i+c+r}{if(a=t%B,t=t/B>>>0,o=4294967296*a+e,e=o/B>>>0,c=""+(o-B*e),e===0&&t===0)return n+c+r;for(i="",u=6-c.length,l=0;l<u;l++)i+="0";r=i+c+r}return a=t%B,o=4294967296*a+e,c=""+o%B,n+c+r}Sn.exports=is});var Rn=H((_a,Dn)=>{p();var cs=$n(),R=function(s,t,e,n,r){e=e||0,n=n||!1,r=r||function(h,m,S){return h*Math.pow(2,S)+m};var a=e>>3,o=function(h){return n?~h&255:h},c=255,i=8-e%8;t<i&&(c=255<<8-t&255,i=t),e&&(c=c>>e%8);var u=0;e%8+t>=8&&(u=r(0,o(s[a])&c,i));for(var l=t+e>>3,f=a+1;f<l;f++)u=r(u,o(s[f]),8);var d=(t+e)%8;return d>0&&(u=r(u,o(s[l])>>8-d,d)),u},kn=function(s,t,e){var n=Math.pow(2,e-1)-1,r=R(s,1),a=R(s,e,1);if(a===0)return 0;var o=1,c=function(u,l,f){u===0&&(u=1);for(var d=1;d<=f;d++)o/=2,(l&1<<f-d)>0&&(u+=o);return u},i=R(s,t,e+1,!1,c);return a==Math.pow(2,e+1)-1?i===0?r===0?1/0:-1/0:NaN:(r===0?1:-1)*Math.pow(2,a-n)*i},us=function(s){return R(s,1)==1?-1*(R(s,15,1,!0)+1):R(s,15,1)},En=function(s){return R(s,1)==1?-1*(R(s,31,1,!0)+1):R(s,31,1)},ls=function(s){return kn(s,23,8)},fs=function(s){return kn(s,52,11)},ds=function(s){var t=R(s,16,32);if(t==49152)return NaN;for(var e=Math.pow(1e4,R(s,16,16)),n=0,r=[],a=R(s,16),o=0;o<a;o++)n+=R(s,16,64+16*o)*e,e/=1e4;var c=Math.pow(10,R(s,16,48));return(t===0?1:-1)*Math.round(n*c)/c},In=function(s,t){var e=R(t,1),n=R(t,63,1),r=new Date((e===0?1:-1)*n/1e3+9466848e5);return s||r.setTime(r.getTime()+r.getTimezoneOffset()*6e4),r.usec=n%1e3,r.getMicroSeconds=function(){return this.usec},r.setMicroSeconds=function(a){this.usec=a},r.getUTCMicroSeconds=function(){return this.usec},r},ke=function(s){for(var t=R(s,32),e=R(s,32,32),n=R(s,32,64),r=96,a=[],o=0;o<t;o++)a[o]=R(s,32,r),r+=32,r+=32;var c=function(u){var l=R(s,32,r);if(r+=32,l==4294967295)return null;var f;if(u==23||u==20)return f=R(s,l*8,r),r+=l*8,f;if(u==25)return f=s.toString(this.encoding,r>>3,(r+=l<<3)>>3),f;console.log("ERROR: ElementType not implemented: "+u)},i=function(u,l){var f=[],d;if(u.length>1){var h=u.shift();for(d=0;d<h;d++)f[d]=i(u,l);u.unshift(h)}else for(d=0;d<u[0];d++)f[d]=c(l);return f};return i(a,n)},ms=function(s){return s.toString("utf8")},ps=function(s){return s===null?null:R(s,8)>0},gs=function(s){s(20,cs),s(21,us),s(23,En),s(26,En),s(1700,ds),s(700,ls),s(701,fs),s(16,ps),s(1114,In.bind(null,!1)),s(1184,In.bind(null,!0)),s(1e3,ke),s(1007,ke),s(1016,ke),s(1008,ke),s(1009,ke),s(25,ms)};Dn.exports={init:gs}});var On=H((ja,Cn)=>{p();Cn.exports={BOOL:16,BYTEA:17,CHAR:18,INT8:20,INT2:21,INT4:23,REGPROC:24,TEXT:25,OID:26,TID:27,XID:28,CID:29,JSON:114,XML:142,PG_NODE_TREE:194,SMGR:210,PATH:602,POLYGON:604,CIDR:650,FLOAT4:700,FLOAT8:701,ABSTIME:702,RELTIME:703,TINTERVAL:704,CIRCLE:718,MACADDR8:774,MONEY:790,MACADDR:829,INET:869,ACLITEM:1033,BPCHAR:1042,VARCHAR:1043,DATE:1082,TIME:1083,TIMESTAMP:1114,TIMESTAMPTZ:1184,INTERVAL:1186,TIMETZ:1266,BIT:1560,VARBIT:1562,NUMERIC:1700,REFCURSOR:1790,REGPROCEDURE:2202,REGOPER:2203,REGOPERATOR:2204,REGCLASS:2205,REGTYPE:2206,UUID:2950,TXID_SNAPSHOT:2970,PG_LSN:3220,PG_NDISTINCT:3361,PG_DEPENDENCIES:3402,TSVECTOR:3614,TSQUERY:3615,GTSVECTOR:3642,REGCONFIG:3734,REGDICTIONARY:3769,JSONB:3802,REGNAMESPACE:4089,REGROLE:4096}});var Fn=H(Re=>{p();var hs=xn(),ys=Rn(),ws=yt(),Ts=On();Re.getTypeParser=As;Re.setTypeParser=vs;Re.arrayParser=ws;Re.builtins=Ts;var De={text:{},binary:{}};function Nn(s){return String(s)}function As(s,t){return t=t||"text",De[t]&&De[t][s]||Nn}function vs(s,t,e){typeof t=="function"&&(e=t,t="text"),De[t][s]=e}hs.init(function(s,t){De.text[s]=t});ys.init(function(s,t){De.binary[s]=t})});var ca={};xr(ca,{ALLOWED_VAULT_VARIABLES:()=>Bt,BackendPlugin:()=>V,BookkeeperImporter:()=>Et,CLI:()=>gt,CLIRunner:()=>Qe,Command:()=>pt,DB:()=>Oe,DataPlugin:()=>Jt,EnvironmentVault:()=>ct,Exporter:()=>ie,ImportPlugin:()=>Ht,Password:()=>_t,ReportPlugin:()=>qt,SchemePlugin:()=>Gt,ServicePlugin:()=>Qt,TasenorExporter:()=>Ot,TilitinExporter:()=>Rt,TransactionImportHandler:()=>Ut,TransactionRules:()=>_e,TransactionUI:()=>Ue,TransferAnalyzer:()=>Te,Vault:()=>it,cleanUrl:()=>lt,cli:()=>kr,createUuid:()=>Us,data2csv:()=>zt,getServerRoot:()=>kt,getVault:()=>ve,isDevelopment:()=>qn,isProduction:()=>Rs,isTransactionImportConnector:()=>we,nodeEnv:()=>Kn,plugins:()=>ia,randomString:()=>pe,setServerRoot:()=>Cs,system:()=>ye,systemPiped:()=>Ds,tasenorFinalStack:()=>Gs,tasenorInitialStack:()=>zs,tasenorStack:()=>Qs,tokens:()=>te,vault:()=>F});module.exports=Sr(ca);p();p();var dt=x(require("fs")),Ge=x(require("path")),tn=x(require("glob")),nn=x(require("readline")),rn=x(require("form-data")),sn=require("argparse"),j=require("@dataplug/tasenor-common"),mt=x(ze()),Se;function Er(s){return Se||(Se=nn.default.createInterface({input:w.default.stdin,output:w.default.stdout})),new Promise(t=>{Se.question(s?`${s} `:">",e=>{t(e)})})}function Ir(){Se&&Se.close()}var pt=class{constructor(t){this.cli=t}get verbose(){return!!this.args.verbose}get debug(){return!!this.args.debug}addArguments(t){}setArgs(t){this.args=t}print(t){throw new Error(`Class ${this.constructor.name} does not implement print().`)}out(t,e){if(this.args.json)console.log(JSON.stringify(e,null,2));else{if(!this.verbose)try{this.print(e);return}catch(r){if(!/does not implement print/.test(`${r}`))throw r}let n=(r,a)=>{if(typeof a=="object")if(a===null)console.log(`${r} = null`);else if(a instanceof Array)for(let o=0;o<a.length;o++)console.log(`${r}[${o}]`),n(`  ${r}[${o}]`,a[o]);else for(let o of Object.keys(a))n(`  ${r}.${o}`,a[o]);else console.log(`${r} =`,a)};n(t,e)}}async run(){throw new Error(`A command ${this.constructor.name} does not implement run().`)}formForFile(t){let e=new rn.default,n=dt.default.readFileSync(t);return e.append("file",n,Ge.default.basename(t)),e}async get(t){await this.cli.login();let e=await this.cli.request("GET",t);if(!e.success)throw new Error(`Call to GET ${t} failed: ${JSON.stringify(e)}`);return e.data}async getUi(t){await this.cli.login();let e=await this.cli.requestUi("GET",t);if(!e.success)throw new Error(`Call to GET UI ${t} failed: ${JSON.stringify(e)}`);return e.data}async delete(t){await this.cli.login();let e=await this.cli.request("DELETE",t);if(!e.success)throw new Error(`Call to DELETE ${t} failed: ${JSON.stringify(e)}`);return e.data}async deleteUi(t,e=void 0){await this.cli.login();let n=await this.cli.requestUi("DELETE",t,e);if(!n.success)throw new Error(`Call to DELETE UI ${t} failed: ${JSON.stringify(n)}`);return n.data}async patch(t,e){await this.cli.login();let n=await this.cli.request("PATCH",t,e);if(!n.success)throw new Error(`Call to PATCH ${t} failed: ${JSON.stringify(n)}`);return n.data}async post(t,e){await this.cli.login();let n=await this.cli.request("POST",t,e);if(!n.success)throw new Error(`Call to POST ${t} failed: ${JSON.stringify(n)}`);return n.data}async postUi(t,e){await this.cli.login();let n=await this.cli.requestUi("POST",t,e);if(!n.success)throw new Error(`Call to POST UI ${t} failed: ${JSON.stringify(n)}`);return n.data}async postUpload(t,e){let n=this.formForFile(e);return this.post(t,n)}async runBy(t){let e=this.args[t];if(!e){this.help();return}if(typeof e!="string")throw new Error(`Invalid operation argument ${JSON.stringify(e)}.`);if(!this[e])throw console.log(this[e]),new Error(`There is no member function '${e}' in command class '${this.constructor.name}'.`);await this[e]()}str(t){return t==null?"":typeof t=="string"?t:t[0]}num(t){return t==null?0:parseFloat(this.str(t))}async periodId(t,e){if(!t)throw new Error(`Invalid database argument ${JSON.stringify(t)}`);let n=this.str(e);if(!n)throw new Error(`Invalid period argument ${JSON.stringify(n)}`);let r=await this.get(`/db/${t}/period`);if(/^\d{4}$/.test(n)){let a=`${n}-06-15`;r=r.filter(o=>o.start_date<=a&&a<=o.end_date)}else if(/^\d{4}-\d{2}-\d{2}$/.test(n))r=r.filter(a=>a.start_date<=n&&n<=a.end_date);else if(/^\d+$/.test(n)){let a=parseInt(n);r=r.filter(o=>o.id===a)}else throw new Error(`Invalid period argument ${JSON.stringify(n)}`);if(r.length>1)throw new Error(`Too many periods match to ${JSON.stringify(n)}`);if(!r.length)throw new Error(`No periods found matching ${JSON.stringify(n)}`);return r[0].id}async singlePeriod(t){let e=await this.get(`/db/${this.str(t)}/period`);if(e.length<1)throw new Error("There are no periods in the database.");if(e.length>1)throw new Error("There are too many periods in the database to set initial balance.");return e[0]}async readAccounts(t){if(!this.accounts){this.accounts={},this.accountsById={};let e=await this.get(`/db/${this.str(t)}/account`);for(let n of e)this.accounts[n.number]=n,this.accountsById[n.id||0]=n}}async accountId(t,e){await this.readAccounts(t);let n=this.str(e);if(!this.accounts[n])throw new Error(`No account found matching ${JSON.stringify(e)}`);return this.accounts[n].id}async entries(t,e){if(!e)throw new Error(`Invalid entry argument ${JSON.stringify(e)}.`);let n=typeof e=="string"?[e]:e,r=[];for(let a of n){let o=/^\s*(\d+)\s+(.+?)\s+([-+]?\d+([,.]\d+)?)$/.exec(a);if(!o)throw new Error(`Invalid transaction line ${JSON.stringify(a)}`);let c=Math.round(parseFloat(o[3].replace(",","."))*100);r.push({account_id:await this.accountId(t,o[1]),number:o[1],amount:c,description:o[2]})}return r}date(t){let e=this.str(t);if(!e||!/^\d{4}-\d{2}-\d{2}$/.test(e))throw new Error(`Invalid date argument ${JSON.stringify(t)}`);return e}value(t){t=this.str(t);try{return JSON.parse(t)}catch{return t}}async jsonData(t){if(t instanceof Array){let n={};for(let r of t)Object.assign(n,await this.jsonData(r));return n}if(!t||typeof t!="string")throw new Error(`Invalid JSON data argument ${JSON.stringify(t)}.`);let e;t[0]==="@"?e=dt.default.readFileSync(t.substring(1)).toString("utf-8"):e=t;try{return JSON.parse(e)}catch{throw new Error(`Failed to parse JSON ${e.substr(0,1e3)}.`)}}async plugin(t){if(this.plugins||(this.plugins=await this.getUi("/internal/plugins")),t instanceof Array){let r=[];for(let a of t)r.push(await this.plugin(a));return r}let e=this.str(t),n=this.plugins.filter(r=>r.code===e);if(!n.length)throw new Error(`Cannot find plugin '${e}'.`);return n[0]}async importer(t,e){this.importers||(this.importers=await this.get(`/db/${this.str(t)}/importer`));let n=this.str(e),r=this.importers.filter(a=>a.name===n);if(!r.length)throw new Error(`Cannot find importer '${n}'.`);return r[0]}async tag(t,e){let r=(await this.get(`/db/${t}/tags`)).filter(a=>a.tag===e);if(!r.length)throw new Error(`Cannot find a tag '${e}.`);return r[0]}help(){let t=this.cli.originalArgs.concat(["-h"]);this.cli.run([],t)}},Qe=class{constructor(...t){this.commands={};let e=Ge.default.join(__dirname,"..","dist","commands");for(let n of t.concat(e))for(let r of tn.default.sync(`${n}/*.js`)){let a=Ge.default.basename(r).replace(/\.js$/,""),o=require(r).default,c=new o(this);this.commands[a]=c}}async request(t,e,n){let r=j.net[t],a=e.startsWith("/")?`${this.api}${e}`:`${this.api}/${e}`;return this.doRequest(r,a,n)}async requestUi(t,e,n){let r=j.net[t],a=e.startsWith("/")?`${this.uiApi}${e}`:`${this.uiApi}/${e}`;return this.doRequest(r,a,n)}async doRequest(t,e,n){let r=null,a,o=this.args.retry||0;for(let c=-1;c<o;c++){try{if(r=await t(e,n),r&&r.success)return r;a=new Error(JSON.stringify(r))}catch(u){a=u}let i=(c+1)*5;(0,j.note)(`Waiting for ${i} seconds`),await(0,j.waitPromise)(i*1e3)}throw a}async login(){if(this.token)return;(0,j.log)(`Logging in to ${this.api} as ${this.user}`);let t=await this.request("POST","/auth",{user:this.user,password:this.password});if(t.success&&t.data&&t.data instanceof Object&&"token"in t.data&&"refresh"in t.data){let{token:e,refresh:n}=t.data;this.configureApi(this.api,{token:e,refresh:n}),this.configureApi(this.uiApi,{token:e,refresh:n}),this.token=e}}configureApi(t,e=void 0){j.net.configure({sites:{[t]:{}}}),e&&(j.net.setConf(t,"token",e.token),j.net.setConf(t,"refreshToken",e.refresh))}},gt=class extends Qe{addDefaults(t){for(let e of t){let{name:n,envName:r,defaultValue:a}=e;this.args[n]===void 0&&(this.args[n]=w.default.env[r]||a)}}async run(t=[],e=[]){let n=(o,c)=>{let i=o[c];return delete o[c],i?typeof i=="string"?i:i[0]:""},r=new sn.ArgumentParser({description:"Tasenor command line tool"});r.add_argument("command",{help:"Command handling the operation",choices:Object.keys(this.commands)}),r.add_argument("--debug","-d",{help:"If set, show logs for requests etc",action:"store_true",required:!1}),r.add_argument("--json",{help:"If set, show output as JSON",action:"store_true",required:!1}),r.add_argument("--verbose","-v",{help:"If set, show more comprehensive output",action:"store_true",required:!1}),r.add_argument("--user",{help:"User email for logging in (use USERNAME env by default)",type:String,required:!1}),r.add_argument("--password",{help:"User password for logging in (use PASSWORD env by default)",type:String,required:!1}),r.add_argument("--api",{help:"The server base URL providing Bookkeeper API (use API env by default)",type:String,required:!1}),r.add_argument("--ui-api",{help:"The server base URL providing Bookkeeper UI API (use UI_API env by default)",type:String,required:!1}),r.add_argument("--retry",{help:"If given, retry this many times if network call fails",type:Number,required:!1}),this.originalArgs=e.length?(0,mt.default)(e):(0,mt.default)(w.default.argv.splice(2));let a;for(let o=0;o<this.originalArgs.length;o++)if(this.commands[this.originalArgs[o]]){a=this.commands[this.originalArgs[o]];break}a&&a.addArguments(r),this.args=r.parse_args(this.originalArgs),a?.setArgs(this.args),this.addDefaults(t),this.user=n(this.args,"user"),this.password=n(this.args,"password"),this.api=n(this.args,"api"),this.uiApi=n(this.args,"ui_api"),delete this.args.command,this.args.debug||(0,j.mute)(),this.api&&this.configureApi(this.api),this.uiApi&&this.configureApi(this.uiApi),a&&await a.run()}},kr={ask:Er,exit:Ir};p();p();var Hn=x(require("glob")),Q=x(require("path")),he=x(require("fs"));var L=require("@dataplug/tasenor-common");p();var G=require("@dataplug/tasenor-common");var ge=x(require("knex")),Ze=require("pg"),Xe=x(Fn()),Ln=require("ts-opaque"),St=s=>s;Ze.types.setTypeParser(Xe.builtins.TIMESTAMPTZ,St);Ze.types.setTypeParser(Xe.builtins.TIMESTAMP,St);Ze.types.setTypeParser(Xe.builtins.DATE,St);var et=async(s,t)=>!!await s("databases").select("*").where({name:t}).first(),Ce=async(s,t,e=null)=>{let n=new G.Crypto(F.get("SECRET")),r=await s("databases").select("*").where({name:t}).first(),a=n.decrypt(r.password);if(!a)throw new Error("Failed to get password.");return{client:"postgresql",connection:{host:e===null?r.host:e,port:r.port,database:r.name,user:r.user,password:a},pool:{min:1,max:3}}},ae={},Un=async(s,t,e=null)=>{if(!await et(s,t))throw delete ae[t],new Error(`Database '${t}' does not exist.`);let n=e?`${t}:${e}`:t;if(!ae[n]){let r=await Ce(s,t,e);ae[n]=(0,ge.default)(r)}return ae[n]},bs=async s=>{for(let t of Object.entries(ae))t[0].split(":")[0]===s&&((0,G.log)(`Disconnecting ${t[0]}`),await t[1].destroy(),delete ae[t[0]])},_n=()=>{let s=new URL(F.get("DATABASE_URL"));return{client:"postgresql",connection:{host:s.hostname,port:parseInt(s.port)||5432,database:"postgres",user:F.get("DATABASE_ROOT_USER"),password:F.get("DATABASE_ROOT_PASSWORD")},pool:{min:1,max:1}}},jn=s=>{let t=new URL(s);return{client:"postgresql",connection:{host:t.hostname,port:parseInt(t.port)||5432,database:t.pathname.replace(/^\//,""),user:t.username,password:t.password},pool:{min:1,max:5}}},de,$t=()=>de||(de=(0,ge.default)(_n()),de),Bn=()=>jn(F.get("DATABASE_URL")),me,Vn=()=>me||(me=(0,ge.default)(Bn()),me),Mn=s=>(0,G.isDatabaseName)(s),Ps=async(s,t,e,n,r=null,a=null)=>{if(await et(s,t))throw new Error(`Database '${t}' exist.`);if(!Mn(t))throw new Error(`Invalid database name '${t}'.`);let o=$t(),c="user"+pe(20),i=pe(64),u=new G.Crypto(F.get("SECRET")),l={name:t,host:e,port:n,user:c,password:u.encrypt(i),config:{}};await o.raw(`CREATE USER "${c}" WITH PASSWORD '${i}'`),await o.raw(`CREATE DATABASE "${t}"`),await o.raw(`GRANT ALL PRIVILEGES ON DATABASE "${t}" TO "${c}"`);let f=(await s("databases").insert(l).returning("id"))[0].id;return r&&await Jn(s,t,r,a),f},Jn=async(s,t,e,n=null)=>{let r=await Ce(s,t,n);r.migrations={directory:e};let a=(0,ge.default)(r);await a.migrate.latest(),await a.destroy()},xs=async(s,t,e,n=null)=>{let r=await Ce(s,t,n);r.migrations={directory:e};let a=(0,ge.default)(r);await a.migrate.rollback(),await a.destroy()},Ss=async(s,t,e=null)=>{let n=await s("databases").where({name:t}).first();if(!n)return"Database not found.";await(await Un(s,t,e)).raw(`DROP OWNED BY ${n.user}`),bs(t),await s("database_users").where({database_id:n.id}).delete(),await s("databases").where({id:n.id}).delete();let a=$t();return await a.raw(`DROP OWNED BY ${n.user}`),await a.raw(`DROP USER ${n.user}`),await a.raw(`DROP DATABASE ${n.name} WITH (FORCE)`),null};async function $s(s,t){let e=1,n=t;for(;await et(s,(0,Ln.create)(n));)e++,n=`${t}${e}`;return n}async function Es(){me&&((0,G.log)("Disconnecting master DB."),await me.destroy()),de&&((0,G.log)("Disconnecting root DB."),await de.destroy());for(let s of Object.entries(ae))(0,G.log)(`Disconnecting ${s[0]}`),await s[1].destroy()}async function Is(s=null){let t=[];await F.initialize();let e=await Vn(),n=await e("databases").select("name","host","port","user","password");for(let r of n){let a=await Ce(e,r.name,s),{host:o,port:c,database:i,user:u,password:l}=a.connection;t.push({host:o,port:c,database:i,user:u,password:l})}return t}function ks(){return w.default.env.DATABASE_URL?new URL(w.default.env.DATABASE_URL).hostname:null}var Oe={create:Ps,customerDbs:Is,destroy:Ss,disconnectAll:Es,envHost:ks,exists:et,findName:$s,get:Un,getConfig:Ce,getKnexConfig:jn,getMaster:Vn,getMasterConfig:Bn,getRoot:$t,getRootConfig:_n,isValidName:Mn,migrate:Jn,rollback:xs};var oe=require("ts-opaque"),Et=class{constructor(){this.VERSION=null}async readTsv(t){(0,L.log)(`Reading ${t}.`);let n=he.default.readFileSync(t).toString("utf-8").trim().split(`
`).map(o=>o.split("	")),r=n[0];r[0]=r[0].replace(/^#\s+/,"");let a=[];for(let o=1;o<n.length;o++){let c={};for(let i=0;i<r.length;i++)c[r[i]]=n[o][i]||"";a.push(c)}return a}setVersion(t){this.VERSION=JSON.parse(he.default.readFileSync(t).toString("utf-8")),(0,L.log)(`Found file format version ${this.VERSION}.`)}async readAccountTsv(t){let e=/([a-z][a-z])-([A-Z][A-Z][A-Z])\.tsv$/.exec(t);if(!e)throw new Error(`File name ${t} has not correct format.`);let n=[],[,r,a]=e,o=await this.readTsv(t),c=[];for(let i of o)if(i.text!==""){let u=new Set(i.flags?i.flags.split(" "):[]),l=i.code?/^\d+(\.\d+)$/.test(i.code)?i.code:i.code.replace(/^_+/,""):null,f;try{f=i.data===void 0||i.data===""?{}:JSON.parse(i.data)}catch{throw new Error(`Parsing account data failed: ${i.data}.`)}l!==null&&(f.code=l),u.has("FAVOURITE")&&(f.favourite=!0);let d={language:r,currency:a,number:i["number / title"],name:i.text,type:i.type,data:f};if(c.length){for(let h of c)h.number=d.number,n.push(h);c=[]}n.push(d)}else{let u=/^(_*)/.exec(i["number / title"]),l={text:i["number / title"].replace(/^_+/,""),number:null,level:u?u[1].length:0};c.push(l)}return n}async setAccounts(t,e){let n=0;for(let r of e){let a=await this.readAccountTsv(r);for(let o of a)o.text?await t("heading").insert(o).catch(c=>{throw(0,L.error)(`Failed to insert a heading ${JSON.stringify(o)}`),c}):await t("account").insert(o).catch(c=>{throw(0,L.error)(`Failed to insert an account ${JSON.stringify(o)}`),c}),n++}(0,L.log)(`Inserted ${n} rows to the database.`)}async setPeriods(t,e){(0,L.log)(`Reading period file ${e}.`);let n=0,r=await this.readTsv(e);for(let a of r){let o={start_date:a.start,end_date:a.end,locked:a.flags==="LOCKED"};await t("period").insert(o),n++}(0,L.log)(`Inserted ${n} rows to the database.`)}async setEntries(t,e,n){(0,L.log)(`Reading entry file ${e}.`);let r=0,a=await t("period").select("id").orderBy("start_date"),o={},i=(await t("account").select("id","number").where({language:n.language})).reduce((m,S)=>({[S.number]:S.id,...m}),{}),u=1;for(let m of a)o[u++]=m.id;let l=await this.readTsv(e),f,d,h;for(let m of l){let S=/^Period (\d+)/.exec(m.number);if(S){if(f=o[parseInt(S[1])],!f)throw Error(`Inconsistent periods. Cannot find period number ${u}.`);continue}if(m.number!==""){let E={period_id:f,number:parseInt(m.number),date:m["date / account"]};d=(await t("document").insert(E).returning("id"))[0].id,r++,h=1;continue}if(!i[m["date / account"]])throw Error(`Inconsistent accounts. Cannot account find number ${m["date / account"]}.`);let y=parseFloat(m.amount),A=new Set(m.flags.split(" ")),T={};(A.has("VAT_IGNORE")||A.has("VAT_RECONCILED"))&&(T.VAT={},A.has("VAT_IGNORE")&&(T.VAT.ignore=!0),A.has("VAT_RECONCILED")&&(T.VAT.reconciled=!0));let g={document_id:d,account_id:i[m["date / account"]],debit:!(y<0),amount:Math.abs(y),description:m.text,row_number:h,data:T};h++,await t("entry").insert(g).catch(E=>{throw(0,L.error)(`Failed to insert an entry ${JSON.stringify(g)}`),E}),r++}(0,L.log)(`Inserted ${r} rows to the database.`)}async setConfig(t,e){(0,L.log)("Saving configuration.");let n=(r,a="")=>{let o={};return Object.keys(r).forEach(c=>{r[c]!==null&&typeof r[c]=="object"&&r[c].length===void 0?Object.assign(o,n(r[c],`${c}.`)):o[`${a}${c}`]=r[c]}),o};for(let[r,a]of Object.entries(n(e)))await t("settings").insert({name:r,value:JSON.stringify(a)})}async setTags(t,e){(0,L.log)(`Reading tag file ${e}.`);let n=Q.default.dirname(e),r=0,a=await this.readTsv(e);for(let o of a){let c=he.default.readFileSync(Q.default.join(n,o.picture)),i={tag:o.tag,name:o.name,mime:o.mime,picture:c,type:o.type,order:o.order};await t("tags").insert(i),r++}(0,L.log)(`Inserted ${r} rows to the database.`)}async clearEverything(t){(0,L.log)("Deleting all existing data."),await t("entry").del(),await t("document").del(),await t("account").del(),await t("heading").del(),await t("period").del(),await t("tags").del(),await t("settings").del()}async restore(t,e,n,r=null){let a=await Oe.get(t,(0,oe.create)(e),r);this.setVersion((0,oe.create)(Q.default.join(n,"VERSION")));let o=JSON.parse(he.default.readFileSync(Q.default.join(n,"settings.json")).toString("utf-8"));if(!o.language)throw new Error("Configuration does not have language.");await this.clearEverything(a),await this.setConfig(a,o);let c=Hn.default.sync(Q.default.join(n,"accounts","*"));await this.setAccounts(a,c);let i=Q.default.join(n,"periods.tsv");await this.setPeriods(a,(0,oe.create)(i));let u=Q.default.join(n,"entries.tsv");await this.setEntries(a,(0,oe.create)(u),o);let l=Q.default.join(n,"tags.tsv");await this.setTags(a,(0,oe.create)(l))}async run(t,e,n,r,a=null){if(n=(0,oe.create)(Q.default.resolve(n)),!he.default.existsSync(n))throw new Error(`Backup ${n} does not exist.`);await ye(`cd "${r}" && tar xf "${n}"`),await this.restore(t,e,r,a),await ye(`rm -fr "${r}"`)}};p();p();var q=x(require("path")),Ne=x(require("fs")),Fe=require("@dataplug/tasenor-common"),X=require("ts-opaque");p();var tt=require("child_process"),ne=require("@dataplug/tasenor-common");async function ye(s,t=!1){return t||(0,ne.log)(`Running system command: ${s}`),new Promise((e,n)=>{(0,tt.exec)(s,{maxBuffer:1024*1024*500},(r,a,o)=>{if(r)return t||(0,ne.error)(r),n(r);o&&!t&&(0,ne.note)(`${o}`),a&&!t&&(0,ne.log)(`${a}`),e(a)})})}async function Ds(s,t=!1,e=!1){return t||(0,ne.log)(`Running system command: ${s}`),new Promise((n,r)=>{let a="",o=(0,tt.spawn)(s,{shell:!0});o.stdout.on("data",c=>{a+=c,t||w.default.stdout.write(c)}),o.stderr.on("data",c=>{t||w.default.stderr.write(c)}),o.on("close",c=>{c?e?n(null):r(new Error(`Call '${s}' failed with code ${c}.`)):n(a)})})}function Rs(){return!qn()}function Kn(){let s=w.default.env.NODE_ENV||"production";if(!["development","staging","production"].includes(s))throw new Error(`Invalid NODE_ENV ${s}.`);return s}function qn(){return Kn()==="development"}var It;function Cs(s){It=s}function kt(){if(!It)throw new Error("Server root is not set.");return It}var zn=x(require("dayjs")),ie=class{constructor(){this.VERSION=1}async getAccounts(t){throw new Error(`Exporter ${this.constructor.name} does not implement getAccounts().`)}async getPeriods(t){throw new Error(`Exporter ${this.constructor.name} does not implement getPeriods().`)}async getEntries(t){throw new Error(`Exporter ${this.constructor.name} does not implement getEntries().`)}async getConfig(t){throw new Error(`Exporter ${this.constructor.name} does not implement getConfig().`)}async getTags(t,e){throw new Error(`Exporter ${this.constructor.name} does not implement getTags().`)}writeTsv(t,e){(0,Fe.log)(`Writing ${t}`),Ne.default.writeFileSync(t,e.map(n=>n.join("	")).join(`
`)+`
`)}writeJson(t,e){(0,Fe.log)(`Writing ${t}`),Ne.default.writeFileSync(t,JSON.stringify(e,null,4)+`
`)}async dump(t,e){let n=q.default.join(e,"accounts");Ne.default.existsSync(n)||Ne.default.mkdirSync(n),(0,Fe.log)(`Saving file format version ${this.VERSION}.`),this.writeJson((0,X.create)(q.default.join(e,"VERSION")),this.VERSION);let r=await this.getConfig(t);this.writeJson((0,X.create)(q.default.join(e,"settings.json")),r);let a=await this.getAccounts(t);this.writeTsv((0,X.create)(q.default.join(n,"fi-EUR.tsv")),a);let o=await this.getPeriods(t);this.writeTsv((0,X.create)(q.default.join(e,"periods.tsv")),o);let c=await this.getEntries(t);this.writeTsv((0,X.create)(q.default.join(e,"entries.tsv")),c);let i=await this.getTags(t,e);return this.writeTsv((0,X.create)(q.default.join(e,"tags.tsv")),i),r}async makeTar(t,e,n){let a=`${(t.companyName||"unknown").replace(/[^-a-zA-Z0-9]/,"_")}-${(0,zn.default)().format("YYYY-MM-DD")}-export.tgz`,o=`${e}/../${a}`,c=w.default.cwd();return n||(n=(0,X.create)(q.default.join(c,a))),q.default.dirname(n)==="."&&(n=(0,X.create)(q.default.join(c,q.default.basename(n)))),await ye(`cd "${e}" && tar cjf "${o}" . && mv "${o}" "${n}" && rm -fr ${e}`),(0,Fe.log)(`Package ready ${n}`),n}};p();var Gn=x(require("knex")),Ct=x(require("dayjs")),Qn=x(require("dayjs/plugin/utc")),nt=x(require("path")),Le=x(require("fs")),W=require("@dataplug/tasenor-common");Ct.default.extend(Qn.default);var Os=1,Ns=2,Fs=Object.keys(W.AccountType);function Dt(s){return Ct.default.utc(s).add(2,"hours").format("YYYY-MM-DD")}var Rt=class extends ie{database(t){return(0,Gn.default)({client:"sqlite3",connection:{filename:t},useNullAsDefault:!0})}async getAccounts(t){let e={};for(let r of await t("coa_heading").select("*").orderBy("level")){e[r.number]=e[r.number]||[];let a="";for(let o=0;o<r.level;o++)a+="_";r.text=a+r.text,e[r.number].push(r)}let n=[["# number / title","text","type","code","flags","data"]];for(let r of await t("account").select("*").orderBy("number")){if(e[r.number])for(let a of e[r.number])n.push([a.text,"","","","",""]);n.push([r.number,r.name,Fs[r.type],r.vat_percentage||"",r.flags?"FAVOURITE":"",""])}return(0,W.log)(`Found ${n.length} lines of data for headings and accounts.`),n}async getPeriods(t){let e=[["# start","end","flags"]];for(let n of await t("period").select("*").orderBy("start_date"))e.push([Dt(n.start_date),Dt(n.end_date),n.locked?"LOCKED":""]);return(0,W.log)(`Found ${e.length} lines of data for periods.`),e}async getEntries(t){let e=[["# number","date / account","amount","text","flags"]],n=1;for(let r of await t("period").select("*").orderBy("start_date")){e.push([`Period ${n}`,"","","",""]);for(let a of await t("document").select("*").where({period_id:r.id}).orderBy("period_id","number")){e.push([a.number,Dt(a.date),"","",""]);for(let o of await t("entry").join("account","entry.account_id","account.id").select("entry.*","account.number").where({document_id:a.id}).orderBy("row_number")){let c=[];o.flags&Os&&c.push("VAT_IGNORE"),o.flags&Ns&&c.push("VAT_RECONCILED"),e.push(["",o.number,o.debit?o.amount:-o.amount,o.description,c.join(" ")])}}n++}return(0,W.log)(`Found ${e.length} lines of data for documents and entries.`),e}async hasTable(t,e){let n=!0;try{await t(e).select("*").limit(1)}catch{n=!1}return n}async getConfig(t){let e=W.Bookkeeper.createConfig();e.language="fi",e.currency="EUR",e.scheme="FinnishLimitedCompanyComplete",e.schemeVersion="1.0.0",await t("account").select("*").where({number:"29391"}).first()&&(e.VAT={salesAccount:"29391",purchasesAccount:"29392",receivableAccount:"1763",payableAccount:"2939",delayedReceivableAccount:"1845",delayedPayableAccount:"2977",statementTagTypes:[]});for(let n of await t("settings").select("name","business_id"))e.companyName=n.name,e.companyCode=n.business_id;if(await this.hasTable(t,"fyffe_settings"))for(let n of await t("fyffe_settings").select("*"))switch(n.name){case"income-statement-tag-types":e.FinnishIncomeStatementReport={tagTypes:JSON.parse(n.value)};break;default:throw new Error(`Unable to parse setting '${n.name}'`)}return e.VAT&&e.VAT.statementTagTypes&&!e.FinnishIncomeStatementReport&&(e.FinnishIncomeStatementReport={tagTypes:e.VAT.statementTagTypes}),e}async getTags(t,e){let n=[["# tag","name","mime","picture","type","order"]],r=nt.default.join(e,"pictures");if(Le.default.existsSync(r)||Le.default.mkdirSync(r),await this.hasTable(t,"tags"))for(let a of await t("tags").select("*").orderBy("order")){let o=a.mime.split("/")[1],c=`${a.type}-${a.order}.${o}`;Le.default.writeFileSync(nt.default.join(r,c),a.picture),n.push([a.tag,a.name,a.mime,nt.default.join("pictures",c),a.type,a.order])}return(0,W.log)(`Found ${n.length} lines of data for tags.`),n}async getReports(t){let e={};for(let n of await t("report_structure").select("*"))e[n.id]=n.data;return(0,W.log)(`Found reports ${Object.keys(e)}.`),e}convertReport(t){let e=[["# accounts","title","flags"]];for(let n of t.trim().split(`
`)){let r;if(n!==""){if(n==="-")r=["","",["BREAK"]];else if(n==="--")r=["","",["NEW_PAGE"]];else{let a=n.split(";"),o=a[0],c="";for(let u=0;u<parseInt(o[2]);u++)c+="_";let i=[];switch(o[0]){case"H":i=["HIDE_TOTAL","REQUIRED"];break;case"G":i=["HIDE_TOTAL"];break;case"S":i=["REQUIRED"];break;case"D":i=["DETAILS"];break;case"T":break;default:throw new Error(`Cannot parse letter ${o[0]} in report code ${o} of line ${n}.`)}switch(o[1]){case"B":i.push("BOLD");break;case"I":i.push("ITALIC");break;case"P":break;default:throw new Error(`Cannot parse letter ${o[1]} in report code ${o} of line ${n}.`)}if(a.length===4)r=[`${a[1]}-${a[2]}`,c+a[3],i];else if(a.length===6)r=[`${a[1]}-${a[2]} ${a[3]}-${a[4]}`,c+a[5],i];else if(a.length===8)r=[`${a[1]}-${a[2]} ${a[3]}-${a[4]} ${a[5]}-${a[6]}`,c+a[7],i];else throw new Error(`Unable to parse line ${n} since there are ${a.length} parts.`)}e.push([r[0],r[1],r[2].join(" ")])}}return e}async run(t,e,n){if(!Le.default.existsSync(t))throw new Error(`Database ${e} does not exist.`);let r=this.database(t),a=await this.dump(r,e);return this.makeTar(a,e,n)}};p();var ce=require("@dataplug/tasenor-common");var Wn=x(require("knex")),Yn=x(require("dot-object")),rt=x(require("path")),st=x(require("fs")),Ot=class extends ie{async getConfig(t){let e=ce.Bookkeeper.createConfig(),n={};for(let r of await t("settings").select("*"))n[r.name]=r.value;return Object.assign(e,Yn.default.object(n)),e}async getAccounts(t){let e={};for(let r of await t("heading").select("*").orderBy("level")){e[r.number]=e[r.number]||[];let a="";for(let o=0;o<r.level;o++)a+="_";r.text=a+r.text,e[r.number].push(r)}let n=[["# number / title","text","type","code","flags","data"]];for(let r of await t("account").select("*").orderBy("number")){if(e[r.number])for(let c of e[r.number])n.push([c.text,"","","","",""]);let a=[];r.data.favourite&&a.push("FAVOURITE");let o=r.data.code||"";delete r.data.code,delete r.data.favourite,n.push([r.number,r.name,r.type,o,a.join(" "),Object.keys(r.data).length?JSON.stringify(r.data):""])}return(0,ce.log)(`Found ${n.length} lines of data for headings and accounts.`),n}async getPeriods(t){let e=[["# start","end","flags"]];for(let n of await t("period").select("*").orderBy("start_date"))e.push([n.start_date,n.end_date,n.locked?"LOCKED":""]);return(0,ce.log)(`Found ${e.length} lines of data for periods.`),e}async getEntries(t){let e=[["# number","date / account","amount","text","flags"]],n=1;for(let r of await t("period").select("*").orderBy("start_date")){e.push([`Period ${n}`,"","","",""]);for(let a of await t("document").select("*").where({period_id:r.id}).orderBy("period_id","number")){e.push([a.number,a.date,"","",""]);for(let o of await t("entry").join("account","entry.account_id","account.id").select("entry.*","account.number").where({document_id:a.id}).orderBy("row_number")){let c=[];o.data.vat&&o.data.vat.ignore&&c.push("VAT_IGNORE"),o.data.vat&&o.data.vat.reconciled&&c.push("VAT_RECONCILED"),e.push(["",o.number,o.debit?o.amount:-o.amount,o.description,c.join(" ")])}}n++}return(0,ce.log)(`Found ${e.length} lines of data for documents and entries.`),e}async getTags(t,e){let n=[["# tag","name","mime","picture","type","order"]],r=rt.default.join(e,"pictures");st.default.existsSync(r)||st.default.mkdirSync(r);for(let a of await t("tags").select("*").orderBy("order")){let o=a.mime.split("/")[1],c=`${a.type}-${a.order}.${o}`;st.default.writeFileSync(rt.default.join(r,c),a.picture),n.push([a.tag,a.name,a.mime,rt.default.join("pictures",c),a.type,a.order])}return(0,ce.log)(`Found ${n.length} lines of data for tags.`),n}async run(t,e,n=void 0){let r=Oe.getKnexConfig(t),a=await this.dump((0,Wn.default)(r),e);return this.makeTar(a,e,n)}async runDb(t,e,n=void 0){let r=await this.dump(t,e);return this.makeTar(r,e,n)}};p();p();var je=require("interactive-elements"),O=require("interactive-stateful-process"),U=require("@dataplug/tasenor-common");p();var Lt=x(ze()),Zn=x(require("merge")),Xn=require("sprintf-js"),b=require("interactive-stateful-process"),C=require("@dataplug/tasenor-common");p();function we(s){if(typeof s!="object"||s===null)return!1;let t=s.getRate;return!(typeof t!="function"||(t=s.getStock,typeof t!="function")||(t=s.initializeBalances,typeof t!="function")||(t=s.getAccountCanditates,typeof t!="function")||(t=s.getVAT,typeof t!="function"))}function Ls(s,t){return s.size!==t.size?!1:new Set([...s,...t]).size===s.size}function Nt(s,t){return Ls(s,new Set(t))}function Ft(s,t=null,e=!1){let n;return t!==null?n=(0,Xn.sprintf)(`%.${t}f`,s):n=`${s}`,e&&s>=0&&(n=`+${n}`),n}var Te=class{constructor(t,e,n){this.handler=t,this.config=e,this.state=n,this.stocks={},this.balances=new C.BalanceBookkeeping}get UI(){return this.handler.UI}async initialize(t){await this.handler.system.connector.initializeBalances(t,this.balances,this.config)}getBalances(){return this.balances.summary()}getBalance(t){return this.balances.get(t)}applyBalance(t){return this.balances.apply(t)}getConfig(t,e=void 0){if(!this.config[t]){if(e!==void 0)return e;throw new b.SystemError(`A variable ${t} is not configured for transfer analyser.`)}return this.config[t]}async getTranslation(t){return this.handler.getTranslation(t,this.getConfig("language"))}getLines(t){return this.handler.getLines(this.state,t)}async collectAccounts(t,e,n={findMissing:!1}){let r=[],a={};for(let o of e.transfers){let c=await this.getAccount(o.reason,o.type,o.asset,t.id);if(c===void 0){if(!n.findMissing)throw new b.BadState(`Unable to find an account number for ${o.reason}.${o.type}.${o.asset}.`);r.push(`${o.reason}.${o.type}.${o.asset}`);continue}if(a[`${o.reason}.${o.type}.${o.asset}`]=c,o.reason==="trade"&&o.type==="stock"&&this.getConfig("allowShortSelling",!1)){let i=await this.getAccount("trade","short",o.asset,t.id);if(i===void 0){if(!n.findMissing)throw new b.BadState(`Unable to find an account number for trade.short.${o.asset}.`);r.push(`trade.short.${o.asset}`)}else a[`trade.short.${o.asset}`]=i;continue}}return n.findMissing?r:a}async collectOtherValues(t,e){let n=this.getConfig("currency"),r=new Set(t.transfers.filter(l=>!["fee"].includes(l.reason)).map(l=>l.reason)),a=new Set(t.transfers.filter(l=>!["fee"].includes(l.reason)).map(l=>l.type));function o(l,f){return Nt(r,l)&&Nt(a,f)}function c(l,f,d=null){return typeof f=="string"&&(f=[f]),t.transfers.filter(h=>h.reason===l&&f.includes(h.type)&&(d===null||h.asset===d))}function i(l,f,d=null){let h=c(l,f,d);if(h.length<1)throw new b.InvalidFile(`Dit not find entries matching ${l}.${f}.${d} from ${JSON.stringify(t)}`);if(h.length>1)throw new b.InvalidFile(`Found too many entries matching ${l}.${f}.${d}: ${JSON.stringify(h)}`);return h[0]}e.currency=n,e.exchange=this.handler.name.replace(/Import$/,""),t.transfers.forEach(l=>{l.data&&Object.assign(e,l.data)});let u;if(o(["trade"],["currency","crypto"])||o(["trade"],["currency","stock"])){let l=i("trade","currency");if(l.amount===void 0)throw new b.SystemError(`Invalid transfer amount undefined in ${JSON.stringify(l)}.`);u=l.amount<0?"buy":"sell";let f=i("trade",["crypto","stock"]);if(f.amount===void 0)throw new b.SystemError(`Invalid transfer amount undefined in ${JSON.stringify(f)}.`);e.takeAmount=Ft(f.amount,null,!0),e.takeAsset=f.asset}else if(o(["trade"],["crypto"])||o(["trade"],["stock"]))u="trade";else if(o(["trade"],["currency","short"])){if(!e.kind)throw new b.BadState(`Kind is not defined in values for short trade ${JSON.stringify(t.transfers)}.`);u=e.kind}else if(o(["forex"],["currency"])||o(["forex","profit"],["currency"])||o(["forex","loss"],["currency"])){u="forex";let l=t.transfers.filter(d=>d.reason==="forex"&&d.type==="currency"&&d.asset===n);if(l.length===0)throw new b.SystemError(`Cannot find transfer of currency ${n} from ${JSON.stringify(l)}.`);if(l.length>1)throw new b.SystemError(`Too many transfers of currency ${n} in ${JSON.stringify(l)}.`);if(l[0].amount===void 0)throw new b.SystemError(`Invalid transfer amount undefined in ${JSON.stringify(l)}.`);let f=t.transfers.filter(d=>d.reason==="forex"&&d.type==="currency"&&d.asset!==n);if(l.length===0)throw new b.SystemError(`Cannot find transfer of currency not ${n} from ${JSON.stringify(l)}.`);if(l.length>1)throw new b.SystemError(`Too many transfers of currency not ${n} in ${JSON.stringify(l)}.`);if(f[0].amount===void 0)throw new b.SystemError(`Invalid transfer amount undefined in ${JSON.stringify(f)}.`);e.takeAsset=l[0].amount<0?f[0].asset:l[0].asset,e.giveAsset=l[0].amount<0?l[0].asset:f[0].asset}else if(o(["dividend","income"],["currency","statement"])||o(["tax","dividend","income"],["currency","statement"]))u="dividend";else if(o(["income"],["currency","statement"])||o(["income","tax"],["currency","statement"])){u="income";let l=i("income","statement");e.name=await this.getTranslation(`income-${l.asset}`)}else if(o(["income"],["account"])){u="income";let l=t.transfers.filter(f=>f.type==="account"&&f.data&&f.data.text!==void 0).map(f=>f.data?.text);if(!l.length)throw new b.SystemError(`If transfer uses direct 'account' type, one of the parts must have text defined in data: ${JSON.stringify(t.transfers)}`);e.name=l.join(" ")}else if(o(["investment"],["currency","statement"])){u="investment";let l=i("investment","statement");e.name=await this.getTranslation(`income-${l.asset}`)}else if(o(["expense"],["currency","statement"])||o(["expense","tax"],["currency","statement"])){u="expense";let l=i("expense","statement");e.name=await this.getTranslation(`expense-${l.asset}`)}else if(o(["expense"],["account"])){u="expense";let l=t.transfers.filter(f=>f.type==="account"&&f.data&&f.data.text!==void 0).map(f=>f.data?.text);if(!l.length)throw new b.SystemError(`If transfer uses direct 'account' type, one of the parts must have text defined in data: ${JSON.stringify(t.transfers)}`);e.name=l.join(" ")}else if(o(["distribution"],["currency","statement"])){u="distribution";let l=i("distribution","statement");e.name=await this.getTranslation(`expense-${l.asset}`)}else if(o(["tax"],["currency","statement"])){u="tax";let l=i("tax","statement");e.name=await this.getTranslation(`tax-${l.asset}`)}else if(o(["deposit"],["currency","external"])){u="deposit";let l=i("deposit","currency",n);if(l.amount===void 0)throw new b.SystemError(`Invalid transfer amount undefined in ${JSON.stringify(l)}.`)}else if(o(["withdrawal"],["currency","external"])){u="withdrawal";let l=i("withdrawal","currency",n);if(l.amount===void 0)throw new b.SystemError(`Invalid transfer amount undefined in ${JSON.stringify(l)}.`)}else if(o(["transfer"],["currency","external"])){u="transfer";let l=i("transfer","currency",n);if(l.amount===void 0)throw new b.SystemError(`Invalid transfer amount undefined in ${JSON.stringify(l)}.`);let f=i("transfer","external");e.service=f.asset}else if(o(["correction"],["currency","statement"])||o(["tax","correction"],["currency","statement"])||o(["tax","correction"],["statement"])){u="correction";let l=t.transfers.filter(d=>d.reason!=="tax"&&d.type==="statement").reduce((d,h)=>d.add(h.asset),new Set);if(l.size>1)throw new b.SystemError(`Mixed asset ${[...l].join(" and ")} corrections not supported in ${JSON.stringify(t.transfers)}`);if(!l.size)throw new b.SystemError(`Cannot find any statement types in ${JSON.stringify(t.transfers)}`);let f=l.values().next().value;/^INCOME/.test(f)?e.name=await this.getTranslation(`income-${f}`):e.name=await this.getTranslation(`expense-${f}`)}else throw console.log("Failing transfers:"),console.dir(t,{depth:null}),new b.NotImplemented(`Analyzer does not handle combination '${[...r]}' and '${[...a]}' yet.`);return e.kind=u,e}setData(t,e){t.data||(t.data={}),Object.assign(t.data,e)}setRate(t,e,n){t.data||(t.data={}),t.data.rates||(t.data.rates={}),t.data.rates[e]=n}async getRate(t,e,n,r){if(e.data&&e.data.rates&&e.data.rates[r]!==void 0&&e.data.rates[r]!==void 0){let a=e.data.rates[r];if(a!==void 0)return a}return await this.getRateAt(t,n,r)}async setValue(t,e,n,r,a=null){let o=this.getConfig("currency");if(a===null){if(e.amount===null||e.amount===void 0)return;a=e.amount}if(n==="currency"&&r===o||n==="account")e.value=Math.round(a*100);else{let c=await this.getRate(t,e,n,r);e.value=Math.round(c*a*100),this.setRate(e,r,c),n==="currency"&&(0,C.isCurrency)(e.asset)&&this.setData(e,{currency:e.asset,currencyValue:Math.round(a*100)})}}async fillInLocalCurrencies(t,e){let n=this.getConfig("currency");for(let r of e.transfers)(r.type==="account"||r.type==="currency"&&r.asset===n)&&r.amount!==null&&await this.setValue(t,r,r.type,r.asset)}async fillInCurrencies(t,e){for(let n of e.transfers)if(!n.value&&n.amount!==null){if(n.type==="currency"&&(0,C.isCurrency)(n.asset))await this.setValue(t,n,n.type,n.asset);else if(n.data&&n.data.currency&&(0,C.isCurrency)(n.data.currency)&&n.data.currencyValue)await this.setValue(t,n,"currency",n.data.currency,n.data.currencyValue/100);else if(n.type==="currency")throw new b.SystemError(`Cannot determine currency in ${JSON.stringify(n)}.`)}}fillLastMissing(t,e){if(t.length===1)return t[0].value!==null&&t[0].value!==void 0;let n=0,r=null;for(let a of t)if(a.value===null||a.value===void 0)if(r===null&&e)r=a;else return!1;else n+=a.value;return r&&(r.value=-n),!0}async calculateAssetValues(t,e){let n={},r=t.transfers.some(i=>i.reason==="trade"&&i.type!=="account"&&i.type!=="currency"&&i.amount&&i.amount<0),a=t.transfers.every(i=>i.value!==void 0),o=!1,c=!r;for(let i of t.transfers)if(i.reason==="trade"&&i.type==="stock"){let u=i.amount||0,{amount:l}=await this.getStock(e.time,i.type,i.asset);if(l<0&&u>0){o=!0,c=!1;break}}for(let i of t.transfers)if(!(i.data&&i.data.currency!==void 0&&i.data.currencyValue!==void 0)){if(i.amount===void 0)throw new b.SystemError(`Invalid transfer amount undefined in ${JSON.stringify(i)}. Please use amount="null" to denote value that needs to be calculated.`);if(!(0,C.isAssetTransferReason)(i.reason))throw new b.SystemError(`Invalid transfer reason ${JSON.stringify(i.reason)} in ${JSON.stringify(i)}.`);if(!(0,C.isAssetType)(i.type))throw new b.SystemError(`Invalid transfer type ${JSON.stringify(i.type)} in ${JSON.stringify(i)}.`)}if(await this.fillInLocalCurrencies(e.time,t),!a&&this.fillLastMissing(t.transfers,c)||(await this.fillInCurrencies(e.time,t),!a&&this.fillLastMissing(t.transfers,c)))return n;for(let i of t.transfers)if(i.value===void 0&&i.reason==="tax"){let u=i?.data?.currency;if(!u)throw new b.SystemError(`A currency must be defined in data for ${i.reason} transfers in ${JSON.stringify(i)}.`);await this.setValue(e.time,i,"currency",u)}if(!a&&this.fillLastMissing(t.transfers,c))return n;for(let i of t.transfers)i.value===void 0&&(i.reason==="fee"||i.reason==="dividend")&&await this.setValue(e.time,i,i.type,i.asset);if(!a&&this.fillLastMissing(t.transfers,c))return n;for(let i of t.transfers)if(i.reason==="trade"){let u=i.amount||0;if(u<0){if(i.value!==void 0)i.value=Math.round(i.value||0);else{let{value:l,amount:f}=await this.getStock(e.time,i.type,i.asset);if((0,C.less)(f,-u)){if(!await this.UI.getBoolean(this.config,"allowShortSelling","Do we allow short selling of assets?"))throw new b.SystemError(`We have ${f} assets ${i.asset} in stock for trading on ${e.time} when ${u} needed.`);if(f>0)throw new b.NotImplemented(`Cannot handle mix of short selling and normal selling ${u} ${i.asset} on ${e.time} and having ${f}.`);i.type="short",n.kind="short-sell",i.value=-t.transfers.filter(h=>h.value&&h.value>0&&h.type==="currency").reduce((h,m)=>h+(m&&m.value||0),0)}else if(i.value=Math.round(u*(l/f)),!i.value)throw new b.SystemError(`Asset ${i.type} ${i.asset} have no value left when trading on ${e.time}.`)}n.giveAmount=Ft(u,null,!0),n.giveAsset=i.asset}else{if(o){let{value:l,amount:f}=await this.getStock(e.time,i.type,i.asset);i.value=Math.round(u*(l/f)),i.type="short",n.kind="short-buy"}else if(i.value===void 0){let l=await this.getRate(e.time,i,i.type,i.asset);i.value=Math.round(l*u*100),this.setRate(i,i.asset,l)}else i.value=Math.round(i.value||0);n.takeAmount=Ft(u,null,!0),n.takeAsset=i.asset}}if(c&&await this.handleMultipleMissingValues(t),!this.fillLastMissing(t.transfers,c))throw new b.SystemError(`Unable to determine valuation in ${JSON.stringify(t)}.`);return n}async handleMultipleMissingValues(t){let e=[],n={};for(let o of t.transfers)if(o.amount===null)e.push(o);else{let c=`${o.reason}.${o.type}`;n[c]=n[c]||[],n[c].push(o)}let r=e.length;if(r<2)return;let a=Object.keys(n);if(Nt(new Set(["income.statement","tax.statement"]),a)){for(let o of a)n[o].length>r&&(0,C.warning)(`Trying to resolve more than one missing value, but probably leads to fail, since we got ${n[o].length} entries for ${o} while expecting ${r}.`);for(let o=0;o<r;o++){let c=[e[o]];for(let i of a)n[i][o]&&c.push(n[i][o]);this.fillLastMissing(c,!0)}return}throw new b.NotImplemented(`Not able yet to calculate missing values for ${a.join(" and ")}`)}async analyze(t,e,n){Zn.default.recursive(this.config,n),t=(0,Lt.default)(t);let r=await this.collectAccounts(e,t),a=!1,o=t.transfers.filter(m=>m.reason==="fee").length>0;if(o){let m=new Set(t.transfers.filter(g=>g.reason!=="fee"&&g.reason!=="profit"&&g.reason!=="loss").map(g=>g.reason));if(m.size>1)throw new Error(`Too many non-fees (${[...m].join(" and ")}) to determine actual transfer reasoning ${JSON.stringify(t.transfers)}.`);let S=[...m][0],y=new Set(t.transfers.filter(g=>g.reason==="fee").map(g=>g.type));if(y.size>1)throw new Error(`Too many fee types (${[...y].join(" and ")}) to determine actual fee type ${JSON.stringify(t.transfers)}.`);let A=[...y][0],T;if(S==="trade")switch(A){case"currency":T="isTradeFeePartOfTotal";break;case"crypto":T="isCryptoTradeFeePartOfTotal";break;default:throw new b.NotImplemented(`Cannot handle fee type '${A}' yet.`)}else if(S==="withdrawal")T="isWithdrawalFeePartOfTotal";else if(S==="forex")T="isForexFeePartOfTotal";else throw new Error(`Handling non-fee '${S}' not implemented.`);if(a=!await this.UI.getBoolean(n,T,"Is transaction fee of type {type} already included in the {reason} total?".replace("{type}",A).replace("{reason}",await this.getTranslation(`reason-${S}`))),a)for(let g of t.transfers.filter(E=>E.reason==="fee")){let E=t.transfers.filter(P=>P.type===g.type&&P.asset===g.asset&&["trade","forex","withdrawal"].includes(P.reason));if(E.length<1)throw new b.SystemError(`Cannot find any assets to adjust for ${g.asset} fee in ${JSON.stringify(t.transfers)}`);if(E[0].amount===void 0||g.amount===void 0)throw new b.SystemError(`Unable to adjust fee assets for ${g.asset} fee in ${JSON.stringify(t.transfers)}`);E[0].amount-=g.amount}}let c=await this.calculateAssetValues(t,e),i=await this.collectOtherValues(t,c),u=i.kind,l={},f={};if(o)for(let m of t.transfers)(m.type==="crypto"||m.type==="stock"||m.type==="short")&&m.reason==="fee"&&(l[m.asset]=(l[m.asset]||0)+(m.amount||0),f[m.asset]=(f[m.asset]||0)+(m.value||0));for(let m of t.transfers){let S={};if((m.type==="crypto"||m.type==="stock"||m.type==="short")&&m.reason!=="fee"){if(m.value===void 0)throw Error(`Encountered invalid transfer value undefined for ${JSON.stringify(m)}.`);if(m.amount===void 0)throw Error(`Encountered invalid transfer amount undefined for ${JSON.stringify(m)}.`);S[m.asset]={value:m.value||0,amount:m.amount||0};let y={stock:{change:S}};l[m.asset]&&(S[m.asset].amount-=l[m.asset],S[m.asset].value-=f[m.asset],y.feeAmount=l[m.asset],y.feeCurrency=m.asset,delete l[m.asset]),this.setData(m,y);let A=m.type==="short"?"stock":m.type;await this.changeStock(e.time,A,m.asset,m.amount,m.value)}}if(Object.keys(l).length)throw new Error(`There was no matching transfer to deduct ${Object.keys(l).join(" and ")} in ${JSON.stringify(t.transfers)}.`);let d=0;for(let m of t.transfers){if(m.value===void 0)throw new b.SystemError(`Failed to determine value of transfer ${JSON.stringify(m)}.`);d+=m.value}if((u==="trade"||u==="sell"||u==="short-buy")&&d){let m=u==="short-buy"?t.transfers.filter(E=>E.reason==="trade"&&E.value&&E.value>0):t.transfers.filter(E=>E.reason==="trade"&&E.value&&E.value<0);if(m.length!==1)throw new b.BadState(`Did not found unique asset that was sold from ${JSON.stringify(t.transfers)}`);let S,y;d>0?(S="income",u==="short-buy"?y="TRADE_PROFIT_SHORT":y=`TRADE_PROFIT_${m[0].type.toUpperCase()}`):(S="expense",u==="short-buy"?y="TRADE_LOSS_SHORT":y=`TRADE_LOSS_${m[0].type.toUpperCase()}`);let A={reason:S,asset:y,amount:-d/100,type:"statement",value:-d};m[0].data&&m[0].data.notes&&(A.data={notes:m[0].data.notes});let T=await this.getAccount(A.reason,A.type,A.asset,e.id),g=`${A.reason}.${A.type}.${A.asset}`;T?r[g]=T:await this.UI.throwGetAccount(n,g),t.transfers.push(A),d=0}if(Math.abs(d)>C.ZERO_CENTS)throw new b.SystemError(`Total should be zero but got ${d} from ${JSON.stringify(t.transfers)}.`);this.fillCurrencies(t);let h=await this.createTransaction(t,u,i,r,e);return t.transactions=[h],t}async createTransaction(t,e,n,r,a){let o={date:a.time,segmentId:a.id,entries:[]},c;for(let i=0;i<t.transfers.length;i++){let u=t.transfers[i],l=u.data||{};u.text&&(c=u.text);let f=c;if(f||(f=await this.constructText(e,{...n,...l},t)),!f)throw new b.SystemError(`Failed to construct description for ${JSON.stringify(u)}.`);if(u.data&&u.data.notes){let y=[];for(let A of u.data.notes)if(A&&`${A}`.trim()){let T=await this.getTranslation(`note-${A}`);T!==`note-${A}`?y.push(T):y.push(A)}y.length&&(f+=` (${y.join(", ")})`)}let d={account:r[`${u.reason}.${u.type}.${u.asset}`],amount:u.value===void 0?0:u.value,description:f};if(!d.account)throw new b.SystemError(`Cannot find account ${u.reason}.${u.type}.${u.asset} for entry ${JSON.stringify(d)}`);let h=this.applyBalance(d);if(this.balances.mayTakeLoan(u.reason,u.type,u.asset)&&(0,C.realNegative)(h)){let y=`${u.reason}.${u.type}.${u.asset}`,A=this.balances.debtAddress(y);this.getConfig(`account.${A}`,null)===null&&await this.UI.throwDebtAccount(this.config,d.account,y)}u.data&&(d.data=(0,Lt.default)(u.data));let{reason:m,type:S}=u;S==="external"&&(m==="deposit"?await this.UI.getBoolean(this.config,"recordDeposits","Deposits tend to appear in two import sources. Do you want to record deposits in this import?")||(o.executionResult="ignored"):m==="withdrawal"&&(await this.UI.getBoolean(this.config,"recordWithdrawals","Withdrawals tend to appear in two import sources. Do you want to record withdrawals in this import?")||(o.executionResult="ignored"))),d=await this.postProcessTags(d,u,a),o.entries.push(d)}return o}async postProcessTags(t,e,n){let r;if("tags"in e?r=e.tags:r=await this.getTags(e.reason,e.type,e.asset),r){if(typeof r=="string"&&/^(\[[a-zA-Z0-9]+\])+$/.test(r)&&(r=r.substr(1,r.length-2).split("][")),!(r instanceof Array))throw new b.BadState(`Invalid tags ${JSON.stringify(r)}`);t.description=`[${r.filter(a=>!!a).join("][")}] ${t.description}`}return t}async getAccount(t,e,n,r){let a=this.getConfig(`account.${t}.${e}.${n}`,null);if(typeof a=="string")return a;let o=this.getConfig(`account.${t}.${e}.*`,null);if(typeof o=="string")return o;if(/^[0-9]+$/.test(n))return n;if(!r)return;let c=this.getConfig("answers",{});if(c[r]&&c[r][`account.${t}.${e}.${n}`])return c[r][`account.${t}.${e}.${n}`]}async getTags(t,e,n){for(let r of[`tags.${t}.${e}.${n}`,`tags.${t}.${e}.*`,`tags.${t}.*.*`,"tags.*.*.*"]){let a=this.getConfig(r,null);if(a!==null){if(a instanceof Array)return a;throw new b.BadState(`Bad tags configured ${JSON.stringify(a)} for tags.${t}.${e}.${n}`)}}}async getTagsForAddr(t){let[e,n,r]=t.split(".");return this.getTags(e,n,r)}async getAccountQuery(t,e,n){let r=this.getConfig(`account.${t}.${e}.${n}`,null);if(typeof r=="object"&&r!==null)return r}async constructText(t,e,n){let r=`import-text-${t}`,a=this.getConfig("transaction.prefix",""),o=await this.getTranslation(r);if(o===r)throw new b.BadState(`Not able to find translation for '${r}'.`);for(o=`${a}${o}`;;){let c=/(\{([a-zA-Z0-9]+)\})/.exec(o);if(!c)break;if(e[c[2]]===void 0)throw new b.BadState(`Not able to find value '${c[2]}' from ${JSON.stringify(n)}`);let i=`${e[c[2]]}`;o=o.replace(c[1],i)}return o}async getRateAt(t,e,n){let r=this.handler.name,a=this.getConfig("currency");if(e==="currency"&&n===a||e==="account")return 1;if(!r&&e==="crypto")throw new Error(`Exchange is compulsory setting in cryptocurrency import. Cannot determine rate for ${n} at ${t}.`);if(!we(this.handler.system.connector))throw new b.SystemError("Connector used is not a transaction import connector.");return this.handler.getRate(t,e,n,a,r)}async getStock(t,e,n){if(!we(this.handler.system.connector))throw new b.SystemError("Connector used is not a transaction import connector.");let r=await this.getAccount("trade",e,n);if(!r)throw new Error(`Unable to find account for ${e} ${n}.`);if(this.stocks[r]||(this.stocks[r]=new C.StockBookkeeping(`Account ${r}`)),!this.stocks[r].has(e,n)){let{value:o,amount:c}=await this.handler.system.connector.getStock(t,r,n);return this.stocks[r].set(t,e,n,c,o),{value:o,amount:c}}return this.stocks[r].get(t,e,n)}async changeStock(t,e,n,r,a){await this.getStock(t,e,n);let o=await this.getAccount("trade",e,n);if(!o)throw new Error(`Unable to find account for ${e} ${n}.`);this.stocks[o]||(this.stocks[o]=new C.StockBookkeeping(`Account ${o}`)),await this.stocks[o].change(t,e,n,r,a)}async getAverage(t,e,n){let{amount:r,value:a}=await this.getStock(t,e,n);return a/r}fillCurrencies(t){let e={},n=new Set,r=(o,c)=>{e[o]!==void 0&&Math.abs(c-(e[o]||0))>.1&&(0,C.warning)(`Found two different rates ${e[o]} and ${c} for ${o} on ${JSON.stringify(t.transfers)}.`),e[o]=c};if(t.transfers.forEach(o=>{o.data&&o.data.currency&&o.data.currencyValue&&o.value!==void 0&&(r(o.data.currency,o.value/o.data.currencyValue),n.add(o.data.currency)),o.data&&o.data.rates!==void 0&&Object.keys(o.data.rates).forEach(c=>{o.data!==void 0&&o.data.rates!==void 0&&o.data.rates[c]!==void 0&&r(c,parseFloat(o.data.rates[c]))})}),Object.keys(e).length===0||(t.transfers.forEach(o=>{o.data=o.data||{},o.data.rates=o.data.rates||{},Object.assign(o.data.rates,e)}),n.size!==1))return;let a=[...n][0];t.transfers.forEach(o=>{o.data&&o.data.currency===void 0&&o.data.currencyValue===void 0&&o.value!==void 0&&e[a]!==void 0&&(o.data=o.data||{},o.data.currency=a,o.data.currencyValue=Math.round(o.value/(e[a]||0)))})}};var er=x(require("object-hash"));p();var Y=require("interactive-stateful-process"),Ue=class{constructor(t){this.deps=t}async getConfigOrAsk(t,e,n){if(e in t)return t[e];throw new Y.AskUI({type:"flat",elements:[n,await this.submit("Continue",1,t.language)]})}async getBoolean(t,e,n){return this.getConfigOrAsk(t,e,{type:"yesno",name:`configure.${e}`,label:await this.getTranslation(n,t.language),actions:{}})}async getTranslation(t,e){return this.deps.getTranslation(t,e)}async accountLabel(t,e){let[n,r,a]=t.split("."),o=await this.getTranslation(`account-${n}-${r}`,e),c=a;return r==="statement"&&(n==="income"?c=await this.getTranslation(`income-${a}`,e):n==="expense"?c=await this.getTranslation(`expense-${a}`,e):n==="tax"&&(c=await this.getTranslation(`tax-${a}`,e))),o.replace("{asset}",c)}accountFilter(t){let[e]=t.split(".");switch(`${e}`){case"debt":return{type:["ASSET","LIABILITY"]};case"deposit":case"trade":case"withdrawal":return{type:"ASSET"};case"fee":return{type:"EXPENSE"}}return null}async account(t,e,n=void 0){let r=t.language,a={type:"account",name:`configure.account.${e}`,actions:{},label:await this.accountLabel(e,r),filter:this.accountFilter(e)};if(n)a.defaultValue=n;else{let o=await this.deps.getAccountCanditates(e,{...t,plugin:t.handlers instanceof Array&&t.handlers.length?t.handlers[0]:void 0});o.length&&(a.defaultValue=o[0],o.length>1&&(a.preferred=o))}return a}async throwGetAccount(t,e){let n=await this.account(t,e),r=await this.submit("Continue",1,t.language);throw new Y.AskUI({type:"flat",elements:[n,r]})}async throwDebtAccount(t,e,n){let r=t.language,a=await this.getTranslation("The account below has negative balance. If you want to record it to the separate debt account, please select another account below.",r),o=await this.message(a,"info"),c=n.split("."),i=`debt.${c[1]}.${c[2]}`,u=await this.account(t,i,e),l=await this.submit("Continue",1,r);throw new Y.AskUI({type:"flat",elements:[o,u,l]})}async accountGroup(t,e){let[n,r]=e[0].split("."),a=[],o=t.language;for(let c of e)a.push(await this.account(t,c));return{type:"flat",elements:[{type:"boolean",name:`grouping.${n}.${r}`,label:await this.getTranslation("Do you want to use the same account for all of them?",o),defaultValue:!1,actions:{}},{type:"case",condition:`grouping.${n}.${r}`,cases:{true:await this.account(t,`${n}.${r}.*`),false:{type:"flat",elements:a}}}]}}async submit(t,e,n){let r=await this.getTranslation("Saving failed",n),a=await this.getTranslation("Saved successfully",n);return t==="Retry"&&(r=await this.getTranslation("Retry failed",n),a=await this.getTranslation("Retried successfully",n)),{type:"button",label:t,actions:{onClick:{type:"post",url:"",objectWrapLevel:e,errorMessage:r,successMessage:a}}}}async message(t,e){return{type:"message",severity:e,text:t}}async throwErrorRetry(t,e){throw new Y.AskUI({type:"flat",elements:[await this.message(t,"error"),await this.submit("Retry",0,e)]})}async parseQuery(t,e,n){if("ask"in e)return{name:t,type:"radio",label:e.label||await this.getTranslation("Select one of the following:",n),actions:{},options:e.ask};if("chooseTag"in e)return{name:t,type:"tags",label:e.label||await this.getTranslation("Select one of the following:",n),actions:{},single:!0,options:e.chooseTag};if("text"in e)return{name:t,type:"text",label:e.label||await this.getTranslation("Please enter text:",n),actions:{}};throw new Y.SystemError(`Unable to parse UI from query ${JSON.stringify(e)}.`)}async query(t,e,n,r){let a=[];if(n&&n.length&&a.push(await this.describeLines(n,r)),e instanceof Array)for(let o of e)a.push(await this.parseQuery(t,o,r));else a.push(await this.parseQuery(t,e,r));return a.push(await this.submit("Continue",2,r)),{type:"flat",elements:a}}async throwQuery(t,e,n,r){let a=await this.query(t,e,n,r);this.throw(a)}throw(t){throw new Y.AskUI(t)}async describeLines(t,e){let n=t.map(r=>({type:"textFileLine",line:r}));return{type:"box",elements:[{type:"html",html:`<strong>${await this.getTranslation("Based on the following imported lines",e)}</strong>`},...n]}}async throwRadioQuestion(t,e,n,r){throw new Y.AskUI({type:"flat",elements:[{type:"message",severity:"info",text:t},{type:"radio",name:`configure.${e}`,options:n,actions:{}},{type:"button",label:await this.deps.getTranslation("Continue",r),actions:{onClick:{type:"post",url:"",objectWrapLevel:1}}}]})}async throwNoFilterMatchForLine(t,e){throw new Y.AskUI({type:"ruleEditor",name:"once",actions:{onContinue:{type:"post",url:""},onCreateRule:{type:"post",url:"/rule"}},lines:t,cashAccount:e.cashAccount})}};p();var D=require("@dataplug/tasenor-common"),Ae=require("interactive-stateful-process"),at=x(ze()),_e=class{constructor(t){this.handler=t,this.UI=t.UI,this.clearCache()}clearCache(){this.cache={}}cachedQuery(t){if(t.name)if((0,D.isUIQueryRef)(t)){if(!this.cache[t.name])throw new Ae.BadState(`Cannot use a reference to question '${t.name}' before it is defined.`);return this.cache[t.name]}else this.cache[t.name]=t;return t}async getAnswers(t,e,n,r){let a=r.language,o={},c=[];for(let[i,u]of Object.entries(n)){u=this.cachedQuery(u);let l=r.answers||{};t in l&&i in l[t]?o[i]=l[t][i]:c.push(await this.UI.parseQuery(`answer.${t}.${i}`,u,a))}if(c.length){let i={type:"flat",elements:[await this.UI.describeLines(e,a),...c,await this.UI.submit("Continue",2,a)]};this.UI.throw(i)}return o}async classifyLines(t,e,n){let r=[],a=e.rules||[],o=new D.RulesEngine,c=!1;e=(0,at.default)(e),e.questions&&e.questions.forEach(u=>this.cachedQuery(u));let i=e.language;(0,D.debug)("RULES","============================================================"),(0,D.debug)("RULES","Classifying segment",n.id),(0,D.debug)("RULES","============================================================");try{for(let u of t){let l=!1,f=(0,at.default)(u.columns);if((0,D.debug)("RULES","-----------------------------------------------------"),(0,D.debug)("RULES",u.text),(0,D.debug)("RULES","-----------------------------------------------------"),(0,D.debug)("RULES",f),e.answers&&u.segmentId){let d=e.answers;if(d[u.segmentId]&&d[u.segmentId].transfers)return await this.postProcess(n,{type:"transfers",transfers:d[u.segmentId].transfers})}for(let d of a){d=(0,at.default)(d);let h={...f,config:e,rule:d,text:u.text,lineNumber:u.line};if(o.eval(d.filter,h)){if((0,D.debug)("RULES","Rule",d.name,"with filter",d.filter,"matches."),c=!0,l=!0,!d.result)throw new Ae.BadState(`The rule ${JSON.stringify(d)} has no result section.`);let m=d.questions?await this.getAnswers(n.id,t,d.questions,e):{},S="length"in d.result?d.result:[d.result];if(d.questions){let A=d.questions;Object.keys(A).forEach(T=>{A[T]=this.cachedQuery(A[T])})}let y=0;for(let A of S){(0,D.debug)("RULES",`Result[${y}]:`);let T={};for(let[g,E]of Object.entries(A))g in T?(0,D.warning)(`A rule '${d.name}' resulted duplicate value in formula '${E}' for the field '${g}''. Already having ${JSON.stringify(T)}.`):(T[g]=o.eval(E,{...h,...m}),(0,D.debug)("RULES",`  ${g} =`,JSON.stringify(T[g])));if(T.if===void 0||o.eval(T.if,{...h,...m}))if((0,D.isAssetTransfer)(T)&&T.asset!=="undefined"&&T.asset!=="null")r.push(T),T.if&&(0,D.debug)("RULES","  Accepted condition",T.if);else throw console.log("Failing lines:"),console.dir(t,{depth:null}),console.log("Matching rule:"),console.dir(d,{depth:null}),new Ae.BadState(`Asset transfer ${JSON.stringify(T)} is incomplete.`);else(0,D.debug)("RULES","  Dropped due to condition",T.if);y++}break}}l||await this.UI.throwNoFilterMatchForLine(t,e)}if(r.length>0)return await this.postProcess(n,{type:"transfers",transfers:r})}catch(u){if(u instanceof D.RuleParsingError){(0,D.error)(`Parsing error in expression '${u.expression}': ${u.message}`),u.variables.rule&&(0,D.error)(`While parsig rule ${JSON.stringify(u.variables.rule)}`),u.variables&&u.variables.text&&(0,D.error)(`Failure in line ${u.variables.lineNumber}: ${u.variables.text}`);let l=(await this.UI.getTranslation("Parsing error in expression `{expr}`: {message}",i)).replace("{expr}",u.expression).replace("{message}",u.message);await this.UI.throwErrorRetry(l,i)}else throw u}throw c?new Error(`Found matches but the result list is empty for ${JSON.stringify(t)}.`):new Error(`Could not find rules matching ${JSON.stringify(t)}.`)}async postProcess(t,e){let n=new Set(["dividend","income","expense"]),r=new Set(e.transfers.filter(a=>n.has(a.reason)&&a.type==="currency").map(a=>a.asset));if(r.size>1)throw new Ae.SystemError(`Not yet able to sort out VAT for multiple different currencies in ${JSON.stringify(e.transfers)}`);if(r.size){let a=[...r][0],o=[];for(let c of e.transfers){let i;c.data&&"vat"in c.data?i=c.data.vat:i=await this.handler.getVAT(t.time,c,a);let u=c.data&&"vatValue"in c.data?c.data.vatValue:null;if((i||u)&&c.amount){let l=Math.round(c.amount*100),f=u!=null?Math.round(l-u*100):Math.round(c.amount*100/(1+i/100));c.amount=f/100;let d=l-f,h={reason:"tax",type:"statement",asset:d>0?"VAT_FROM_PURCHASES":"VAT_FROM_SALES",amount:d/100,data:{currency:a}};c.tags&&(h.tags=c.tags),o.push(h)}}e.transfers=e.transfers.concat(o)}return e}};var Ut=class extends O.TextFileProcessHandler{constructor(e){super(e);this.importOptions={parser:"csv",numericFields:[],requiredFields:[],textField:null,totalAmountField:null,csv:{}};this.UI=new Ue(this),this.rules=new _e(this)}canAppend(e){return!1}getBalance(e){if(!this.analyzer)throw new Error(`Cannot access balance for ${e} when no analyzer instantiated.`);return this.analyzer.getBalance(e)}async getTranslation(e,n){if(!n)throw new O.SystemError("Language is compulsory setting for importing, if there are unknowns to ask from UI.");return this.system.getTranslation(e,n)}getAccountCanditates(e,n){return this.system.connector.getAccountCanditates(e,n)}async groupingById(e){e.segments={};for(let n of Object.keys(e.files)){for(let r=0;r<e.files[n].lines.length;r++){let a=e.files[n].lines[r];if(!a.columns||Object.keys(a.columns).length===0)continue;let o=this.segmentId(a);if(!o||!e.segments)throw new O.InvalidFile(`The segment ID for ${JSON.stringify(a)} was not found by ${this.constructor.name}.`);o!==je.NO_SEGMENT&&(e.segments[o]=e.segments[o]||{id:o,time:void 0,lines:[]},e.segments[o].lines.push({number:r,file:n}),a.segmentId=o)}if(!e.segments)throw new O.InvalidFile("This cannot happen.");Object.values(e.segments).forEach(r=>{let a=new Set;if(r.lines.forEach(o=>{let c=e.files[o.file].lines[o.number],i=this.time(c);i&&a.add(i.getTime())}),a.size===0)throw new O.InvalidFile(`Was not able to find timestamps for lines ${JSON.stringify(r.lines)}.`);if(a.size>1)throw new O.InvalidFile(`Found more than one (${a.size}) canditate for timestamp (${[...a]}) from lines ${JSON.stringify(r.lines)}.`);r.time=new Date([...a][0])})}return e}async parse(e,n={}){switch(this.importOptions.parser){case"csv":return this.parseCSV(e,this.importOptions.csv);default:throw new O.SystemError(`Parser '${this.importOptions.parser}' is not implemented.`)}}async segmentationCSV(e,n,r){let a=await this.parse(n,e.config),o=await this.groupingById(a);return this.debugSegmentation(o),o}async segmentationPostProcess(e){for(let n of Object.keys(e.files)){let{textField:r,totalAmountField:a}=this.importOptions;for(let o=0;o<e.files[n].lines.length;o++){let c=e.files[n].lines[o].columns;for(let i of this.importOptions.requiredFields)c[i]===void 0&&(c[i]="");for(let i of this.importOptions.numericFields)c[i]!==void 0&&(c[i]=c[i]===""?0:(0,je.num)(c[i]));r&&(c._textField=c[r]),a&&(c._totalAmountField=c[a])}}return e}async segmentation(e,n,r){return await this.segmentationPostProcess(await this.segmentationCSV(e,n,r))}debugSegmentation(e){e.files&&Object.keys(e.files).forEach(n=>{(0,U.debug)("SEGMENTATION",`Segmentation of ${n}`),(0,U.debug)("SEGMENTATION",e.files[n].lines.filter(r=>Object.keys(r.columns).length>0))})}hash(e){let n=Object.entries(e.columns).filter(r=>r[1]!==void 0).reduce((r,a)=>({...r,[a[0]]:a[1].trim()}),{});return er.default.sha1(n)}segmentId(e){return e.columns&&Object.keys(e.columns).length?this.hash(e):je.NO_SEGMENT}time(e){throw new O.NotImplemented(`Import class ${this.constructor.name} does not implement time().`)}async classification(e,n,r){let a={stage:"classified",files:n.files,segments:n.segments,result:{}};if(n.segments)for(let o of this.sortSegments(n.segments)){let c=o.lines.map(u=>n.files[u.file].lines[u.number]),i=await this.classifyLines(c,e.config,n.segments[o.id]);a.result&&(a.result[o.id]=[i])}return this.debugClassification(a),a}debugClassification(e){e.result&&Object.keys(e.result).forEach(n=>{e.result&&e.result[n]&&((0,U.debug)("CLASSIFICATION",`Classification of ${n}`),(0,U.debug)("CLASSIFICATION",e.result[n]))})}async classifyLines(e,n,r){throw new O.NotImplemented(`Import class ${this.constructor.name} does not implement classifyLines().`)}getLines(e,n){return e.segments&&e.segments[n]?e.segments[n].lines.map(o=>e.files[o.file].lines[o.number]):null}async needInputForAnalysis(e,n){if(!e.result||!e.segments)return!1;let r=new Set,a=new Te(this,n,e);for(let[o,c]of Object.entries(e.result)){let i=e.segments[o],u=c;for(let l of u)for(let f of await a.collectAccounts(i,l,{findMissing:!0}))r.add(f);for(let l of r){if(n.answers){let y=n.answers;if(o in y&&`account.${l}`in y[o]&&y[o][`account.${l}`]!==void 0){r.delete(l);continue}}let[f,d,h]=l.split("."),m=await a.getAccountQuery(f,d,h),S=this.getLines(e,o);if(!S)throw new Error(`Failed to collect lines for segment ${o}.`);if(m){let y=await this.UI.describeLines(S,n.language),A=await this.UI.query(`answer.${o}.account.${l}`,m,[],n.language);return new O.Directions({type:"ui",element:{type:"flat",elements:[y,A]}})}}}return r.size?this.directionsForMissingAccounts(r,n):!1}async directionsForMissingAccounts(e,n){let r=Object.keys(n).filter(c=>/^account\.\w+\.\w+\./.test(c)),a={};for(let c of r){let[,i,u,l]=c.split(".");l!=="*"&&(a[`${i}.${u}`]=a[`${i}.${u}`]||new Set,a[`${i}.${u}`].add(`${i}.${u}.${l}`))}for(let c of e){let[i,u,l]=c.split(".");a[`${i}.${u}`]=a[`${i}.${u}`]||new Set,a[`${i}.${u}`].add(`${i}.${u}.${l}`)}let o=[];for(let c of Object.values(a))if(c.size===1)e.has([...c][0])&&o.push(await this.UI.account(n,[...c][0]));else{let i=0;for(let u of c)e.has(u)&&i++;i&&o.push(await this.UI.accountGroup(n,[...c]))}return o.length===0?!1:(o.push(await this.UI.submit("Continue",1,n.language)),new O.Directions({type:"ui",element:{type:"flat",elements:o}}))}sortSegments(e){let n=r=>typeof r.time=="string"?new Date(r.time).getTime():r.time.getTime();return Object.values(e).sort((r,a)=>n(r)-n(a))}async analysis(e,n,r,a){if(this.analyzer=new Te(this,a,n),n.result&&n.segments){let c=this.sortSegments(n.segments),i;if(c.length){let l,f=a.firstDate?new Date(`${a.firstDate}T00:00:00.000Z`):null;for(let d=0;d<c.length;d++){let h=typeof c[d].time=="string"?new Date(c[d].time):c[d].time;if(!f||h>=f){l=h;break}}if(!l)throw new Error(`Unable to find any valid time stamps after ${f}.`);i=n.result[c[c.length-1].id],await this.analyzer.initialize(l)}for(let l of c){let f=n.result[l.id];if(!f)throw new O.BadState(`Cannot find results for segment ${l.id} during analysis (${JSON.stringify(l)})`);for(let d=0;d<f.length;d++)f[d]=await this.analyze(f[d],l,a,n)}let u=this.analyzer.getBalances().filter(l=>l.mayTakeLoan);if(i&&u.length){if(!this.analyzer)throw new Error("No analyzer. Internal error.");let l=i[i.length-1].transactions;for(let f of u){let d={date:l[l.length-1].date,segmentId:l[l.length-1].segmentId,entries:[]},[h,m,S]=f.debtAddress.split("."),y=await this.analyzer.getAccount(h,m,S);if(f.account===y)continue;let A=this.analyzer.getBalance(f.address)||0,T=this.analyzer.getBalance(f.debtAddress)||0,g,E;if((0,U.realNegative)(A)){let P=await this.getTranslation("Additional loan taken",a.language);g={account:f.account,amount:-A,description:P},E={account:y||"0",amount:A,description:P}}else if((0,U.realNegative)(T)){let P=await this.getTranslation("Loan paid back",a.language),k=Math.abs(Math.min(-T,A));(0,U.realPositive)(k)&&(g={account:f.account,amount:-k,description:P},E={account:y||"0",amount:k,description:P})}if(g&&E){let P=await this.analyzer.getTagsForAddr(f.debtAddress);if(P){let k=P instanceof Array?`[${P.join("][")}]`:P;g.description=`${k} ${g.description}`,E.description=`${k} ${E.description}`}d.entries.push(g),this.analyzer.applyBalance(g),d.entries.push(E),this.analyzer.applyBalance(E),l.push(d)}}}}let o={...n,stage:"analyzed"};return this.debugAnalysis(o),o}async analyze(e,n,r,a){if(!this.analyzer)throw new O.SystemError("Calling analyze() without setting up analyzer.");switch(e.type){case"transfers":return await this.analyzer.analyze(e,n,r);default:throw new O.NotImplemented(`Cannot analyze yet type '${e.type}' in ${this.constructor.name}.`)}}debugAnalysis(e){e.result!==void 0&&Object.keys(e.result).forEach(n=>{if((0,U.debug)("ANALYSIS",`Analyzed ${n}`),e.result&&n in e.result)for(let r of e.result[n])(0,U.debug)("ANALYSIS",r.transfers)})}async execution(e,n,r){let a=new U.TransactionApplyResults;if(n.result){for(let o of Object.keys(n.result)){let c=n.result[o];for(let i of c)if(i.transactions)for(let u of i.transactions)u.executionResult||(u.executionResult="not done")}for(let o of Object.keys(n.result)){(0,U.debug)("EXECUTION",`Execution of segment ${o}`);let c=n.result[o];for(let i of c){(0,U.debug)("EXECUTION",i.transactions);let u=await this.system.connector.applyResult(e.id,i);a.add(u)}}}return this.analyzer=null,{...n,output:a.toJSON(),stage:"executed"}}async getVAT(e,n,r){return this.system.connector.getVAT(e,n,r)}async getRate(e,n,r,a,o){if(!we(this.system.connector))throw new O.SystemError("Connector used is not a transaction import connector.");return this.system.connector.getRate(e,n,r,a,o)}};p();p();p();var jt=x(require("crypto")),ot=x(require("bcrypt")),_t=class{static async hash(t){let e=await ot.default.genSalt(13);return await ot.default.hash(t,e)}static async compare(t,e){return await ot.default.compare(t,e)}};function pe(s=32){return jt.default.randomBytes(s/2).toString("hex")}function Us(){function s(){return(jt.default.randomBytes(1)[0]%16).toString(16)}return"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx".replace(/x/g,s)}p();var rr=x(require("cors")),Mt=x(require("express")),_=require("@dataplug/tasenor-common");p();var ee=require("@dataplug/tasenor-common"),ut=x(require("jsonwebtoken")),tr=require("ts-opaque");p();var Bt=["TASENOR_API_URL","API_SITE_TOKEN","DATABASE_ROOT_PASSWORD","DATABASE_ROOT_USER","DATABASE_URL","SECRET","ERP_SITE_TOKEN"],_s=new Set(Bt),it=class{constructor(t){this.url=t,this.values={},this.initialized=!1,this.secret=null}async initialize(){throw new Error(`A class ${this.constructor.name} does not implement initialize().`)}get(t){if(!_s.has(t))throw new Error(`A variable ${t} is not valid vault value.`);if(!(t in this.values))throw new Error(`Cannot find variable ${t} from the vault.`);return this.values[t]}getPrivateSecret(){return this.secret===null&&(this.secret=pe(512)),this.secret}setPrivateSecret(t){this.secret=t}},ct=class extends it{async initialize(){for(let t of Bt){let e=w.default.env[t];e!==void 0&&(this.values[t]=e)}}},Be;function ve(){if(Be&&Be.url===w.default.env.VAULT_URL)return Be;if(!w.default.env.VAULT_URL)throw new Error("No VAULT_URL set and cannot instantiate the vault.");let s=new URL(w.default.env.VAULT_URL);switch(s.protocol){case"env:":Be=new ct(w.default.env.VAULT_URL);break;default:throw new Error(`Cannot recognize protocol ${s.protocol} of vault URL ${w.default.env.VAULT_URL}`)}return Be}function js(s){let t=ve();if(!t.initialized)throw new Error("Cannot use the vault before it is initialized.");let e=t.get(s);if(e===void 0)throw new Error(`Cannot find value ${s} from the vault.`);return e}function Bs(){let s=ve();if(!s.initialized)throw new Error("Cannot use the vault before it is initialized.");return s.getPrivateSecret()}function Vs(s){ve().setPrivateSecret(s)}async function Ms(){let s=ve();s.initialized=!0,await s.initialize()}var F={get:js,getPrivateSecret:Bs,getVault:ve,initialize:Ms,setPrivateSecret:Vs};function Js(s){let t;return s.query&&s.query.token?t=s.query.token:s.headers.authorization&&/^Bearer /.test(s.headers.authorization)&&(t=s.headers.authorization.substr(7)),t}async function Vt(s,t,e=0){let n=t==="refresh"?await F.get("SECRET"):F.getPrivateSecret();if(!n)throw new Error("Cannot fins secret to sign token.");e||(e=t==="refresh"?ee.REFRESH_TOKEN_EXPIRY_TIME:ee.TOKEN_EXPIRY_TIME);let r={audience:t,expiresIn:e,issuer:ee.TOKEN_ISSUER};return(0,tr.create)(ut.default.sign({data:s},n,r))}async function Hs(s,t,e=0){let n=await Vt(s,t,e),r=await Vt({audience:t,owner:s.owner,feats:s.feats,plugins:s.plugins},"refresh",e*2);return{token:n,refresh:r}}function Ks(s,t,e,n=!1){if(!t)throw new Error("Cannot verify token since no secret given.");if(!e)throw new Error("Cannot verify token since no audience given.");function r(a){n||(0,ee.error)(a)}try{let a=ut.default.verify(s,t,{audience:e,issuer:[ee.TOKEN_ISSUER]});if(!a)r("Cannot decode the token.");else if(!a.data)r(`Cannot find any payload from the token ${s}.`);else{if(!a.exp)return r(`Token content ${a} does not have exp-field.`),null;if(a.data.audience){let o=a.data;return!o.owner||!o.feats?(r(`Cannot find proper payload from the refresh token with content ${JSON.stringify(a)}.`),null):o}else{let o=a.data;return!o.owner||!o.feats?(r(`Cannot find proper payload from the token with content ${JSON.stringify(a)}.`),null):o}}}catch(a){r(`Token verification failed ${a} for ${JSON.stringify(nr(s))}`)}return null}function nr(s){return ut.default.decode(s,{json:!0,complete:!0})}async function qs(s,t,e=!1){if(!s)return!1;let n=t==="refresh"?await F.get("SECRET"):F.getPrivateSecret();return n?!!te.verify(s,n,t,e):!1}var te={check:qs,get:Js,parse:nr,sign:Vt,sign2:Hs,verify:Ks};var sr=x(require("helmet"));function lt(s){return s.replace(/\btoken=[^&]+\b/,"token=xxxx")}function zs(s){let t=[];t.push((n,r,a)=>{if(n.method!=="OPTIONS"){let o,c=te.get(n);if(c){let l=te.parse(c);if(l&&l.payload&&l.payload.data){o=l.payload.data.owner;let f=l.payload.aud;switch(l.payload.aud==="refresh"&&(f=l.payload.data.audience),f){case"sites":o=`Site ${o}`;break;case"bookkeeping":o=`User ${o}`;break}}}let u=`${o?`${o} from ${n.ip}`:`${n.ip}`} ${n.method} ${n.hostname} ${lt(n.originalUrl)}`;(0,_.log)(u)}a()}),t.push((0,rr.default)({origin:s.origin}));let e;if(s.api){let n=new URL(s.api).origin;e={useDefaults:!0,directives:{defaultSrc:["'self'",n],imgSrc:["'self'","data:",n],scriptSrc:["'self'","'unsafe-eval'"]}}}else e=!1;return t.push((0,sr.default)({contentSecurityPolicy:e})),t}function Gs(){let s=[];return s.push((t,e,n,r)=>{if((0,_.error)("Internal error:",t),n.headersSent)return r(t);n.status(500).send({message:"Internal server error."});let a=`${e.ip} ${e.method} ${e.hostname} ${lt(e.originalUrl)} => ${n.statusCode}`;(0,_.error)(a)}),s}function Qs({url:s,json:t,user:e,uuid:n,admin:r,superuser:a,audience:o,token:c,upload:i}){let u=[];a&&(r=!0),r&&(e=!0),e&&!o&&(o="bookkeeping"),o&&(c=!0),n&&(c=!0);let l={};return i&&(l.limit=_.MAX_UPLOAD_SIZE),(s||i&&!s&&!t)&&u.push(Mt.default.urlencoded({extended:!0,...l})),t&&u.push(Mt.default.json({...l})),c&&u.push(async(f,d,h)=>{d.locals.token=te.get(f),h()}),n&&u.push(async(f,d,h)=>{if(!d.locals.token)return(0,_.error)("There is no token in the request and we are looking for UUID."),d.status(403).send({message:"Forbidden."});let m=f.headers["x-uuid"];if(!m)return(0,_.error)("Cannot find UUID from the request."),d.status(403).send({message:"Forbidden."});let S=te.parse(d.locals.token);if(!S)return(0,_.error)(`Cannot parse payload from the token ${d.locals.token}`),d.status(403).send({message:"Forbidden."});let y=S.payload.aud,A=F.getPrivateSecret(),T=te.verify(d.locals.token,A,y);if(!T)return(0,_.error)(`Failed to verify token ${d.locals.token} for audience ${y}.`),d.status(403).send({message:"Forbidden."});d.locals.uuid=m,d.locals.owner=T.owner,h()}),o&&u.push(async(f,d,h)=>{let m=d.locals.token;if(!m){(0,_.error)(`Request ${f.method} ${lt(f.originalUrl)} from ${f.ip} has no token.`),d.status(401).send({message:"Unauthorized."});return}let S=o==="refresh"?await F.get("SECRET"):F.getPrivateSecret();if(!S)return(0,_.error)("Cannot find SECRET."),d.status(500).send({message:"Unable to handle authorized requests at the moment."});if(!o)return d.status(500).send({message:"Internal error."});let y=te.verify(m,S,o);if(!y)return(0,_.error)(`Request from ${f.ip} has bad token ${m}`),d.status(403).send({message:"Forbidden."});if(r&&!y.feats.ADMIN&&!y.feats.SUPERUSER)return(0,_.error)(`Request denied for admin access to ${JSON.stringify(y)}`),d.status(403).send({message:"Forbidden."});if(a&&!y.feats.SUPERUSER)return(0,_.error)(`Request denied for superuser access to ${JSON.stringify(y)}`),d.status(403).send({message:"Forbidden."});d.locals.auth=y,d.locals.user=y.owner,h()}),u}p();p();var ar=x(require("path"));var V=class{constructor(){this.id=null,this.code="",this.title="",this.version=null,this.releaseDate=null,this.use="unknown",this.type="unknown",this.icon="",this.description="",this.path="",this.languages={}}async install(){}async uninstall(){}async installToDb(t){}async uninstallFromDb(t){}get fullPath(){return ar.default.join(kt(),"src","plugins",this.path)}filePath(t){return`${this.fullPath}/${t}`}toJSON(){return{id:this.id,code:this.code,title:this.title,description:this.description,icon:this.icon,version:this.version,releaseDate:this.releaseDate,use:this.use,type:this.type,path:this.path}}getSettings(){return null}getGlobalSettings(){return null}t(t,e){return this.catalog?this.catalog.t(t,e):e in this.languages&&t in this.languages[e]?this.languages[e][t]:t}async getSetting(t,e){let n=await t("settings").select("value").where({name:`${this.code}.${e}`}).first();return n?n.value:void 0}static create(t,e,n){let r=new t;return r.path=e,r.catalog=n,r}};p();var or=x(require("fs"));var Jt=class extends V{constructor(...e){super();this.sources=e}async getKnowledge(){let e={};for(let n of this.sources){let r=this.filePath(`${n}.json`),a=JSON.parse(or.default.readFileSync(r).toString("utf-8"));Object.assign(e,{[n]:a})}return e}};p();var ir=require("@dataplug/tasenor-common"),cr=x(require("fs"));var Ht=class extends V{constructor(e){super();this.handler=e,this.UI=e.UI,this.languages=this.getLanguages()}getLanguages(){return{en:{"account-debt-currency":"Account for recording debt in {asset} currency","account-deposit-currency":"Account for depositing {asset} currency","account-deposit-external":"Account for external deposit source for {asset}","account-distribution-currency":"Account to pay our {asset} dividends from","account-distribution-statement":"Account to record our dividend payments for {asset}","account-dividend-currency":"Account for recording received {asset} dividends","account-expense-currency":"Account for expenses in {asset} currency","account-expense-statement":"Account for recording expense {asset}","account-fee-currency":"Account for fees in {asset} currency","account-fee-crypto":"Account for fees in {asset} crypto currency","account-forex-currency":"Account for {asset} foreign exchange","account-income-currency":"Account for income in {asset} currency","account-income-statement":"Account for recording income {asset}","account-investment-currency":"Account for receiving investments in {asset} currency","account-investment-statement":"Account for recording investment {asset}","account-loss-currency":"Account for recording losses in currency {asset}","account-profit-currency":"Account for recording profits in currency {asset}","account-tax-currency":"Account for recording tax in currency {asset}","account-tax-statement":"Account for tax statament {asset}","account-trade-crypto":"Account for trading crypto currency {asset}","account-trade-stock":"Account for trading stocks {asset}","account-trade-currency":"Account for using currency {asset} for trading","account-transfer-currency":"Account for transferring currency {asset}","account-transfer-external":"Account for transferring to/from external source {asset}","account-withdrawal-currency":"Account for withdrawing currency {asset}","account-withdrawal-external":"Account for withdrawing from external source {asset}","asset-type-crypto":"a crypto currency","asset-type-currency":"a currency","asset-type-external":"an external instance","asset-type-statement":"a statement recording","asset-type-stock":"a stock exchange traded asset","asset-type-short":"a short position","import-text-buy":"Buy {takeAmount} {takeAsset}","import-text-correction":"{name}","import-text-deposit":"Deposit to {exchange} service","import-text-distribution":"{name}","import-text-dividend":"Dividend {asset}","import-text-expense":"{name}","import-text-forex":"Sell currency {giveAsset} for {takeAsset}","import-text-income":"{name}","import-text-investment":"{name}","import-text-sell":"Sell {giveAmount} {giveAsset}","import-text-short-buy":"Closing short position {takeAmount} {takeAsset}","import-text-short-sell":"Short selling {giveAmount} {giveAsset}","import-text-tax":"{name}","import-text-trade":"Trade {giveAmount} {giveAsset} {takeAmount} {takeAsset}","import-text-transfer":"{service} transfer","import-text-withdrawal":"Withdrawal from {exchange} service","reason-deposit":"deposit","reason-dividend":"payment","reason-expense":"expense","reason-fee":"fee","reason-forex":"exchange","reason-income":"income","reason-loss":"loss","reason-profit":"profit","reason-trade":"trading","reason-transfer":"transfers","reason-withdrawal":"withdrawal","note-split":"Split","note-converted":"Converted"},fi:{"account-debt-currency":"Tili veloille valuutassa {asset}","account-deposit-currency":"Tili valuutan {asset} talletuksille","account-deposit-external":"Vastatili ulkoisille talletuksille {asset}","account-distribution-currency":"Tili, josta maksetaan {asset} osingot","account-distribution-statement":"Raportointitili, johon kirjataan maksettavat osingot {asset}","account-dividend-currency":"Tili saaduista {asset} osingoista","account-expense-currency":"Tili kuluille {asset} valuutassa","account-expense-statement":"Raportointitili {asset} kuluille","account-fee-currency":"Tili k\xE4ytt\xF6maksuille {asset} valuutassa","account-fee-crypto":"Tili k\xE4ytt\xF6maksuille {asset} kryptovaluutassa","account-forex-currency":"Valuutanvaihtotili {asset} valuutalle","account-income-currency":"Tili tuloille {asset} valuutassa","account-income-statement":"Raportointitili {asset} tuloille","account-investment-currency":"Tili saaduille sijoituksille {asset} valuutassa","account-investment-statement":"Raportointitili sijoituksille {asset} valuutassa","account-loss-currency":"Tili tappioiden kirjaamiseen {asset} valuutassa","account-profit-currency":"Raportointitili tappioiden kirjaamiseen {asset} valuutassa","account-tax-currency":"Verot {asset} valuutassa","account-tax-statement":"Raportointitili veroille {asset} valuutassa","account-trade-crypto":"Vaihto-omaisuustili {asset} kryptovaluutalle","account-trade-stock":"Vaihto-omaisuustili {asset} osakkeelle","account-trade-currency":"Valuuttatili {asset} valuutalle vaihto-omaisuuden hankintaan","account-transfer-currency":"Siirtotili {asset} valuutalle","account-transfer-external":"Siirtotili ulkoiseen kohteeseen {asset} valuutalle","account-withdrawal-currency":"Nostotili {asset} valuutalle","account-withdrawal-external":"Vastatili valuutan {asset} nostoille","asset-type-crypto":"kryptovaluutta","asset-type-currency":"valuutta","asset-type-external":"ulkopuolinen instanssi","asset-type-statement":"raportointi","asset-type-stock":"osake tai vastaava","asset-type-short":"lyhyeksi myyty positio","Do you want to import also currency deposits here?":"Haluatko tuoda my\xF6s valuuttojen talletukset t\xE4nne?","Do you want to import also currency withdrawals here?":"Haluatko tuoda my\xF6s valuuttojen nostot t\xE4nne?","import-text-buy":"Osto {takeAmount} {takeAsset}","import-text-correction":"{name}","import-text-deposit":"Talletus {exchange}-palveluun","import-text-distribution":"{name}","import-text-dividend":"Osinko {asset}","import-text-expense":"{name}","import-text-forex":"Valuutanvaihto","import-text-investment":"{name}","import-text-sell":"Myynti {giveAmount} {giveAsset}","import-text-short-buy":"Suljettu lyhyeksimyynti {takeAmount} {takeAsset}","import-text-short-sell":"Lyhyeksimyynti {giveAmount} {giveAsset}","import-text-tax":"{name}","import-text-trade":"Vaihto {giveAmount} {giveAsset} {takeAmount} {takeAsset}","import-text-transfer":"{service} siirto","import-text-withdrawal":"Nosto {exchange}-palvelusta","Parsing error in expression `{expr}`: {message}":"Virhe laskukaavassa `{expr}`: {message}","reason-deposit":"talletus","reason-dividend":"maksu","reason-expense":"meno","reason-fee":"kulu","reason-forex":"vaihto","reason-income":"tulo","reason-loss":"tappio","reason-profit":"tuotto","reason-trade":"vaihdanta","reason-transfer":"siirto","reason-withdrawal":"nosto","Retried successfully":"Uudelleenyritys onnistui","Retry failed":"Uudelleenyritys ei onnistunut","Select one of the following:":"Valitse yksi seuraavista:","Additional information needed":"Tarvitaan lis\xE4tietoja","Based on the following imported lines":"Seuraavien tuotujen rivien perusteella","Do you want to use the same account for all of them?":"Haluatko k\xE4ytt\xE4\xE4 samaa tili\xE4 kaikille samanlaisille?",Created:"Luotuja",Duplicates:"Aiemmin luotuja",Ignored:"V\xE4liinj\xE4tettyj\xE4","Account Changes":"Tilien muutokset","Process Was Successfully Completed!":"Prosessointi saatu p\xE4\xE4t\xF6kseen onnistuneesti!","Do we allow short selling of assets?":"Sallitaanko lyhyeksi myynti?",January:"tammikuu",February:"helmikuu",March:"maaliskuu",April:"huhtikuu",May:"toukokuu",June:"kes\xE4kuu",July:"hein\xE4kuu",August:"elokuu",September:"syyskuu",October:"lokakuu",November:"marraskuu",December:"joulukuu","note-split":"splitti","note-converted":"konvertoitu","The account below has negative balance. If you want to record it to the separate debt account, please select another account below:":"Tilill\xE4 {account} on negatiivinen saldo. Jos haluat kirjata negatiiviset saldot erilliselle velkatilille, valitse tili seuraavasta:","Additional loan taken":"Lainanoton lis\xE4ys","Loan paid back":"Lainan takaisinmaksu","The date {date} falls outside of the period {firstDate} to {lastDate}.":"P\xE4iv\xE4m\xE4\xE4r\xE4 {date} on tilikauden {firstDate} - {lastDate} ulkopuolella.","What do we do with that kind of transactions?":"Mit\xE4 t\xE4m\xE4nkaltaisille tapahtumille tulisi tehd\xE4?","Ignore transaction":"J\xE4tt\xE4\xE4 v\xE4liin","Halt with an error":"Keskeytt\xE4\xE4 tuonti virheeseen","Is transaction fee of type {type} already included in the {reason} total?":"Onko {reason}-tapahtumassa tyypin {type} kulut lis\xE4tty valmiiksi yhteissummaan?"}}}getHandler(){return this.handler}getRules(){let e=this.filePath("rules.json");return(0,ir.log)(`Reading rules ${e}.`),JSON.parse(cr.default.readFileSync(e).toString("utf-8")).rules}};p();var Kt=x(require("fs"));var Ve=x(require("dayjs")),ur=x(require("dayjs/plugin/quarterOfYear"));Ve.default.extend(ur.default);var qt=class extends V{constructor(...e){super();this.formats=e}getReportStructure(e){let n=this.filePath(`${e}.tsv`);if(Kt.default.existsSync(n))return Kt.default.readFileSync(n).toString("utf-8")}getReportStructures(){let e={};for(let n of this.formats)e[n]=this.getReportStructure(n);return e}hasReport(e){return this.formats.includes(e)}getReportOptions(e){return{}}time2str(e){return e===null?null:(e instanceof Date&&(e=e.toISOString()),e.substr(0,10))}flags2item(e){let n={};return e.forEach(r=>{switch(r){case"NEW_PAGE":break;case"BREAK":n.break=!0;break;case"BOLD":n.bold=!0;break;case"ITALIC":n.italic=!0;break;case"DETAILS":n.accountDetails=!0;break;case"HIDE_TOTAL":n.hideTotal=!0;break;case"REQUIRED":n.required=!0;break;default:throw new Error(`Cannot recoginze report format flag '${r}'.`)}}),n}async getColumns(e,n,r,a){if(!r.periods)throw new Error(`Need periods to define columns ${JSON.stringify(r)}`);let o=r.periods.map(c=>({type:"numeric",name:"period"+c.id,title:this.columnTitle(e,c,r)}));return o.unshift({name:"title",title:"",type:"name"}),o}columnTitle(e,n,r){throw new Error(`Report plugin ${this.constructor.name} does not implement columnTitle().`)}forceOptions(e){return{negateAssetAndProfit:!1,addPreviousPeriod:!1}}async constructSqlQuery(e,n,r){let a="(CASE debit WHEN true THEN 1 ELSE -1 END)";n.negateAssetAndProfit&&(a+=" * (CASE WHEN account.type IN ('ASSET', 'PROFIT') THEN 1 ELSE -1 END)");let o=[n.periodId];if(n.addPreviousPeriod){let i=await e.select("*").from("period").where("id","<=",n.periodId).orderBy("end_date","desc").limit(2);i.length>1&&o.push(i[1].id),n.periods=i}let c=e.select("document.period_id AS periodId","document.number AS documentId","document.date","account.name","account.type","account.number",e.raw(`CAST(ROUND(${a} * entry.amount * 100) AS BIGINT) AS amount`),"entry.description").from("entry").leftJoin("account","account.id","entry.account_id").leftJoin("document","document.id","entry.document_id").whereIn("document.period_id",o);return n.accountId&&(c=c.andWhere("account.id","=",n.accountId)),c=c.orderBy("document.date").orderBy("document.number").orderBy("document.id").orderBy("entry.row_number"),c}async renderReport(e,n,r={}){Object.assign(r,this.forceOptions(r));let a=(await e("settings").where("name","like",`${this.code}.%`).orWhere({name:"companyName"}).orWhere({name:"companyCode"})).reduce((d,h)=>({...d,[h.name]:h.value}),{}),o=`${this.code}.tagTypes`;if(r.byTags&&a[o]){let d=await e("tags").select("id","tag","name","type","order").from("tags").whereIn("type",a[o]).orderBy("order");a.tags=d}else a.tags=[];r.format=this.getReportStructure(n);let i=await await this.constructSqlQuery(e,r,a);for(let d of i)d.amount=parseInt(d.amount);i=this.doFiltering(n,i,r,a);let u=await this.getColumns(n,i,r,a),l=this.preProcess(n,i,r,a,u);l=this.postProcess(n,l,r,a,u);let f={format:n,columns:u,meta:{businessName:a.companyName,businessId:a.companyCode},data:l};return r.csv?zt(f,r):f}doFiltering(e,n,r,a){let o=c=>!0;return r.quarter1&&(o=c=>(0,Ve.default)(c.date).quarter()<=1),r.quarter2&&(o=c=>(0,Ve.default)(c.date).quarter()<=2),r.quarter3&&(o=c=>(0,Ve.default)(c.date).quarter()<=3),n.filter(o)}preProcess(e,n,r,a,o){throw new Error(`Report plugin ${this.constructor.name} does not implement preProcess().`)}postProcess(e,n,r,a,o){return n}parseAndCombineReport(e,n,r,a,o){let c=Array.from(e).sort(),i=[];return a.split(`
`).forEach(u=>{if(/^#/.test(u))return;let[l,f,d]=u.split("	");l=l.split(" "),d=d?new Set(d.trim().split(/\s+/)):new Set;let h=f?f.replace(/^(_*).*/,"$1").length:0;if(f=f?f.replace(/^_+/,""):"",d.has("NEW_PAGE")){i.push({pageBreak:!0});return}if(d.has("BREAK")){i.push({paragraphBreak:!0});return}let m={};r.forEach(A=>m[A]=null);let S=!0,y={tab:h,...this.flags2item(d)};for(let A=0;A<l.length;A++){let T=l[A].split("-"),g=T[0],E=T[1];r.forEach(P=>{c.forEach(k=>{k>=g&&k<E&&(S=!1,o[P][k]!==void 0&&(m[P]+=o[P][k]))})})}if(y.accountDetails||(y.required||!S)&&(y.name=f,y.amounts=m,i.push(y)),y.accountDetails)for(let A=0;A<l.length;A++){let T=l[A].split("-"),g=T[0],E=T[1];c.forEach(P=>{if(P>=g&&P<E){let k={tab:h,...this.flags2item(d)};k.isAccount=!0,delete k.accountDetails,k.name=n[P],k.number=P,k.amounts={},r.forEach(se=>{k.amounts||(k.amounts={}),o[se][P]===void 0?k.amounts[se]=null:k.amounts[se]=o[se][P]+0}),i.push(k)}})}}),i}};p();var Gt=class extends V{constructor(...e){super();this.schemes=new Set(e)}hasScheme(e){return this.schemes.has(e)}getSchemePaths(e){throw new Error(`A class ${this.constructor.name} does not implement getScheme().`)}getSchemeDefaults(e){return{}}supportedCurrencies(){return[]}supportedLanguages(){return[]}};p();var lr=x(require("axios")),Z=require("@dataplug/tasenor-common");var Qt=class extends V{constructor(...e){super();this.services=e}getServices(){return this.services}async executeQuery(e,n,r,a){let o={};for(let i of await n("settings").select("*").where("name","like",`${this.code}.%`)){let[,u]=i.name.split(".");o[u]=i.value}if(this.isAdequate(e))return;let c;try{c=await this.query(n,o,r,a)}catch(i){(0,Z.error)(`Exception when handling service ${r} query ${JSON.stringify(a)}: ${i}`),c={status:500,message:`Execution of service ${r} query failed on plugin ${this.constructor.name}.`}}this.addResult(e,c)}async query(e,n,r,a){throw new Error(`A service plugin ${this.constructor.name} does not implement query().`)}addResult(e,n){(n.status>=200&&n.status<300||e.status===404&&e.message==="No handlers found.")&&(delete e.message,Object.assign(e,n))}isAdequate(e){return e.status>=200&&e.status<300}async request(e,n,r,a,o={}){if(n!=="GET")throw new Error("Only GET method currently supported in plugin requests.");return(0,Z.note)(`Service ${e} request ${n} ${r}`),new Promise((c,i)=>{lr.default.request({method:n,url:r,params:a,headers:o}).then(u=>{(0,Z.log)(`Request ${n} ${r}: HTTP ${u.status}`),c({status:u.status,data:u.data})}).catch(u=>{let l=u.response?u.response.status:500,f=u.response&&u.response.data&&u.response.data.message?u.response.data.message:`${u}`;(0,Z.error)(`Request ${n} ${r} failed: HTTP ${l} ${f}`),c({status:l,message:f})})})}cacheHeadersKey(e,n){return{}}cacheParamsKey(e,n){return n}async cachedRequest(e,n,r,a,o,c={},i={}){let u=this.cacheParamsKey(n,o),l=this.cacheHeadersKey(n,c),f=e?await e("cached_requests").select("status","result").where({method:r,url:a,query:u,headers:l}).first():null;if(f&&f.status>=200&&f.status<300)return(0,Z.log)(`Using cached service ${n} result for ${r} ${a}`),f.result;i.rateLimitDelay&&await(0,Z.waitPromise)(i.rateLimitDelay);let d=await this.request(n,r,a,o,c);return e&&await e("cached_requests").insert({method:r,url:a,query:u,headers:l,status:d.status||null,result:d}),d}};p();var M=x(require("fs")),J=x(require("fs/promises")),re=x(require("glob")),I=x(require("path")),fr=x(require("tar")),Yt=require("@dataplug/tasenor-common"),Me=require("ts-opaque"),dr=["code","title","version","icon","releaseDate","use","type","description"],mr={BUILD_PATH:void 0,DEVELOPMENT_PATH:void 0,INSTALL_PATH:void 0,PLUGIN_PATH:void 0};function N(s){let t=mr[s];if(t===void 0)throw new Error(`Configuration variable ${s} is required but it is not set.`);return t}function ue(s,t){mr[s]=t,s==="PLUGIN_PATH"&&(M.default.existsSync(I.default.join(t,"build"))&&ue("BUILD_PATH",I.default.join(t,"build")),M.default.existsSync(I.default.join(t,"Build"))&&ue("BUILD_PATH",I.default.join(t,"Build")),M.default.existsSync(I.default.join(t,"installed"))&&ue("INSTALL_PATH",I.default.join(t,"installed")),M.default.existsSync(I.default.join(t,"Installed"))&&ue("INSTALL_PATH",I.default.join(t,"Installed")),M.default.existsSync(I.default.join(t,"development"))&&ue("DEVELOPMENT_PATH",I.default.join(t,"development")),M.default.existsSync(I.default.join(t,"Development"))&&ue("DEVELOPMENT_PATH",I.default.join(t,"Development")))}function Wt(s){return s.sort((t,e)=>t.code<e.code?-1:t.code>e.code?1:0)}function Ws(s,t){if(s.length!==t.length)return!1;s=Wt(s),t=Wt(t);for(let e=0;e<s.length;e++){if(s[e].id!==t[e].id||s[e].code!==t[e].code||s[e].installedVersion!==t[e].installedVersion||s[e].path!==t[e].path)return!1;if(s[e].versions||t[e].versions){let n=s[e].versions||[],r=t[e].versions||[];if(n.length!==r.length)return!1;for(let a=0;a<n.length;a++)if(n[a].version!==r[a].version)return!1}}return!0}function pr(){return M.default.existsSync(I.default.join(N("PLUGIN_PATH"),"index.json"))?JSON.parse(M.default.readFileSync(I.default.join(N("PLUGIN_PATH"),"index.json")).toString("utf-8")):[]}function Ys(s){return pr().find(n=>n.code===s)||null}async function Zs(){let s=await Yt.ERP_API.call("GET","/plugins");return s.success?s.data:[]}function Xs(){let s=N("INSTALL_PATH"),t=s.split("/"),e=re.default.sync(I.default.join(s,"*","plugin.json")),n=[];for(let r of e){let a=JSON.parse(M.default.readFileSync(r).toString("utf-8")),o=r.split("/");a.path=`${t[t.length-1]}/${o[o.length-2]}`,n.push(a)}return n}function ea(){let s=re.default.sync(I.default.join(N("DEVELOPMENT_PATH"),"*","index.tsx")).concat(re.default.sync(I.default.join(N("DEVELOPMENT_PATH"),"*","ui","index.tsx"))),t=new RegExp(`^\\s*static\\s+(${dr.join("|")})\\s*=\\s*(?:'([^']*)'|"([^"]*)")`),e=[];for(let n of s){let r,a=n.split("/");a[a.length-2]==="ui"?r=`${a[a.length-4]}/${a[a.length-3]}`:r=`${a[a.length-3]}/${a[a.length-2]}`;let o={code:(0,Me.create)("Unknown"),title:"Unknown Development Plugin",icon:"HelpOutline",path:r,version:(0,Me.create)("0"),releaseDate:null,use:"unknown",type:"unknown",description:"No description"},c=M.default.readFileSync(n).toString("utf-8").split(`
`);for(let i of c){let u=t.exec(i);u&&(o[u[1]]=u[2])}o.releaseDate&&(o.releaseDate=new Date(o.releaseDate)),e.push(o)}return e}function ta(){let s=re.default.sync(I.default.join(N("DEVELOPMENT_PATH"),"*","index.ts")).concat(re.default.sync(I.default.join(N("DEVELOPMENT_PATH"),"*","backend","index.ts"))),t=new RegExp(`^\\s*this\\.(${dr.join("|")})\\s*=\\s*(?:'([^']*)'|"([^"]*)")`),e=[];for(let n of s){let r=n.split("/"),a;r[r.length-2]==="backend"?a=`${r[r.length-4]}/${r[r.length-3]}`:a=`${r[r.length-3]}/${r[r.length-2]}`;let o={code:(0,Me.create)("Unknown"),title:"Unknown Development Plugin",icon:"HelpOutline",path:a,version:(0,Me.create)("0"),releaseDate:null,use:"unknown",type:"unknown",description:"No description"},c=M.default.readFileSync(n).toString("utf-8").split(`
`);for(let i of c){let u=t.exec(i);u&&(o[u[1]]=u[2])}o.releaseDate&&(o.releaseDate=new Date(o.releaseDate)),e.push(o)}return e}async function na(){let s=N("BUILD_PATH");return await J.default.rm(s,{force:!0,recursive:!0}),J.default.mkdir(s)}async function ra(){let s=N("DEVELOPMENT_PATH");return await J.default.rm(s,{force:!0,recursive:!0}),J.default.mkdir(s)}async function sa(){let s=N("INSTALL_PATH");return await J.default.rm(s,{force:!0,recursive:!0}),J.default.mkdir(s)}async function aa(s,t,e){let n=I.default.join(N("BUILD_PATH"),`${s.code}-${s.version}.tgz`);if(await J.default.mkdir(I.default.join(N("BUILD_PATH"),s.code),{recursive:!0}),await J.default.writeFile(I.default.join(N("BUILD_PATH"),s.code,"plugin.json"),JSON.stringify(s,null,2)),s.use!=="ui"){if(!e)throw new Error("No backend path given.");await J.default.mkdir(I.default.join(N("BUILD_PATH"),s.code,"backend"),{recursive:!0});for(let r of re.default.sync(I.default.join(e,"*")))await J.default.copyFile(r,I.default.join(N("BUILD_PATH"),s.code,"backend",I.default.basename(r)))}if(s.use!=="backend"){if(!t)throw new Error("No UI path given.");await J.default.mkdir(I.default.join(N("BUILD_PATH"),s.code,"ui"),{recursive:!0});for(let r of re.default.sync(I.default.join(t,"*")))await J.default.copyFile(r,I.default.join(N("BUILD_PATH"),s.code,"ui",I.default.basename(r)))}return await fr.default.c({gzip:!0,cwd:N("BUILD_PATH"),file:n},["./"+s.code]),n}async function oa(s,t){return s.releaseDate=new Date,s.package=M.default.readFileSync(t).toString("base64"),Yt.ERP_API.call("POST","/plugins/publish",s)}var ia={buildPlugin:aa,cleanBuildDir:na,cleanDevDir:ra,cleanInstallDir:sa,findPluginFromIndex:Ys,fetchOfficialPluginList:Zs,getConfig:N,loadPluginIndex:pr,publishPlugin:oa,samePlugins:Ws,scanBackendPlugins:ta,scanInstalledPlugins:Xs,scanUIPlugins:ea,setConfig:ue,sortPlugins:Wt};p();p();var gr=x(require("json2csv")),hr=require("sprintf-js");function zt(s,t){let e=[],n={id:(i,u)=>u.id,name:(i,u)=>`${u.isAccount?u.number+" ":""}${u.name}`,text:(i,u)=>u[i.name],numeric:(i,u)=>u.amounts&&!u.hideTotal&&u.amounts[i.name]!==""&&!isNaN(u.amounts[i.name])&&u.amounts[i.name]!==void 0?u.amounts[i.name]===null?"\u2014":(0,hr.sprintf)("%.2f",u.amounts[i.name]/100):""},{data:r,columns:a}=s,o={};t.dropTitle||(a.forEach(i=>o[i.name]=i.title),e.push(o)),r.forEach(i=>{i.paragraphBreak||(o={},a.forEach(u=>{i.pageBreak||i.paragraphBreak?o[u.name]="":o[u.name]=n[u.type](u,i)}),e.push(o))});let c=a.map(i=>i.name);return gr.default.parse(e,{fields:c,header:!1})}0&&(module.exports={ALLOWED_VAULT_VARIABLES,BackendPlugin,BookkeeperImporter,CLI,CLIRunner,Command,DB,DataPlugin,EnvironmentVault,Exporter,ImportPlugin,Password,ReportPlugin,SchemePlugin,ServicePlugin,TasenorExporter,TilitinExporter,TransactionImportHandler,TransactionRules,TransactionUI,TransferAnalyzer,Vault,cleanUrl,cli,createUuid,data2csv,getServerRoot,getVault,isDevelopment,isProduction,isTransactionImportConnector,nodeEnv,plugins,randomString,setServerRoot,system,systemPiped,tasenorFinalStack,tasenorInitialStack,tasenorStack,tokens,vault});
