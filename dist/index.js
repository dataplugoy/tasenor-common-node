var hr=Object.create;var Ye=Object.defineProperty;var gr=Object.getOwnPropertyDescriptor;var yr=Object.getOwnPropertyNames;var wr=Object.getPrototypeOf,br=Object.prototype.hasOwnProperty;var Tr=(o,t)=>()=>(o&&(t=o(o=0)),t);var q=(o,t)=>()=>(t||o((t={exports:{}}).exports,t),t.exports),Ar=(o,t)=>{for(var e in t)Ye(o,e,{get:t[e],enumerable:!0})},In=(o,t,e,n)=>{if(t&&typeof t=="object"||typeof t=="function")for(let s of yr(t))!br.call(o,s)&&s!==e&&Ye(o,s,{get:()=>t[s],enumerable:!(n=gr(t,s))||n.enumerable});return o};var P=(o,t,e)=>(e=o!=null?hr(wr(o)):{},In(t||!o||!o.__esModule?Ye(e,"default",{value:o,enumerable:!0}):e,o)),vr=o=>In(Ye({},"__esModule",{value:!0}),o);var b,g,io,m=Tr(()=>{b=require("buffer"),g=P(require("process")),io=function(o){function t(){var n=this||self;return delete o.prototype.__magic__,n}if(typeof globalThis=="object")return globalThis;if(this)return t();o.defineProperty(o.prototype,"__magic__",{configurable:!0,get:t});var e=__magic__;return e}(Object)});var Ee=q((uo,Qe)=>{m();var $r=function(){"use strict";function o(l,d){return d!=null&&l instanceof d}var t;try{t=Map}catch{t=function(){}}var e;try{e=Set}catch{e=function(){}}var n;try{n=Promise}catch{n=function(){}}function s(l,d,f,y,p){typeof d=="object"&&(f=d.depth,y=d.prototype,p=d.includeNonEnumerable,d=d.circular);var A=[],w=[],v=typeof b.Buffer<"u";typeof d>"u"&&(d=!0),typeof f>"u"&&(f=1/0);function T(h,D){if(h===null)return null;if(D===0)return h;var S,k;if(typeof h!="object")return h;if(o(h,t))S=new t;else if(o(h,e))S=new e;else if(o(h,n))S=new n(function(xe,Se){h.then(function(De){xe(T(De,D-1))},function(De){Se(T(De,D-1))})});else if(s.__isArray(h))S=[];else if(s.__isRegExp(h))S=new RegExp(h.source,u(h)),h.lastIndex&&(S.lastIndex=h.lastIndex);else if(s.__isDate(h))S=new Date(h.getTime());else{if(v&&b.Buffer.isBuffer(h))return b.Buffer.allocUnsafe?S=b.Buffer.allocUnsafe(h.length):S=new b.Buffer(h.length),h.copy(S),S;o(h,Error)?S=Object.create(h):typeof y>"u"?(k=Object.getPrototypeOf(h),S=Object.create(k)):(S=Object.create(y),k=y)}if(d){var oe=A.indexOf(h);if(oe!=-1)return w[oe];A.push(h),w.push(S)}o(h,t)&&h.forEach(function(xe,Se){var De=T(Se,D-1),pr=T(xe,D-1);S.set(De,pr)}),o(h,e)&&h.forEach(function(xe){var Se=T(xe,D-1);S.add(Se)});for(var G in h){var At;k&&(At=Object.getOwnPropertyDescriptor(k,G)),!(At&&At.set==null)&&(S[G]=T(h[G],D-1))}if(Object.getOwnPropertySymbols)for(var Dn=Object.getOwnPropertySymbols(h),G=0;G<Dn.length;G++){var Ke=Dn[G],fe=Object.getOwnPropertyDescriptor(h,Ke);fe&&!fe.enumerable&&!p||(S[Ke]=T(h[Ke],D-1),fe.enumerable||Object.defineProperty(S,Ke,{enumerable:!1}))}if(p)for(var En=Object.getOwnPropertyNames(h),G=0;G<En.length;G++){var Ge=En[G],fe=Object.getOwnPropertyDescriptor(h,Ge);fe&&fe.enumerable||(S[Ge]=T(h[Ge],D-1),Object.defineProperty(S,Ge,{enumerable:!1}))}return S}return T(l,f)}s.clonePrototype=function(d){if(d===null)return null;var f=function(){};return f.prototype=d,new f};function r(l){return Object.prototype.toString.call(l)}s.__objToStr=r;function a(l){return typeof l=="object"&&r(l)==="[object Date]"}s.__isDate=a;function i(l){return typeof l=="object"&&r(l)==="[object Array]"}s.__isArray=i;function c(l){return typeof l=="object"&&r(l)==="[object RegExp]"}s.__isRegExp=c;function u(l){var d="";return l.global&&(d+="g"),l.ignoreCase&&(d+="i"),l.multiline&&(d+="m"),d}return s.__getRegExpFlags=u,s}();typeof Qe=="object"&&Qe.exports&&(Qe.exports=$r)});var Ht=q(ss=>{"use strict";m();ss.parse=function(o,t){return new ke(o,t).parse()};var ke=class{constructor(t,e){this.source=t,this.transform=e||Dr,this.position=0,this.entries=[],this.recorded=[],this.dimension=0}isEof(){return this.position>=this.source.length}nextCharacter(){var t=this.source[this.position++];return t==="\\"?{value:this.source[this.position++],escaped:!0}:{value:t,escaped:!1}}record(t){this.recorded.push(t)}newEntry(t){var e;(this.recorded.length>0||t)&&(e=this.recorded.join(""),e==="NULL"&&!t&&(e=null),e!==null&&(e=this.transform(e)),this.entries.push(e),this.recorded=[])}consumeDimensions(){if(this.source[0]==="[")for(;!this.isEof();){var t=this.nextCharacter();if(t.value==="=")break}}parse(t){var e,n,s;for(this.consumeDimensions();!this.isEof();)if(e=this.nextCharacter(),e.value==="{"&&!s)this.dimension++,this.dimension>1&&(n=new ke(this.source.substr(this.position-1),this.transform),this.entries.push(n.parse(!0)),this.position+=n.position-2);else if(e.value==="}"&&!s){if(this.dimension--,!this.dimension&&(this.newEntry(),t))return this.entries}else e.value==='"'&&!e.escaped?(s&&this.newEntry(!0),s=!s):e.value===","&&!s?this.newEntry():this.record(e.value);if(this.dimension!==0)throw new Error("array dimension not balanced");return this.entries}};function Dr(o){return o}});var qt=q((Ci,rs)=>{m();var Er=Ht();rs.exports={create:function(o,t){return{parse:function(){return Er.parse(o,t)}}}}});var is=q((_i,os)=>{"use strict";m();var Ir=/(\d{1,})-(\d{2})-(\d{2}) (\d{2}):(\d{2}):(\d{2})(\.\d{1,})?.*?( BC)?$/,kr=/^(\d{1,})-(\d{2})-(\d{2})( BC)?$/,Cr=/([Z+-])(\d{2})?:?(\d{2})?:?(\d{2})?/,_r=/^-?infinity$/;os.exports=function(t){if(_r.test(t))return Number(t.replace("i","I"));var e=Ir.exec(t);if(!e)return Rr(t)||null;var n=!!e[8],s=parseInt(e[1],10);n&&(s=as(s));var r=parseInt(e[2],10)-1,a=e[3],i=parseInt(e[4],10),c=parseInt(e[5],10),u=parseInt(e[6],10),l=e[7];l=l?1e3*parseFloat(l):0;var d,f=Nr(t);return f!=null?(d=new Date(Date.UTC(s,r,a,i,c,u,l)),zt(s)&&d.setUTCFullYear(s),f!==0&&d.setTime(d.getTime()-f)):(d=new Date(s,r,a,i,c,u,l),zt(s)&&d.setFullYear(s)),d};function Rr(o){var t=kr.exec(o);if(!!t){var e=parseInt(t[1],10),n=!!t[4];n&&(e=as(e));var s=parseInt(t[2],10)-1,r=t[3],a=new Date(e,s,r);return zt(e)&&a.setFullYear(e),a}}function Nr(o){if(o.endsWith("+00"))return 0;var t=Cr.exec(o.split(" ")[1]);if(!!t){var e=t[1];if(e==="Z")return 0;var n=e==="-"?-1:1,s=parseInt(t[2],10)*3600+parseInt(t[3]||0,10)*60+parseInt(t[4]||0,10);return s*n*1e3}}function as(o){return-(o-1)}function zt(o){return o>=0&&o<100}});var us=q((Ri,cs)=>{m();cs.exports=Lr;var Or=Object.prototype.hasOwnProperty;function Lr(o){for(var t=1;t<arguments.length;t++){var e=arguments[t];for(var n in e)Or.call(e,n)&&(o[n]=e[n])}return o}});var fs=q((Ni,ds)=>{"use strict";m();var Fr=us();ds.exports=pe;function pe(o){if(!(this instanceof pe))return new pe(o);Fr(this,Yr(o))}var Ur=["seconds","minutes","hours","days","months","years"];pe.prototype.toPostgres=function(){var o=Ur.filter(this.hasOwnProperty,this);return this.milliseconds&&o.indexOf("seconds")<0&&o.push("seconds"),o.length===0?"0":o.map(function(t){var e=this[t]||0;return t==="seconds"&&this.milliseconds&&(e=(e+this.milliseconds/1e3).toFixed(6).replace(/\.?0+$/,"")),e+" "+t},this).join(" ")};var jr={years:"Y",months:"M",days:"D",hours:"H",minutes:"M",seconds:"S"},Mr=["years","months","days"],Br=["hours","minutes","seconds"];pe.prototype.toISOString=pe.prototype.toISO=function(){var o=Mr.map(e,this).join(""),t=Br.map(e,this).join("");return"P"+o+"T"+t;function e(n){var s=this[n]||0;return n==="seconds"&&this.milliseconds&&(s=(s+this.milliseconds/1e3).toFixed(6).replace(/0+$/,"")),s+jr[n]}};var Kt="([+-]?\\d+)",Vr=Kt+"\\s+years?",Jr=Kt+"\\s+mons?",Hr=Kt+"\\s+days?",qr="([+-])?([\\d]*):(\\d\\d):(\\d\\d)\\.?(\\d{1,6})?",zr=new RegExp([Vr,Jr,Hr,qr].map(function(o){return"("+o+")?"}).join("\\s*")),ls={years:2,months:4,days:6,hours:9,minutes:10,seconds:11,milliseconds:12},Kr=["hours","minutes","seconds","milliseconds"];function Gr(o){var t=o+"000000".slice(o.length);return parseInt(t,10)/1e3}function Yr(o){if(!o)return{};var t=zr.exec(o),e=t[8]==="-";return Object.keys(ls).reduce(function(n,s){var r=ls[s],a=t[r];return!a||(a=s==="milliseconds"?Gr(a):parseInt(a,10),!a)||(e&&~Kr.indexOf(s)&&(a*=-1),n[s]=a),n},{})}});var ps=q((Oi,ms)=>{"use strict";m();ms.exports=function(t){if(/^\\x/.test(t))return new b.Buffer(t.substr(2),"hex");for(var e="",n=0;n<t.length;)if(t[n]!=="\\")e+=t[n],++n;else if(/[0-7]{3}/.test(t.substr(n+1,3)))e+=String.fromCharCode(parseInt(t.substr(n+1,3),8)),n+=4;else{for(var s=1;n+s<t.length&&t[n+s]==="\\";)s++;for(var r=0;r<Math.floor(s/2);++r)e+="\\";n+=Math.floor(s/2)*2}return new b.Buffer(e,"binary")}});var As=q((Li,Ts)=>{m();var Ce=Ht(),_e=qt(),ot=is(),gs=fs(),ys=ps();function it(o){return function(e){return e===null?e:o(e)}}function ws(o){return o===null?o:o==="TRUE"||o==="t"||o==="true"||o==="y"||o==="yes"||o==="on"||o==="1"}function Qr(o){return o?Ce.parse(o,ws):null}function Wr(o){return parseInt(o,10)}function Gt(o){return o?Ce.parse(o,it(Wr)):null}function Zr(o){return o?Ce.parse(o,it(function(t){return bs(t).trim()})):null}var Xr=function(o){if(!o)return null;var t=_e.create(o,function(e){return e!==null&&(e=Zt(e)),e});return t.parse()},Yt=function(o){if(!o)return null;var t=_e.create(o,function(e){return e!==null&&(e=parseFloat(e)),e});return t.parse()},z=function(o){if(!o)return null;var t=_e.create(o);return t.parse()},Qt=function(o){if(!o)return null;var t=_e.create(o,function(e){return e!==null&&(e=ot(e)),e});return t.parse()},ea=function(o){if(!o)return null;var t=_e.create(o,function(e){return e!==null&&(e=gs(e)),e});return t.parse()},ta=function(o){return o?Ce.parse(o,it(ys)):null},Wt=function(o){return parseInt(o,10)},bs=function(o){var t=String(o);return/^\d+$/.test(t)?t:o},hs=function(o){return o?Ce.parse(o,it(JSON.parse)):null},Zt=function(o){return o[0]!=="("?null:(o=o.substring(1,o.length-1).split(","),{x:parseFloat(o[0]),y:parseFloat(o[1])})},na=function(o){if(o[0]!=="<"&&o[1]!=="(")return null;for(var t="(",e="",n=!1,s=2;s<o.length-1;s++){if(n||(t+=o[s]),o[s]===")"){n=!0;continue}else if(!n)continue;o[s]!==","&&(e+=o[s])}var r=Zt(t);return r.radius=parseFloat(e),r},sa=function(o){o(20,bs),o(21,Wt),o(23,Wt),o(26,Wt),o(700,parseFloat),o(701,parseFloat),o(16,ws),o(1082,ot),o(1114,ot),o(1184,ot),o(600,Zt),o(651,z),o(718,na),o(1e3,Qr),o(1001,ta),o(1005,Gt),o(1007,Gt),o(1028,Gt),o(1016,Zr),o(1017,Xr),o(1021,Yt),o(1022,Yt),o(1231,Yt),o(1014,z),o(1015,z),o(1008,z),o(1009,z),o(1040,z),o(1041,z),o(1115,Qt),o(1182,Qt),o(1185,Qt),o(1186,gs),o(1187,ea),o(17,ys),o(114,JSON.parse.bind(JSON)),o(3802,JSON.parse.bind(JSON)),o(199,hs),o(3807,hs),o(3907,z),o(2951,z),o(791,z),o(1183,z),o(1270,z)};Ts.exports={init:sa}});var $s=q((Fi,vs)=>{"use strict";m();var B=1e6;function ra(o){var t=o.readInt32BE(0),e=o.readUInt32BE(4),n="";t<0&&(t=~t+(e===0),e=~e+1>>>0,n="-");var s="",r,a,i,c,u,l;{if(r=t%B,t=t/B>>>0,a=4294967296*r+e,e=a/B>>>0,i=""+(a-B*e),e===0&&t===0)return n+i+s;for(c="",u=6-i.length,l=0;l<u;l++)c+="0";s=c+i+s}{if(r=t%B,t=t/B>>>0,a=4294967296*r+e,e=a/B>>>0,i=""+(a-B*e),e===0&&t===0)return n+i+s;for(c="",u=6-i.length,l=0;l<u;l++)c+="0";s=c+i+s}{if(r=t%B,t=t/B>>>0,a=4294967296*r+e,e=a/B>>>0,i=""+(a-B*e),e===0&&t===0)return n+i+s;for(c="",u=6-i.length,l=0;l<u;l++)c+="0";s=c+i+s}return r=t%B,a=4294967296*r+e,i=""+a%B,n+i+s}vs.exports=ra});var Es=q((Ui,Ds)=>{m();var aa=$s(),_=function(o,t,e,n,s){e=e||0,n=n||!1,s=s||function(y,p,A){return y*Math.pow(2,A)+p};var r=e>>3,a=function(y){return n?~y&255:y},i=255,c=8-e%8;t<c&&(i=255<<8-t&255,c=t),e&&(i=i>>e%8);var u=0;e%8+t>=8&&(u=s(0,a(o[r])&i,c));for(var l=t+e>>3,d=r+1;d<l;d++)u=s(u,a(o[d]),8);var f=(t+e)%8;return f>0&&(u=s(u,a(o[l])>>8-f,f)),u},Ss=function(o,t,e){var n=Math.pow(2,e-1)-1,s=_(o,1),r=_(o,e,1);if(r===0)return 0;var a=1,i=function(u,l,d){u===0&&(u=1);for(var f=1;f<=d;f++)a/=2,(l&1<<d-f)>0&&(u+=a);return u},c=_(o,t,e+1,!1,i);return r==Math.pow(2,e+1)-1?c===0?s===0?1/0:-1/0:NaN:(s===0?1:-1)*Math.pow(2,r-n)*c},oa=function(o){return _(o,1)==1?-1*(_(o,15,1,!0)+1):_(o,15,1)},Ps=function(o){return _(o,1)==1?-1*(_(o,31,1,!0)+1):_(o,31,1)},ia=function(o){return Ss(o,23,8)},ca=function(o){return Ss(o,52,11)},ua=function(o){var t=_(o,16,32);if(t==49152)return NaN;for(var e=Math.pow(1e4,_(o,16,16)),n=0,s=[],r=_(o,16),a=0;a<r;a++)n+=_(o,16,64+16*a)*e,e/=1e4;var i=Math.pow(10,_(o,16,48));return(t===0?1:-1)*Math.round(n*i)/i},xs=function(o,t){var e=_(t,1),n=_(t,63,1),s=new Date((e===0?1:-1)*n/1e3+9466848e5);return o||s.setTime(s.getTime()+s.getTimezoneOffset()*6e4),s.usec=n%1e3,s.getMicroSeconds=function(){return this.usec},s.setMicroSeconds=function(r){this.usec=r},s.getUTCMicroSeconds=function(){return this.usec},s},Re=function(o){for(var t=_(o,32),e=_(o,32,32),n=_(o,32,64),s=96,r=[],a=0;a<t;a++)r[a]=_(o,32,s),s+=32,s+=32;var i=function(u){var l=_(o,32,s);if(s+=32,l==4294967295)return null;var d;if(u==23||u==20)return d=_(o,l*8,s),s+=l*8,d;if(u==25)return d=o.toString(this.encoding,s>>3,(s+=l<<3)>>3),d;console.log("ERROR: ElementType not implemented: "+u)},c=function(u,l){var d=[],f;if(u.length>1){var y=u.shift();for(f=0;f<y;f++)d[f]=c(u,l);u.unshift(y)}else for(f=0;f<u[0];f++)d[f]=i(l);return d};return c(r,n)},la=function(o){return o.toString("utf8")},da=function(o){return o===null?null:_(o,8)>0},fa=function(o){o(20,aa),o(21,oa),o(23,Ps),o(26,Ps),o(1700,ua),o(700,ia),o(701,ca),o(16,da),o(1114,xs.bind(null,!1)),o(1184,xs.bind(null,!0)),o(1e3,Re),o(1007,Re),o(1016,Re),o(1008,Re),o(1009,Re),o(25,la)};Ds.exports={init:fa}});var ks=q((ji,Is)=>{m();Is.exports={BOOL:16,BYTEA:17,CHAR:18,INT8:20,INT2:21,INT4:23,REGPROC:24,TEXT:25,OID:26,TID:27,XID:28,CID:29,JSON:114,XML:142,PG_NODE_TREE:194,SMGR:210,PATH:602,POLYGON:604,CIDR:650,FLOAT4:700,FLOAT8:701,ABSTIME:702,RELTIME:703,TINTERVAL:704,CIRCLE:718,MACADDR8:774,MONEY:790,MACADDR:829,INET:869,ACLITEM:1033,BPCHAR:1042,VARCHAR:1043,DATE:1082,TIME:1083,TIMESTAMP:1114,TIMESTAMPTZ:1184,INTERVAL:1186,TIMETZ:1266,BIT:1560,VARBIT:1562,NUMERIC:1700,REFCURSOR:1790,REGPROCEDURE:2202,REGOPER:2203,REGOPERATOR:2204,REGCLASS:2205,REGTYPE:2206,UUID:2950,TXID_SNAPSHOT:2970,PG_LSN:3220,PG_NDISTINCT:3361,PG_DEPENDENCIES:3402,TSVECTOR:3614,TSQUERY:3615,GTSVECTOR:3642,REGCONFIG:3734,REGDICTIONARY:3769,JSONB:3802,REGNAMESPACE:4089,REGROLE:4096}});var _s=q(Oe=>{m();var ma=As(),pa=Es(),ha=qt(),ga=ks();Oe.getTypeParser=ya;Oe.setTypeParser=wa;Oe.arrayParser=ha;Oe.builtins=ga;var Ne={text:{},binary:{}};function Cs(o){return String(o)}function ya(o,t){return t=t||"text",Ne[t]&&Ne[t][o]||Cs}function wa(o,t,e){typeof t=="function"&&(e=t,t="text"),Ne[t][o]=e}ma.init(function(o,t){Ne.text[o]=t});pa.init(function(o,t){Ne.binary[o]=t})});var ao={};Ar(ao,{ALLOWED_VAULT_VARIABLES:()=>hn,BackendPlugin:()=>V,BookkeeperImporter:()=>tn,CLI:()=>Jt,CLIRunner:()=>at,DB:()=>Fe,DataPlugin:()=>wn,EnvironmentVault:()=>wt,Exporter:()=>ue,ImportPlugin:()=>bn,Password:()=>mn,ReportPlugin:()=>An,SchemePlugin:()=>$n,ServicePlugin:()=>Pn,TasenorExporter:()=>cn,TilitinExporter:()=>an,TransactionImportHandler:()=>fn,TransactionRules:()=>Ve,TransactionUI:()=>Be,TransferAnalyzer:()=>ve,Vault:()=>yt,cleanUrl:()=>Tt,cli:()=>Sr,createUuid:()=>Na,data2csv:()=>vn,getServerRoot:()=>sn,getVault:()=>Pe,isDevelopment:()=>Js,isProduction:()=>Ea,isTransactionImportConnector:()=>Ae,nodeEnv:()=>Vs,plugins:()=>ro,randomString:()=>ye,setServerRoot:()=>Ia,system:()=>Te,systemPiped:()=>Da,tasenorFinalStack:()=>qa,tasenorInitialStack:()=>Ha,tasenorStack:()=>za,tokens:()=>ne,vault:()=>L});module.exports=vr(ao);m();m();var ts=P(require("readline")),ns=require("argparse"),M=require("@dataplug/tasenor-common"),Vt=P(Ee());m();var We=require("@dataplug/tasenor-common"),_n=P(require("fs"));m();var vt=P(require("fs")),kn=P(require("path")),Cn=P(require("form-data")),I=class{constructor(t){this.cli=t}get verbose(){return!!this.args.verbose}get debug(){return!!this.args.debug}addArguments(t){}setArgs(t){this.args=t}print(t){throw new Error(`Class ${this.constructor.name} does not implement print().`)}out(t,e){if(this.args.json)console.log(JSON.stringify(e,null,2));else{if(!this.verbose)try{this.print(e);return}catch(s){if(!/does not implement print/.test(`${s}`))throw s}let n=(s,r)=>{if(typeof r=="object")if(r===null)console.log(`${s} = null`);else if(r instanceof Array)for(let a=0;a<r.length;a++)console.log(`${s}[${a}]`),n(`  ${s}[${a}]`,r[a]);else for(let a of Object.keys(r))n(`  ${s}.${a}`,r[a]);else console.log(`${s} =`,r)};n(t,e)}}async run(){throw new Error(`A command ${this.constructor.name} does not implement run().`)}formForFile(t){let e=new Cn.default,n=vt.default.readFileSync(t);return e.append("file",n,kn.default.basename(t)),e}async get(t){await this.cli.login();let e=await this.cli.request("GET",t);if(!e.success)throw new Error(`Call to GET ${t} failed: ${JSON.stringify(e)}`);return e.data}async getUi(t){await this.cli.login();let e=await this.cli.requestUi("GET",t);if(!e.success)throw new Error(`Call to GET UI ${t} failed: ${JSON.stringify(e)}`);return e.data}async delete(t){await this.cli.login();let e=await this.cli.request("DELETE",t);if(!e.success)throw new Error(`Call to DELETE ${t} failed: ${JSON.stringify(e)}`);return e.data}async deleteUi(t,e=void 0){await this.cli.login();let n=await this.cli.requestUi("DELETE",t,e);if(!n.success)throw new Error(`Call to DELETE UI ${t} failed: ${JSON.stringify(n)}`);return n.data}async patch(t,e){await this.cli.login();let n=await this.cli.request("PATCH",t,e);if(!n.success)throw new Error(`Call to PATCH ${t} failed: ${JSON.stringify(n)}`);return n.data}async post(t,e){await this.cli.login();let n=await this.cli.request("POST",t,e);if(!n.success)throw new Error(`Call to POST ${t} failed: ${JSON.stringify(n)}`);return n.data}async postUi(t,e){await this.cli.login();let n=await this.cli.requestUi("POST",t,e);if(!n.success)throw new Error(`Call to POST UI ${t} failed: ${JSON.stringify(n)}`);return n.data}async postUpload(t,e){let n=this.formForFile(e);return this.post(t,n)}async runBy(t){let e=this.args[t];if(!e){this.help();return}if(typeof e!="string")throw new Error(`Invalid operation argument ${JSON.stringify(e)}.`);if(!this[e])throw console.log(this[e]),new Error(`There is no member function '${e}' in command class '${this.constructor.name}'.`);await this[e]()}str(t){return t==null?"":typeof t=="string"?t:t[0]}num(t){return t==null?0:parseFloat(this.str(t))}async periodId(t,e){if(!t)throw new Error(`Invalid database argument ${JSON.stringify(t)}`);let n=this.str(e);if(!n)throw new Error(`Invalid period argument ${JSON.stringify(n)}`);let s=await this.get(`/db/${t}/period`);if(/^\d{4}$/.test(n)){let r=`${n}-06-15`;s=s.filter(a=>a.start_date<=r&&r<=a.end_date)}else if(/^\d{4}-\d{2}-\d{2}$/.test(n))s=s.filter(r=>r.start_date<=n&&n<=r.end_date);else if(/^\d+$/.test(n)){let r=parseInt(n);s=s.filter(a=>a.id===r)}else throw new Error(`Invalid period argument ${JSON.stringify(n)}`);if(s.length>1)throw new Error(`Too many periods match to ${JSON.stringify(n)}`);if(!s.length)throw new Error(`No periods found matching ${JSON.stringify(n)}`);return s[0].id}async singlePeriod(t){let e=await this.get(`/db/${this.str(t)}/period`);if(e.length<1)throw new Error("There are no periods in the database.");if(e.length>1)throw new Error("There are too many periods in the database to set initial balance.");return e[0]}async readAccounts(t){if(!this.accounts){this.accounts={},this.accountsById={};let e=await this.get(`/db/${this.str(t)}/account`);for(let n of e)this.accounts[n.number]=n,this.accountsById[n.id||0]=n}}async accountId(t,e){await this.readAccounts(t);let n=this.str(e);if(!this.accounts[n])throw new Error(`No account found matching ${JSON.stringify(e)}`);return this.accounts[n].id}async entries(t,e){if(!e)throw new Error(`Invalid entry argument ${JSON.stringify(e)}.`);let n=typeof e=="string"?[e]:e,s=[];for(let r of n){let a=/^\s*(\d+)\s+(.+?)\s+([-+]?\d+([,.]\d+)?)$/.exec(r);if(!a)throw new Error(`Invalid transaction line ${JSON.stringify(r)}`);let i=Math.round(parseFloat(a[3].replace(",","."))*100);s.push({account_id:await this.accountId(t,a[1]),number:a[1],amount:i,description:a[2]})}return s}date(t){let e=this.str(t);if(!e||!/^\d{4}-\d{2}-\d{2}$/.test(e))throw new Error(`Invalid date argument ${JSON.stringify(t)}`);return e}value(t){t=this.str(t);try{return JSON.parse(t)}catch{return t}}async jsonData(t){if(t instanceof Array){let n={};for(let s of t)Object.assign(n,await this.jsonData(s));return n}if(!t||typeof t!="string")throw new Error(`Invalid JSON data argument ${JSON.stringify(t)}.`);let e;t[0]==="@"?e=vt.default.readFileSync(t.substring(1)).toString("utf-8"):e=t;try{return JSON.parse(e)}catch{throw new Error(`Failed to parse JSON ${e.substr(0,1e3)}.`)}}async plugin(t){if(this.plugins||(this.plugins=await this.getUi("/internal/plugins")),t instanceof Array){let s=[];for(let r of t)s.push(await this.plugin(r));return s}let e=this.str(t),n=this.plugins.filter(s=>s.code===e);if(!n.length)throw new Error(`Cannot find plugin '${e}'.`);return n[0]}async importer(t,e){this.importers||(this.importers=await this.get(`/db/${this.str(t)}/importer`));let n=this.str(e),s=this.importers.filter(r=>r.name===n);if(!s.length)throw new Error(`Cannot find importer '${n}'.`);return s[0]}async tag(t,e){let s=(await this.get(`/db/${t}/tags`)).filter(r=>r.tag===e);if(!s.length)throw new Error(`Cannot find a tag '${e}.`);return s[0]}help(){let t=this.cli.originalArgs.concat(["-h"]);this.cli.run([],t)}};var $t=class extends I{addArguments(t){let e=t.add_subparsers();e.add_parser("ls",{help:"List all databases"}).set_defaults({subCommand:"ls"});let s=e.add_parser("create",{help:"Create a database"});s.set_defaults({subCommand:"create"}),s.add_argument("scheme",{help:"Bookkeeping scheme plugin code"}),s.add_argument("databaseName",{help:"Name of the new database"}),s.add_argument("companyName",{nargs:"?",help:"Name of the company (optional)"}),s.add_argument("companyCode",{nargs:"?",help:"Registration code of the company (optional)"}),s.add_argument("language",{nargs:"?",help:"Database language (optional)"}),s.add_argument("currency",{nargs:"?",help:"Currency (optional)"});let r=e.add_parser("rm",{help:"Delete a database"});r.set_defaults({subCommand:"rm"}),r.add_argument("databaseName",{help:"Name of the database"});let a=e.add_parser("upload",{help:"Upload a database"});a.set_defaults({subCommand:"upload"}),a.add_argument("path",{help:"Path to the file to upload"})}async ls(){let t=await this.get("/db");this.out("db",t)}print(t){for(let e of t)console.log(e.name)}async rm(){let{databaseName:t}=this.args;await this.delete(`/db/${t}`),(0,We.log)(`Database ${t} deleted successfully.`)}async create(){let{scheme:t,databaseName:e,companyName:n,companyCode:s,language:r,currency:a}=this.args,c={scheme:t,databaseName:e,companyName:n,companyCode:s,settings:{language:r,currency:a}};await this.post("/db",c),(0,We.log)(`Database ${e} created successfully.`)}async upload(){let{path:t}=this.args;if(!t||!_n.default.existsSync(this.str(t)))throw new Error(`File path ${t} does not exist.`);await this.postUpload("/db/upload",t),(0,We.log)(`Database ${t} uploaded successfully.`)}async run(){await this.runBy("subCommand")}},Rn=$t;m();var Pt=require("@dataplug/tasenor-common");var xt=class extends I{addArguments(t){let e=t.add_subparsers(),n=e.add_parser("ls",{help:"List all accounts"});n.set_defaults({subCommand:"ls"}),n.add_argument("db",{help:"Name of the database"});let s=e.add_parser("rm",{help:"Delete an account"});s.set_defaults({subCommand:"rm"}),s.add_argument("db",{help:"Name of the database"}),s.add_argument("id",{help:"ID of the account"});let r=e.add_parser("create",{help:"Create an account"});r.set_defaults({subCommand:"create"}),r.add_argument("db",{help:"Name of the database"}),r.add_argument("language",{help:"Account language"}),r.add_argument("currency",{help:"Account currency"}),r.add_argument("type",{help:"Account type"}),r.add_argument("number",{help:"Account number"}),r.add_argument("name",{help:"Account name"}),r.add_argument("data",{help:"Additional account data in JSON format",nargs:"?"})}async ls(){let{db:t}=this.args,e=await this.get(`/db/${t}/account`);this.out("account",e)}print(t){for(let e of t.sort((n,s)=>(n.id||0)-(s.id||0))){let{id:n,number:s,name:r,type:a,language:i,currency:c,data:u}=e;console.log(`#${n} [${i} ${c} ${a}] ${s} ${r} ${Object.keys(u).length?JSON.stringify(u):""}`)}}async rm(){let{db:t,id:e}=this.args;await this.delete(`/db/${t}/account/${e}`),(0,Pt.log)(`Account ${e} deleted successfully.`)}async create(){let{db:t,number:e,name:n,type:s,language:r,currency:a,data:i}=this.args,c={number:e,name:n,type:s,language:r,currency:a,data:i?await this.jsonData(i):{}};await this.post(`/db/${t}/account`,c),(0,Pt.log)(`Account ${e} ${n} created successfully.`)}async run(){await this.runBy("subCommand")}},Nn=xt;m();var Ze=require("sprintf-js");var me=require("@dataplug/tasenor-common"),On=P(Ee()),St=class extends I{addArguments(t){let e=t.add_subparsers(),n=e.add_parser("ls",{help:"List account balances"});n.set_defaults({subCommand:"ls"}),n.add_argument("db",{help:"Name of the database"}),n.add_argument("period",{help:"Period year, date or ID"});let s=e.add_parser("create",{help:"Initialize account balances"});s.set_defaults({subCommand:"create"}),s.add_argument("--force","-f",{action:"store_true",help:"If given, allow invalid entries to be created",required:!1}),s.add_argument("--map",{help:"Remap account numbers using JSON or @filepath mapping",required:!1}),s.add_argument("--stock",{nargs:"*",help:"Define initial stock using JSON or @filepath mapping",required:!1}),s.add_argument("--text",{help:"A description for the transaction",required:!1}),s.add_argument("db",{help:"Name of the database"}),s.add_argument("data",{help:"A JSON data or @filepath for balances"})}async ls(){let{db:t,period:e,verbose:n}=this.args,s=await this.periodId(t,e),r=await this.get(`/db/${t}/period/${s}`);if(await this.readAccounts(t),!n&&r.balances){this.out("balance",r.balances.reduce((a,i)=>({...a,[i.number]:i.total}),{}));return}this.out("balance",r)}print(t){Object.keys(t).sort().forEach(e=>{console.log(e,this.accounts[e].name,"	",(0,Ze.sprintf)("%.2f",t[e]/100))})}async create(){let{db:t,data:e,map:n,stock:s,text:r,force:a}=this.args;if(!t)throw new Error(`Invalid database argument ${JSON.stringify(t)}`);let i=await this.jsonData(e),c=n?await this.jsonData(n):{},u=await this.singlePeriod(t),l=await this.jsonData(s),d=await this.get(`/db/${t}/document`);if(d.filter(A=>A.number!==0).length&&!a)throw new Error("There are already non-initial transactions in the database and cannot be initialized anymore.");let f=Object.values(i).reduce((A,w)=>A+w,0);if(f)if(a)(0,me.warning)(`Initial balance total must be zero. Got ${f} from ${JSON.stringify(i)}.`);else throw new Error(`Initial balance total must be zero. Got ${f} from ${JSON.stringify(i)}.`);for(let A of Object.keys(i))!i[A]||await this.accountId(t,c[A]||A);let y=d.length>0?d[0]:await this.post(`/db/${t}/document`,{period_id:u.id,date:this.date(u.start_date),number:0});(0,me.log)(`Created a document #${y.id} on ${u.start_date}.`);let p=this.str(r)||"Initial balance";for(let A of Object.keys(i)){let w=c[A]||A;if(!i[A]){(0,me.log)(`Skipping an entry ${w} ${p} ${(0,Ze.sprintf)("%.2f",0)}.`);continue}let v={document_id:y.id,account_id:await this.accountId(t,w),debit:i[A]>=0?1:0,amount:Math.abs(i[A]),description:p};l[w]&&(v.data={stock:{set:(0,On.default)(l[w])}},delete l[w]);let T=await this.post(`/db/${t}/entry`,v);(0,me.log)(`Created an entry #${T.id} for ${w} ${p} ${(0,Ze.sprintf)("%.2f",i[A]/100)}.`)}if(Object.keys(l).length)throw new Error(`Unused initial stocks for accounts ${Object.keys(l).join(", ")}`)}async run(){await this.runBy("subCommand")}},Ln=St;m();var Fn=require("sprintf-js");var Un=require("@dataplug/tasenor-common"),Dt=class extends I{addArguments(t){let e=t.add_subparsers(),n=e.add_parser("ls",{help:"Find entries matching the filter"});n.set_defaults({subCommand:"ls"}),n.add_argument("--account",{help:"Match to this account number",required:!1}),n.add_argument("--text",{help:"Match to this exact description",required:!1}),n.add_argument("db",{help:"Name of the database"});let s=e.add_parser("edit",{help:"Change entries matching the filter"});s.set_defaults({subCommand:"edit"}),s.add_argument("--account",{help:"Match to this account number",required:!1}),s.add_argument("--text",{help:"Match to this exact description",required:!1}),s.add_argument("db",{help:"Name of the database"}),s.add_argument("data",{help:"JSON data for patching the entry"});let r=e.add_parser("rm",{help:"Remove entries matching the filter"});r.set_defaults({subCommand:"rm"}),r.add_argument("--account",{help:"Match to this account number",required:!1}),r.add_argument("--text",{help:"Match to this exact description",required:!1}),r.add_argument("--all",{help:"Delete the whole transaction that includes the matching line.",action:"store_true",required:!1}),r.add_argument("db",{help:"Name of the database"})}async filter(){let{db:t,account:e,text:n}=this.args;await this.readAccounts(t);let s=[];if(e){let r=await this.accountId(t,e);s.push(`account_id=${r}`)}return n&&s.push(`text=${n}`),this.get(`/db/${t}/entry${s.length?"?"+s.join("&"):""}`)}async ls(){let t=await this.filter();this.out("entry",t)}print(t){for(let e of t){let{id:n,account_id:s,debit:r,amount:a,description:i}=e;console.log(`#${n} ${this.accountsById[s||-1].number} ${this.accountsById[s||-1].name}`),console.log("    ",(0,Fn.sprintf)("%.2f",r?a/100:a/-100),"	",i),e.data&&Object.keys(e.data).length&&console.log("    ",JSON.stringify(e.data))}}async edit(){let{db:t,data:e}=this.args,n=await this.jsonData(e);for(let r of Object.keys(n))switch(r){case"description":break;case"account":n.account_id=await this.accountId(t,`${n[r]}`),delete n.account;break;default:throw new Error(`No handler yet for entry data '${r}'.`)}let s=await this.filter();for(let r of s)(0,Un.log)(`Changing entry #${r.id} to have ${JSON.stringify(n)}`),await this.patch(`/db/${t}/entry/${r.id}`,n)}async rm(){let{db:t}=this.args,e=await this.filter();if(this.args.all){let n=new Set;for(let s of e)n.add(s.document_id);for(let s of n)await this.delete(`/db/${t}/document/${s}`)}else for(let n of e)await this.delete(`/db/${t}/entry/${n.id}`)}async run(){await this.runBy("subCommand")}},jn=Dt;m();var Mn=P(require("fs")),Bn=P(require("mime-types"));var Et=require("@dataplug/tasenor-common"),It=class extends I{addArguments(t){let e=t.add_subparsers(),n=e.add_parser("ls",{help:"List all imports"});n.set_defaults({subCommand:"ls"}),n.add_argument("db",{help:"Name of the database"}),n.add_argument("name",{help:"Name of the importer"});let s=e.add_parser("create",{help:"Import a file"});s.set_defaults({subCommand:"create"}),s.add_argument("--first",{help:"First date of the allowed period YYYY-MM-DD",default:"1900-01-01"}),s.add_argument("--last",{help:"Final date of the allowed period YYYY-MM-DD",default:"2999-12-31"}),s.add_argument("--answers",{help:"Answer file",required:!1}),s.add_argument("db",{help:"Name of the database"}),s.add_argument("name",{help:"Name of the importer"}),s.add_argument("file",{help:"Path to the file(s) to import",nargs:"+"})}async ls(){let{db:t,name:e}=this.args,n=await this.importer(t,e),s=await this.get(`/db/${t}/import/${n.id}`);this.out("import",s)}async create(){let{db:t,name:e,file:n,answers:s,first:r,last:a}=this.args,i=await this.importer(t,e),c="base64",u=[];for(let f of n||[]){let y=Mn.default.readFileSync(f).toString(c);u.push({name:f,encoding:c,type:Bn.default.lookup(f),data:y})}let l=s?await this.jsonData(s):null,d=await this.post(`/db/${t}/importer/${i.id}`,{firstDate:r,lastDate:a,files:u});if(this.out("import",d),l){(0,Et.log)(`Uploading answers to process #${d.processId}`);let f=await this.post(`/db/${t}/import/${i.id}/process/${d.processId}`,{answer:l});this.out("import",f)}}print(t){if("processId"in t&&"step"in t){(0,Et.log)(`Process ID: ${t.processId}, Step: ${t.step}, ${t.status}`);return}for(let e of t.sort((n,s)=>(n.id||0)-(s.id||0))){let{id:n,name:s,status:r,error:a}=e;console.log(`#${n} ${s} ${r}`),a&&console.log("  ",a),console.log()}}async run(){await this.runBy("subCommand")}},Vn=It;m();var kt=require("@dataplug/tasenor-common");var Ct=class extends I{addArguments(t){let e=t.add_subparsers(),n=e.add_parser("ls",{help:"List all periods"});n.set_defaults({subCommand:"ls"}),n.add_argument("db",{help:"Name of the database"});let s=e.add_parser("rm",{help:"Delete a period"});s.set_defaults({subCommand:"rm"}),s.add_argument("db",{help:"Name of the database"}),s.add_argument("id",{help:"ID of the period"});let r=e.add_parser("create",{help:"Create a period"});r.set_defaults({subCommand:"create"}),r.add_argument("db",{help:"Name of the database"}),r.add_argument("start_date",{help:"First date of the period YYYY-MM-DD"}),r.add_argument("end_date",{help:"Final date of the period YYYY-MM-DD"})}async ls(){let{db:t}=this.args,e=await this.get(`/db/${t}/period`);this.out("period",e)}print(t){for(let e of t.sort((n,s)=>(n.id||0)-(s.id||0))){let{id:n,start_date:s,end_date:r}=e;console.log(`#${n} ${s} ${r}`)}}async rm(){let{db:t,id:e}=this.args;await this.delete(`/db/${t}/period/${e}`),(0,kt.log)(`Period ${e} deleted successfully.`)}async create(){let{db:t,start_date:e,end_date:n}=this.args,s={start_date:e,end_date:n};await this.post(`/db/${t}/period`,s),(0,kt.log)(`Period ${e}...${n} created successfully.`)}async run(){await this.runBy("subCommand")}},Jn=Ct;m();var Xe=require("@dataplug/tasenor-common");var _t=class extends I{addArguments(t){let e=t.add_subparsers(),n=e.add_parser("ls",{help:"List all importers"});n.set_defaults({subCommand:"ls"}),n.add_argument("db",{help:"Name of the database"});let s=e.add_parser("create",{help:"Create an importer"});s.set_defaults({subCommand:"create"}),s.add_argument("db",{help:"Name of the database"}),s.add_argument("name",{help:"Name of the importer"}),s.add_argument("plugin",{help:"Code of the import handler plugin"});let r=e.add_parser("set",{help:"Set configuration variable for an importer"});r.set_defaults({subCommand:"set"}),r.add_argument("db",{help:"Name of the database"}),r.add_argument("name",{help:"The name of the importer"}),r.add_argument("variable",{help:"Name of the configuration variable"}),r.add_argument("value",{help:"Value for the configuration variable"});let a=e.add_parser("config",{help:"Set whole configuration for an importer"});a.set_defaults({subCommand:"config"}),a.add_argument("db",{help:"Name of the database"}),a.add_argument("name",{help:"The name of the importer"}),a.add_argument("config",{help:"JSON data or @filepath for configuration"})}async ls(){let{db:t}=this.args,e=await this.get(`/db/${t}/importer`);this.out("importer",e)}print(t){for(let e of t.sort((n,s)=>(n.id||0)-(s.id||0))){let{id:n,name:s,config:r}=e;console.log(`#${n} ${s}`),r.rules&&(r.rules="...skipped..."),console.dir(r,{depth:null}),console.log()}}async create(){let{db:t,name:e,plugin:n}=this.args;await this.plugin(n);let s=this.str(n);await this.post(`/db/${t}/importer`,{name:e,config:{handlers:[s]}}),(0,Xe.log)(`Importer ${e} created successfully.`)}async set(){let{db:t,name:e,variable:n,value:s}=this.args,r=await this.importer(t,e),a=this.str(n),i=this.value(s);await this.patch(`/db/${t}/importer/${r.id}`,{config:{[a]:i}});let c=await this.get(`/db/${t}/importer/${r.id}`);(0,Xe.log)(`Variable ${a} set to ${JSON.stringify(c.config[a])}`)}async config(){let{db:t,name:e,config:n}=this.args,s=await this.importer(t,e),r=await this.jsonData(n);await this.patch(`/db/${t}/importer/${s.id}`,{config:r}),(0,Xe.log)(`Updated configuration for importer ${e}`)}async run(){await this.runBy("subCommand")}},Hn=_t;m();var se=require("@dataplug/tasenor-common"),Rt=class extends I{addArguments(t){let e=t.add_subparsers(),n=e.add_parser("ls",{help:"List plugins and their status"});n.set_defaults({subCommand:"ls"}),n.add_argument("--short","-s",{action:"store_true",help:"If given, show just plugin codes in one line",required:!1}),n.add_argument("--installed","-i",{action:"store_true",help:"If given, show only installed plugins",required:!1});let s=e.add_parser("install",{help:"Install plugins"});s.set_defaults({subCommand:"install"}),s.add_argument("code",{help:"Plugin code",nargs:"+"});let r=e.add_parser("rm",{help:"Uninstall plugins"});r.set_defaults({subCommand:"rm"}),r.add_argument("code",{help:"Plugin code",nargs:"+"}),e.add_parser("rebuild",{help:"Rebuild UI with newly installed plugins"}).set_defaults({subCommand:"rebuild"}),e.add_parser("reset",{help:"Remove all installed plugins"}).set_defaults({subCommand:"reset"}),e.add_parser("refresh",{help:"Reftresh the plugin list"}).set_defaults({subCommand:"refresh"})}print(t){for(let e of t.sort((n,s)=>n.id-s.id)){let{id:n,code:s,installedVersion:r,use:a,type:i}=e;console.log(`#${n} ${s} ${a} ${i} ${r?"[v"+r+"]":""}`)}}async ls(){let{short:t,installed:e}=this.args,n=await this.getUi("/internal/plugins");if(e&&(n=n.filter(s=>s.installedVersion)),t){console.log(n.map(s=>s.code).join(" "));return}this.out("plugin",n)}async install(){let{code:t}=this.args,e=await this.plugin(t);for(let n of e){let s=n.versions?(0,se.latestVersion)(n.versions.map(r=>r.version)):null;if(!s)throw new Error(`No version available of plugin ${t}.`);(0,se.log)(`Installing plugin ${n.code} version ${s}`),await this.postUi("/internal/plugins",{code:n.code,version:s})}}async rm(){let{code:t}=this.args,e=await this.plugin(t);for(let n of e)(0,se.log)(`Removing plugin ${n.code}`),await this.deleteUi("/internal/plugins",{code:n.code})}async rebuild(){(0,se.log)("Rebuilding plugins"),await this.getUi("/internal/plugins/rebuild")}async refresh(){(0,se.log)("Refreshing plugins"),await this.getUi("/internal/plugins")}async reset(){(0,se.log)("Removing all plugins"),await this.getUi("/internal/plugins/reset")}async run(){await this.runBy("subCommand")}},qn=Rt;m();var zn=require("sprintf-js");var Nt=class extends I{addArguments(t){let e=t.add_subparsers(),n=e.add_parser("ls",{help:"List of reports"});n.set_defaults({subCommand:"ls"}),n.add_argument("db",{help:"Name of the database"});let s=e.add_parser("view",{help:"Show a report"});s.set_defaults({subCommand:"view"}),s.add_argument("db",{help:"Name of the database"}),s.add_argument("report",{help:"Name of the report"}),s.add_argument("period",{help:"Period year, date or ID"})}async ls(){let{db:t}=this.args,e=await this.get(`/db/${t}/report`);this.out("report",e)}async view(){let{db:t,period:e,report:n}=this.args,s=await this.periodId(t,e),r=await this.get(`/db/${t}/report/${n}/${s}`);this.out("report",r)}print(t){if("options"in t){Object.keys(t.options).forEach(e=>console.log(e));return}if("data"in t){let e=t;console.log(),console.log(e.format),console.log(),"meta"in t&&(Object.keys(e.meta).forEach(i=>console.log(`${i}: ${e.meta[i]}`)),console.log());let n=[],s=t.columns||[],r=[];for(let i of s)r.push(i.title);n.push(r);for(let i of e.data){r=[];for(let c of s){let u={name:()=>i.name,numeric:()=>i.amounts&&i.amounts[c.name]!==void 0&&(0,zn.sprintf)("%.2f",(i.amounts[c.name]||0)/100)}[c.type]();r.push(u||"")}n.push(r)}let a=s.map(()=>"");for(let i=0;i<n.length;i++)for(let c=0;c<s.length;c++)n[i][c].length>a[c].length&&(a[c]=n[i][c].replace(/./g," "));for(let i=0;i<n.length;i++){let c="";for(let u=0;u<s.length;u++)c+=(n[i][u]+a[u]+" ").substr(0,a[u].length+1);console.log(c)}return}throw new Error("Default output not implented.")}async run(){await this.runBy("subCommand")}},Kn=Nt;m();var et=require("@dataplug/tasenor-common"),Ot=class extends I{addArguments(t){let e=t.add_subparsers(),n=e.add_parser("ls",{help:"List all settings"});n.set_defaults({subCommand:"ls"}),n.add_argument("--all","-a",{help:"Show all UI configurations and other extras.",action:"store_true",required:!1}),n.add_argument("db",{help:"Name of the database",nargs:"?"});let s=e.add_parser("set",{help:"Change a settings"});s.set_defaults({subCommand:"set"}),s.add_argument("dest",{help:"Name of the database, name of the plugin  or `system`"}),s.add_argument("key",{help:"Name of the setting"}),s.add_argument("value",{help:"New value for the setting"})}async ls(){let{db:t,all:e}=this.args,n=t?await this.get(`/db/${t}/settings`):null,s=await this.get("/system/settings"),r=await this.get("/system/settings/plugins"),a={};Object.keys(r).forEach(i=>{a[i]=e?r[i]:r[i].settings}),this.out("settings",t?{db:n,system:s,plugin:a}:{system:s,plugins:a})}print(t){console.dir(t,{depth:null})}async set(){let{dest:t,key:e,value:n}=this.args,s=await this.value(n),r=this.str(e),a=this.str(t);if(a==="system"){(0,et.log)(`Setting system variable ${r} to ${JSON.stringify(s)}.`),await this.patch("/system/settings",{[r]:s});return}let i=await this.get("/system/settings/plugins");if(a in i){(0,et.log)(`Setting plugin ${a} setting ${r} to ${JSON.stringify(s)}.`),await this.patch("/system/settings/plugins",{[`${a}.${r}`]:s});return}(0,et.log)(`Setting databas ${a} setting ${r} to ${JSON.stringify(s)}.`),await this.patch(`/db/${a}/settings`,{[r]:s})}async run(){await this.runBy("subCommand")}},Gn=Ot;m();var Yn=require("sprintf-js");var Lt=require("@dataplug/tasenor-common"),Ft=class extends I{addArguments(t){let n=t.add_subparsers().add_parser("create",{help:"Create initial stock"});n.set_defaults({subCommand:"create"}),n.add_argument("db",{help:"Name of the database"}),n.add_argument("data",{help:"A JSON data or @filepath for initial stock data"})}async create(){let{db:t,data:e}=this.args;if(!t)throw new Error(`Invalid database argument ${JSON.stringify(t)}`);let n=await this.jsonData(e),s=await this.singlePeriod(t),a=(await this.get(`/db/${t}/document?period=${s.id}&entries`)).filter(u=>u.number===0);if(!a.length)throw new Error("Cannot set stock unless there is 0-transaction for initial balances defined.");if(!a[0].entries)throw new Error("Cannot set stock unless there are entries in 0-transaction for initial balances.");let i={},c=0;for(let u of a[0].entries)u.account_id&&(i[u.account_id]=c++);for(let u of Object.keys(n)){let l=await this.accountId(t,u);if(l&&!i[l]){let d=await this.post(`/db/${t}/entry`,{document_id:a[0].id,account_id:l,debit:1,amount:0,description:a[0].entries[0].description});(0,Lt.log)(`Created an entry #${d.id} for ${u} ${a[0].entries[0].description} ${(0,Yn.sprintf)("%.2f",0)}.`),a[0].entries.push(d),i[l]=a[0].entries.length-1}}for(let u of Object.keys(n)){let l=await this.accountId(t,u);if(l){let d=a[0].entries[i[l]];d.data=d.data||{},Object.assign(d.data,{stock:{set:n[u]}}),await this.patch(`/db/${t}/entry/${d.id}`,{data:d.data}),(0,Lt.log)(`Updated initial stock data for entry #${d.id}.`)}}}async run(){await this.runBy("subCommand")}},Qn=Ft;m();var tt=P(require("fs")),Wn=P(require("mime-types")),nt=require("@dataplug/tasenor-common");var Ut=class extends I{addArguments(t){let e=t.add_subparsers(),n=e.add_parser("ls",{help:"List all tags"});n.set_defaults({subCommand:"ls"}),n.add_argument("db",{help:"Name of the database"}),n.add_argument("--tags-only",{help:"Show only tags",action:"store_true",required:!1});let s=e.add_parser("download",{help:"Download a tag image"});s.set_defaults({subCommand:"download"}),s.add_argument("db",{help:"Name of the database"}),s.add_argument("tag",{help:"Name of the tag"});let r=e.add_parser("rm",{help:"Delete a tag"});r.set_defaults({subCommand:"rm"}),r.add_argument("db",{help:"Name of the database"}),r.add_argument("id",{help:"ID of the tag"});let a=e.add_parser("create",{help:"Create a tag"});a.set_defaults({subCommand:"create"}),a.add_argument("db",{help:"Name of the database"}),a.add_argument("tag",{help:"Tag itself"}),a.add_argument("name",{help:"Description"}),a.add_argument("type",{help:"Group name of the tag"}),a.add_argument("path",{help:"Path to the file"}),a.add_argument("order",{help:"Ordering number for the tag",nargs:"?"})}async ls(){let{db:t,tags_only:e}=this.args,n=await this.get(`/db/${t}/tags`);if(e)for(let s of n.map(r=>r.tag))console.log(s);else this.out("tag",n)}print(t){for(let e of t.sort((n,s)=>(n.id||0)-(s.id||0))){let{id:n,tag:s,name:r,mime:a,type:i,order:c}=e;console.log(`#${n} ${s}	${r}	${a}	${i}	${c}`)}}async rm(){let{db:t,id:e}=this.args;await this.delete(`/db/${t}/tags/${e}`),(0,nt.log)(`Tag ${e} deleted successfully.`)}async download(){let{db:t,tag:e}=this.args,n=await this.tag(t,e),s=`${n.tag}.${(n.mime||"/bin").split("/")[1]}`,r=b.Buffer.from(n.picture||"","base64");tt.default.writeFileSync(s,r),(0,nt.log)(`Saved a tag to file ${s}.`)}async create(){let{db:t,tag:e,name:n,path:s,type:r}=this.args;if(!s||!tt.default.existsSync(this.str(s)))throw new Error(`File path ${s} does not exist.`);let a=Wn.default.lookup(s),i=this.num(this.args.order);if(!i){let l={},d=await this.get(`/db/${t}/tags`);for(let f of d)!f.type||(l[f.type]=Math.max(l[f.type]||0,f.order));i=(l[this.str(r)]||0)+1}let c=tt.default.readFileSync(this.str(s)).toString("base64"),u={tag:e,name:n,mime:a,type:r,order:i,picture:c};await this.post(`/db/${t}/tags`,u),(0,nt.log)(`Tag ${e} created successfully.`)}async run(){await this.runBy("subCommand")}},Zn=Ut;m();var jt=require("sprintf-js");var st=require("@dataplug/tasenor-common"),Mt=class extends I{addArguments(t){let e=t.add_subparsers(),n=e.add_parser("ls",{help:"List all transactions"});n.set_defaults({subCommand:"ls"}),n.add_argument("db",{help:"Name of the database"}),n.add_argument("period",{help:"Period year, date or ID"});let s=e.add_parser("rm",{help:"Delete a transaction"});s.set_defaults({subCommand:"rm"}),s.add_argument("db",{help:"Name of the database"}),s.add_argument("id",{help:"ID of the transaction"});let r=e.add_parser("create",{help:"Create a transaction"});r.set_defaults({subCommand:"create"}),r.add_argument("--force",{help:"Allow invalid transactions.",action:"store_true",required:!1}),r.add_argument("db",{help:"Name of the database"}),r.add_argument("date",{help:"The transaction date"}),r.add_argument("entry",{nargs:"+",help:'A transaction line as string, e.g "1234 Description +12,00"'})}async ls(){let{db:t,period:e}=this.args,n=await this.periodId(t,e),s=await this.get(`/db/${t}/document?period=${n}&entries`);await this.readAccounts(t),this.out("document",s)}print(t){for(let e of t.sort((n,s)=>(n.number||0)-(s.number||0))){let{number:n,date:s}=e;if(console.log(`#${n} ${s}`),e.entries)for(let r of e.entries)console.log("  ",this.accountsById[r.account_id||-1].number,(0,jt.sprintf)("%.2f",r.debit?r.amount/100:r.amount/-100),r.description)}}async rm(){let{db:t,id:e}=this.args;await this.delete(`/db/${t}/document/${e}`),(0,st.log)(`Document ${e} deleted successfully.`)}async create(){let{db:t,date:e,entry:n,force:s}=this.args;if(!t)throw new Error(`Invalid database argument ${JSON.stringify(t)}`);let r=await this.periodId(t,e),a=await this.entries(t,n),i=a.reduce((u,l)=>u+l.amount,0);if(i&&!s)throw new Error(`Transaction total must be zero. Got ${i} from ${JSON.stringify(a)}.`);let c=await this.post(`/db/${t}/document`,{period_id:r,date:this.date(e)});(0,st.log)(`Created a document #${c.id} on ${e}.`);for(let u of a){let l=await this.post(`/db/${t}/entry`,{document_id:c.id,account_id:u.account_id,debit:u.amount>0,amount:Math.abs(u.amount),description:u.description});(0,st.log)(`Created an entry #${l.id} for ${u.number} ${u.description} ${(0,jt.sprintf)("%.2f",u.amount/100)}.`)}}async run(){await this.runBy("subCommand")}},Xn=Mt;m();var rt=require("@dataplug/tasenor-common");var Bt=class extends I{addArguments(t){let e=t.add_subparsers();e.add_parser("ls",{help:"List all users"}).set_defaults({subCommand:"ls"});let s=e.add_parser("rm",{help:"Delete a user"});s.set_defaults({subCommand:"rm"}),s.add_argument("email",{help:"Email address of the user"});let r=e.add_parser("create",{help:"Create a user"});r.set_defaults({subCommand:"create"}),r.add_argument("name",{help:"Full name of the user"}),r.add_argument("passwd",{help:"Initial password for the user"}),r.add_argument("email",{help:"Email address of the user"});let a=e.add_parser("add",{help:"Add a user to the database"});a.set_defaults({subCommand:"add"}),a.add_argument("email",{help:"Email address of the user"}),a.add_argument("db",{help:"Name of the database"})}async ls(){let t=await this.get("/admin/user");this.out("user",t)}print(t){for(let e of t.sort((n,s)=>(n.id||0)-(s.id||0))){let{id:n,name:s,email:r,config:a}=e;console.log(`#${n} ${s} ${r} ${JSON.stringify(a)}`)}}async rm(){let{email:t}=this.args;await this.delete(`/admin/user/${t}`),(0,rt.log)(`User ${t} deleted successfully.`)}async create(){let{name:t,passwd:e,email:n}=this.args,s={name:t,password:e,email:n};await this.post("/admin/user",s),(0,rt.log)(`User ${t} created successfully.`)}async add(){let{email:t,db:e}=this.args;(0,rt.log)(`Adding user ${t} to database ${e}`),await this.post(`/admin/user/${t}/databases`,{database:this.str(e)})}async run(){await this.runBy("subCommand")}},es=Bt;var Ie;function Pr(o){return Ie||(Ie=ts.default.createInterface({input:g.default.stdin,output:g.default.stdout})),new Promise(t=>{Ie.question(o?`${o} `:">",e=>{t(e)})})}function xr(){Ie&&Ie.close()}var at=class{async request(t,e,n){let s=M.net[t],r=e.startsWith("/")?`${this.api}${e}`:`${this.api}/${e}`;return this.doRequest(s,r,n)}async requestUi(t,e,n){let s=M.net[t],r=e.startsWith("/")?`${this.uiApi}${e}`:`${this.uiApi}/${e}`;return this.doRequest(s,r,n)}async doRequest(t,e,n){let s=null,r,a=this.args.retry||0;for(let i=-1;i<a;i++){try{if(s=await t(e,n),s&&s.success)return s;r=new Error(JSON.stringify(s))}catch(u){r=u}let c=(i+1)*5;(0,M.note)(`Waiting for ${c} seconds`),await(0,M.waitPromise)(c*1e3)}throw r}async login(){if(this.token)return;(0,M.log)(`Logging in to ${this.api} as ${this.user}`);let t=await this.request("POST","/auth",{user:this.user,password:this.password});if(t.success&&t.data&&t.data instanceof Object&&"token"in t.data&&"refresh"in t.data){let{token:e,refresh:n}=t.data;this.configureApi(this.api,{token:e,refresh:n}),this.configureApi(this.uiApi,{token:e,refresh:n}),this.token=e}}configureApi(t,e=void 0){M.net.configure({sites:{[t]:{}}}),e&&(M.net.setConf(t,"token",e.token),M.net.setConf(t,"refreshToken",e.refresh))}},Jt=class extends at{constructor(){super(),this.commands={account:new Nn(this),db:new Rn(this),balance:new Ln(this),entry:new jn(this),import:new Vn(this),importer:new Hn(this),period:new Jn(this),plugin:new qn(this),report:new Kn(this),settings:new Gn(this),stock:new Qn(this),tag:new Zn(this),tx:new Xn(this),user:new es(this)}}addDefaults(t){for(let e of t){let{name:n,envName:s,defaultValue:r}=e;this.args[n]===void 0&&(this.args[n]=g.default.env[s]||r)}}async run(t=[],e=[]){let n=(a,i)=>{let c=a[i];return delete a[i],c?typeof c=="string"?c:c[0]:""},s=new ns.ArgumentParser({description:"Tasenor command line tool"});s.add_argument("command",{help:"Command handling the operation",choices:Object.keys(this.commands)}),s.add_argument("--debug","-d",{help:"If set, show logs for requests etc",action:"store_true",required:!1}),s.add_argument("--json",{help:"If set, show output as JSON",action:"store_true",required:!1}),s.add_argument("--verbose","-v",{help:"If set, show more comprehensive output",action:"store_true",required:!1}),s.add_argument("--user",{help:"User email for logging in (use USERNAME env by default)",type:String,required:!1}),s.add_argument("--password",{help:"User password for logging in (use PASSWORD env by default)",type:String,required:!1}),s.add_argument("--api",{help:"The server base URL providing Bookkeeper API (use API env by default)",type:String,required:!1}),s.add_argument("--ui-api",{help:"The server base URL providing Bookkeeper UI API (use UI_API env by default)",type:String,required:!1}),s.add_argument("--retry",{help:"If given, retry this many times if network call fails",type:Number,required:!1}),this.originalArgs=e.length?(0,Vt.default)(e):(0,Vt.default)(g.default.argv.splice(2));let r;for(let a=0;a<this.originalArgs.length;a++)if(this.commands[this.originalArgs[a]]){r=this.commands[this.originalArgs[a]];break}r&&r.addArguments(s),this.args=s.parse_args(this.originalArgs),r?.setArgs(this.args),this.addDefaults(t),this.user=n(this.args,"user"),this.password=n(this.args,"password"),this.api=n(this.args,"api"),this.uiApi=n(this.args,"ui_api"),delete this.args.command,this.args.debug||(0,M.mute)(),this.api&&this.configureApi(this.api),this.uiApi&&this.configureApi(this.uiApi),r&&await r.run()}},Sr={ask:Pr,exit:xr};m();m();var Bs=P(require("glob")),Q=P(require("path")),be=P(require("fs"));var F=require("@dataplug/tasenor-common");m();var Y=require("@dataplug/tasenor-common");var we=P(require("knex")),ct=require("pg"),ut=P(_s()),Rs=require("ts-opaque"),Xt=o=>o;ct.types.setTypeParser(ut.builtins.TIMESTAMPTZ,Xt);ct.types.setTypeParser(ut.builtins.TIMESTAMP,Xt);ct.types.setTypeParser(ut.builtins.DATE,Xt);var lt=async(o,t)=>!!await o("databases").select("*").where({name:t}).first(),Le=async(o,t,e=null)=>{let n=new Y.Crypto(L.get("SECRET")),s=await o("databases").select("*").where({name:t}).first(),r=n.decrypt(s.password);if(!r)throw new Error("Failed to get password.");return{client:"postgresql",connection:{host:e===null?s.host:e,port:s.port,database:s.name,user:s.user,password:r},pool:{min:1,max:3}}},ie={},Ns=async(o,t,e=null)=>{if(!await lt(o,t))throw delete ie[t],new Error(`Database '${t}' does not exist.`);let n=e?`${t}:${e}`:t;if(!ie[n]){let s=await Le(o,t,e);ie[n]=(0,we.default)(s)}return ie[n]},ba=async o=>{for(let t of Object.entries(ie))t[0].split(":")[0]===o&&((0,Y.log)(`Disconnecting ${t[0]}`),await t[1].destroy(),delete ie[t[0]])},Os=()=>{let o=new URL(L.get("DATABASE_URL"));return{client:"postgresql",connection:{host:o.hostname,port:parseInt(o.port)||5432,database:"postgres",user:L.get("DATABASE_ROOT_USER"),password:L.get("DATABASE_ROOT_PASSWORD")},pool:{min:1,max:1}}},Ls=o=>{let t=new URL(o);return{client:"postgresql",connection:{host:t.hostname,port:parseInt(t.port)||5432,database:t.pathname.replace(/^\//,""),user:t.username,password:t.password},pool:{min:1,max:5}}},he,en=()=>he||(he=(0,we.default)(Os()),he),Fs=()=>Ls(L.get("DATABASE_URL")),ge,Us=()=>ge||(ge=(0,we.default)(Fs()),ge),js=o=>(0,Y.isDatabaseName)(o),Ta=async(o,t,e,n,s=null,r=null)=>{if(await lt(o,t))throw new Error(`Database '${t}' exist.`);if(!js(t))throw new Error(`Invalid database name '${t}'.`);let a=en(),i="user"+ye(20),c=ye(64),u=new Y.Crypto(L.get("SECRET")),l={name:t,host:e,port:n,user:i,password:u.encrypt(c),config:{}};await a.raw(`CREATE USER "${i}" WITH PASSWORD '${c}'`),await a.raw(`CREATE DATABASE "${t}"`),await a.raw(`GRANT ALL PRIVILEGES ON DATABASE "${t}" TO "${i}"`);let d=(await o("databases").insert(l).returning("id"))[0].id;return s&&await Ms(o,t,s,r),d},Ms=async(o,t,e,n=null)=>{let s=await Le(o,t,n);s.migrations={directory:e};let r=(0,we.default)(s);await r.migrate.latest(),await r.destroy()},Aa=async(o,t,e,n=null)=>{let s=await Le(o,t,n);s.migrations={directory:e};let r=(0,we.default)(s);await r.migrate.rollback(),await r.destroy()},va=async(o,t,e=null)=>{let n=await o("databases").where({name:t}).first();if(!n)return"Database not found.";await(await Ns(o,t,e)).raw(`DROP OWNED BY ${n.user}`),ba(t),await o("database_users").where({database_id:n.id}).delete(),await o("databases").where({id:n.id}).delete();let r=en();return await r.raw(`DROP OWNED BY ${n.user}`),await r.raw(`DROP USER ${n.user}`),await r.raw(`DROP DATABASE ${n.name} WITH (FORCE)`),null};async function $a(o,t){let e=1,n=t;for(;await lt(o,(0,Rs.create)(n));)e++,n=`${t}${e}`;return n}async function Pa(){ge&&((0,Y.log)("Disconnecting master DB."),await ge.destroy()),he&&((0,Y.log)("Disconnecting root DB."),await he.destroy());for(let o of Object.entries(ie))(0,Y.log)(`Disconnecting ${o[0]}`),await o[1].destroy()}async function xa(o=null){let t=[];await L.initialize();let e=await Us(),n=await e("databases").select("name","host","port","user","password");for(let s of n){let r=await Le(e,s.name,o),{host:a,port:i,database:c,user:u,password:l}=r.connection;t.push({host:a,port:i,database:c,user:u,password:l})}return t}function Sa(){return g.default.env.DATABASE_URL?new URL(g.default.env.DATABASE_URL).hostname:null}var Fe={create:Ta,customerDbs:xa,destroy:va,disconnectAll:Pa,envHost:Sa,exists:lt,findName:$a,get:Ns,getConfig:Le,getKnexConfig:Ls,getMaster:Us,getMasterConfig:Fs,getRoot:en,getRootConfig:Os,isValidName:js,migrate:Ms,rollback:Aa};var ce=require("ts-opaque"),tn=class{constructor(){this.VERSION=null}async readTsv(t){(0,F.log)(`Reading ${t}.`);let n=be.default.readFileSync(t).toString("utf-8").trim().split(`
`).map(a=>a.split("	")),s=n[0];s[0]=s[0].replace(/^#\s+/,"");let r=[];for(let a=1;a<n.length;a++){let i={};for(let c=0;c<s.length;c++)i[s[c]]=n[a][c]||"";r.push(i)}return r}setVersion(t){this.VERSION=JSON.parse(be.default.readFileSync(t).toString("utf-8")),(0,F.log)(`Found file format version ${this.VERSION}.`)}async readAccountTsv(t){let e=/([a-z][a-z])-([A-Z][A-Z][A-Z])\.tsv$/.exec(t);if(!e)throw new Error(`File name ${t} has not correct format.`);let n=[],[,s,r]=e,a=await this.readTsv(t),i=[];for(let c of a)if(c.text!==""){let u=new Set(c.flags?c.flags.split(" "):[]),l=c.code?/^\d+(\.\d+)$/.test(c.code)?c.code:c.code.replace(/^_+/,""):null,d;try{d=c.data===void 0||c.data===""?{}:JSON.parse(c.data)}catch{throw new Error(`Parsing account data failed: ${c.data}.`)}l!==null&&(d.code=l),u.has("FAVOURITE")&&(d.favourite=!0);let f={language:s,currency:r,number:c["number / title"],name:c.text,type:c.type,data:d};if(i.length){for(let y of i)y.number=f.number,n.push(y);i=[]}n.push(f)}else{let u=/^(_*)/.exec(c["number / title"]),l={text:c["number / title"].replace(/^_+/,""),number:null,level:u?u[1].length:0};i.push(l)}return n}async setAccounts(t,e){let n=0;for(let s of e){let r=await this.readAccountTsv(s);for(let a of r)a.text?await t("heading").insert(a).catch(i=>{throw(0,F.error)(`Failed to insert a heading ${JSON.stringify(a)}`),i}):await t("account").insert(a).catch(i=>{throw(0,F.error)(`Failed to insert an account ${JSON.stringify(a)}`),i}),n++}(0,F.log)(`Inserted ${n} rows to the database.`)}async setPeriods(t,e){(0,F.log)(`Reading period file ${e}.`);let n=0,s=await this.readTsv(e);for(let r of s){let a={start_date:r.start,end_date:r.end,locked:r.flags==="LOCKED"};await t("period").insert(a),n++}(0,F.log)(`Inserted ${n} rows to the database.`)}async setEntries(t,e,n){(0,F.log)(`Reading entry file ${e}.`);let s=0,r=await t("period").select("id").orderBy("start_date"),a={},c=(await t("account").select("id","number").where({language:n.language})).reduce((p,A)=>({[A.number]:A.id,...p}),{}),u=1;for(let p of r)a[u++]=p.id;let l=await this.readTsv(e),d,f,y;for(let p of l){let A=/^Period (\d+)/.exec(p.number);if(A){if(d=a[parseInt(A[1])],!d)throw Error(`Inconsistent periods. Cannot find period number ${u}.`);continue}if(p.number!==""){let D={period_id:d,number:parseInt(p.number),date:p["date / account"]};f=(await t("document").insert(D).returning("id"))[0].id,s++,y=1;continue}if(!c[p["date / account"]])throw Error(`Inconsistent accounts. Cannot account find number ${p["date / account"]}.`);let w=parseFloat(p.amount),v=new Set(p.flags.split(" ")),T={};(v.has("VAT_IGNORE")||v.has("VAT_RECONCILED"))&&(T.VAT={},v.has("VAT_IGNORE")&&(T.VAT.ignore=!0),v.has("VAT_RECONCILED")&&(T.VAT.reconciled=!0));let h={document_id:f,account_id:c[p["date / account"]],debit:!(w<0),amount:Math.abs(w),description:p.text,row_number:y,data:T};y++,await t("entry").insert(h).catch(D=>{throw(0,F.error)(`Failed to insert an entry ${JSON.stringify(h)}`),D}),s++}(0,F.log)(`Inserted ${s} rows to the database.`)}async setConfig(t,e){(0,F.log)("Saving configuration.");let n=(s,r="")=>{let a={};return Object.keys(s).forEach(i=>{s[i]!==null&&typeof s[i]=="object"&&s[i].length===void 0?Object.assign(a,n(s[i],`${i}.`)):a[`${r}${i}`]=s[i]}),a};for(let[s,r]of Object.entries(n(e)))await t("settings").insert({name:s,value:JSON.stringify(r)})}async setTags(t,e){(0,F.log)(`Reading tag file ${e}.`);let n=Q.default.dirname(e),s=0,r=await this.readTsv(e);for(let a of r){let i=be.default.readFileSync(Q.default.join(n,a.picture)),c={tag:a.tag,name:a.name,mime:a.mime,picture:i,type:a.type,order:a.order};await t("tags").insert(c),s++}(0,F.log)(`Inserted ${s} rows to the database.`)}async clearEverything(t){(0,F.log)("Deleting all existing data."),await t("entry").del(),await t("document").del(),await t("account").del(),await t("heading").del(),await t("period").del(),await t("tags").del(),await t("settings").del()}async restore(t,e,n,s=null){let r=await Fe.get(t,(0,ce.create)(e),s);this.setVersion((0,ce.create)(Q.default.join(n,"VERSION")));let a=JSON.parse(be.default.readFileSync(Q.default.join(n,"settings.json")).toString("utf-8"));if(!a.language)throw new Error("Configuration does not have language.");await this.clearEverything(r),await this.setConfig(r,a);let i=Bs.default.sync(Q.default.join(n,"accounts","*"));await this.setAccounts(r,i);let c=Q.default.join(n,"periods.tsv");await this.setPeriods(r,(0,ce.create)(c));let u=Q.default.join(n,"entries.tsv");await this.setEntries(r,(0,ce.create)(u),a);let l=Q.default.join(n,"tags.tsv");await this.setTags(r,(0,ce.create)(l))}async run(t,e,n,s,r=null){if(n=(0,ce.create)(Q.default.resolve(n)),!be.default.existsSync(n))throw new Error(`Backup ${n} does not exist.`);await Te(`cd "${s}" && tar xf "${n}"`),await this.restore(t,e,s,r),await Te(`rm -fr "${s}"`)}};m();m();var K=P(require("path")),Ue=P(require("fs")),je=require("@dataplug/tasenor-common"),ee=require("ts-opaque");m();var dt=require("child_process"),re=require("@dataplug/tasenor-common");async function Te(o,t=!1){return t||(0,re.log)(`Running system command: ${o}`),new Promise((e,n)=>{(0,dt.exec)(o,{maxBuffer:1024*1024*500},(s,r,a)=>{if(s)return t||(0,re.error)(s),n(s);a&&!t&&(0,re.note)(`${a}`),r&&!t&&(0,re.log)(`${r}`),e(r)})})}async function Da(o,t=!1,e=!1){return t||(0,re.log)(`Running system command: ${o}`),new Promise((n,s)=>{let r="",a=(0,dt.spawn)(o,{shell:!0});a.stdout.on("data",i=>{r+=i,t||g.default.stdout.write(i)}),a.stderr.on("data",i=>{t||g.default.stderr.write(i)}),a.on("close",i=>{i?e?n(null):s(new Error(`Call '${o}' failed with code ${i}.`)):n(r)})})}function Ea(){return!Js()}function Vs(){let o=g.default.env.NODE_ENV||"production";if(!["development","staging","production"].includes(o))throw new Error(`Invalid NODE_ENV ${o}.`);return o}function Js(){return Vs()==="development"}var nn;function Ia(o){nn=o}function sn(){if(!nn)throw new Error("Server root is not set.");return nn}var Hs=P(require("dayjs")),ue=class{constructor(){this.VERSION=1}async getAccounts(t){throw new Error(`Exporter ${this.constructor.name} does not implement getAccounts().`)}async getPeriods(t){throw new Error(`Exporter ${this.constructor.name} does not implement getPeriods().`)}async getEntries(t){throw new Error(`Exporter ${this.constructor.name} does not implement getEntries().`)}async getConfig(t){throw new Error(`Exporter ${this.constructor.name} does not implement getConfig().`)}async getTags(t,e){throw new Error(`Exporter ${this.constructor.name} does not implement getTags().`)}writeTsv(t,e){(0,je.log)(`Writing ${t}`),Ue.default.writeFileSync(t,e.map(n=>n.join("	")).join(`
`)+`
`)}writeJson(t,e){(0,je.log)(`Writing ${t}`),Ue.default.writeFileSync(t,JSON.stringify(e,null,4)+`
`)}async dump(t,e){let n=K.default.join(e,"accounts");Ue.default.existsSync(n)||Ue.default.mkdirSync(n),(0,je.log)(`Saving file format version ${this.VERSION}.`),this.writeJson((0,ee.create)(K.default.join(e,"VERSION")),this.VERSION);let s=await this.getConfig(t);this.writeJson((0,ee.create)(K.default.join(e,"settings.json")),s);let r=await this.getAccounts(t);this.writeTsv((0,ee.create)(K.default.join(n,"fi-EUR.tsv")),r);let a=await this.getPeriods(t);this.writeTsv((0,ee.create)(K.default.join(e,"periods.tsv")),a);let i=await this.getEntries(t);this.writeTsv((0,ee.create)(K.default.join(e,"entries.tsv")),i);let c=await this.getTags(t,e);return this.writeTsv((0,ee.create)(K.default.join(e,"tags.tsv")),c),s}async makeTar(t,e,n){let r=`${(t.companyName||"unknown").replace(/[^-a-zA-Z0-9]/,"_")}-${(0,Hs.default)().format("YYYY-MM-DD")}-export.tgz`,a=`${e}/../${r}`,i=g.default.cwd();return n||(n=(0,ee.create)(K.default.join(i,r))),K.default.dirname(n)==="."&&(n=(0,ee.create)(K.default.join(i,K.default.basename(n)))),await Te(`cd "${e}" && tar cjf "${a}" . && mv "${a}" "${n}" && rm -fr ${e}`),(0,je.log)(`Package ready ${n}`),n}};m();var qs=P(require("knex")),on=P(require("dayjs")),zs=P(require("dayjs/plugin/utc")),ft=P(require("path")),Me=P(require("fs")),W=require("@dataplug/tasenor-common");on.default.extend(zs.default);var ka=1,Ca=2,_a=Object.keys(W.AccountType);function rn(o){return on.default.utc(o).add(2,"hours").format("YYYY-MM-DD")}var an=class extends ue{database(t){return(0,qs.default)({client:"sqlite3",connection:{filename:t},useNullAsDefault:!0})}async getAccounts(t){let e={};for(let s of await t("coa_heading").select("*").orderBy("level")){e[s.number]=e[s.number]||[];let r="";for(let a=0;a<s.level;a++)r+="_";s.text=r+s.text,e[s.number].push(s)}let n=[["# number / title","text","type","code","flags","data"]];for(let s of await t("account").select("*").orderBy("number")){if(e[s.number])for(let r of e[s.number])n.push([r.text,"","","","",""]);n.push([s.number,s.name,_a[s.type],s.vat_percentage||"",s.flags?"FAVOURITE":"",""])}return(0,W.log)(`Found ${n.length} lines of data for headings and accounts.`),n}async getPeriods(t){let e=[["# start","end","flags"]];for(let n of await t("period").select("*").orderBy("start_date"))e.push([rn(n.start_date),rn(n.end_date),n.locked?"LOCKED":""]);return(0,W.log)(`Found ${e.length} lines of data for periods.`),e}async getEntries(t){let e=[["# number","date / account","amount","text","flags"]],n=1;for(let s of await t("period").select("*").orderBy("start_date")){e.push([`Period ${n}`,"","","",""]);for(let r of await t("document").select("*").where({period_id:s.id}).orderBy("period_id","number")){e.push([r.number,rn(r.date),"","",""]);for(let a of await t("entry").join("account","entry.account_id","account.id").select("entry.*","account.number").where({document_id:r.id}).orderBy("row_number")){let i=[];a.flags&ka&&i.push("VAT_IGNORE"),a.flags&Ca&&i.push("VAT_RECONCILED"),e.push(["",a.number,a.debit?a.amount:-a.amount,a.description,i.join(" ")])}}n++}return(0,W.log)(`Found ${e.length} lines of data for documents and entries.`),e}async hasTable(t,e){let n=!0;try{await t(e).select("*").limit(1)}catch{n=!1}return n}async getConfig(t){let e=W.Bookkeeper.createConfig();e.language="fi",e.currency="EUR",e.scheme="FinnishLimitedCompanyComplete",e.schemeVersion="1.0.0",await t("account").select("*").where({number:"29391"}).first()&&(e.VAT={salesAccount:"29391",purchasesAccount:"29392",receivableAccount:"1763",payableAccount:"2939",delayedReceivableAccount:"1845",delayedPayableAccount:"2977",statementTagTypes:[]});for(let n of await t("settings").select("name","business_id"))e.companyName=n.name,e.companyCode=n.business_id;if(await this.hasTable(t,"fyffe_settings"))for(let n of await t("fyffe_settings").select("*"))switch(n.name){case"income-statement-tag-types":e.FinnishIncomeStatementReport={tagTypes:JSON.parse(n.value)};break;default:throw new Error(`Unable to parse setting '${n.name}'`)}return e.VAT&&e.VAT.statementTagTypes&&!e.FinnishIncomeStatementReport&&(e.FinnishIncomeStatementReport={tagTypes:e.VAT.statementTagTypes}),e}async getTags(t,e){let n=[["# tag","name","mime","picture","type","order"]],s=ft.default.join(e,"pictures");if(Me.default.existsSync(s)||Me.default.mkdirSync(s),await this.hasTable(t,"tags"))for(let r of await t("tags").select("*").orderBy("order")){let a=r.mime.split("/")[1],i=`${r.type}-${r.order}.${a}`;Me.default.writeFileSync(ft.default.join(s,i),r.picture),n.push([r.tag,r.name,r.mime,ft.default.join("pictures",i),r.type,r.order])}return(0,W.log)(`Found ${n.length} lines of data for tags.`),n}async getReports(t){let e={};for(let n of await t("report_structure").select("*"))e[n.id]=n.data;return(0,W.log)(`Found reports ${Object.keys(e)}.`),e}convertReport(t){let e=[["# accounts","title","flags"]];for(let n of t.trim().split(`
`)){let s;if(n!==""){if(n==="-")s=["","",["BREAK"]];else if(n==="--")s=["","",["NEW_PAGE"]];else{let r=n.split(";"),a=r[0],i="";for(let u=0;u<parseInt(a[2]);u++)i+="_";let c=[];switch(a[0]){case"H":c=["HIDE_TOTAL","REQUIRED"];break;case"G":c=["HIDE_TOTAL"];break;case"S":c=["REQUIRED"];break;case"D":c=["DETAILS"];break;case"T":break;default:throw new Error(`Cannot parse letter ${a[0]} in report code ${a} of line ${n}.`)}switch(a[1]){case"B":c.push("BOLD");break;case"I":c.push("ITALIC");break;case"P":break;default:throw new Error(`Cannot parse letter ${a[1]} in report code ${a} of line ${n}.`)}if(r.length===4)s=[`${r[1]}-${r[2]}`,i+r[3],c];else if(r.length===6)s=[`${r[1]}-${r[2]} ${r[3]}-${r[4]}`,i+r[5],c];else if(r.length===8)s=[`${r[1]}-${r[2]} ${r[3]}-${r[4]} ${r[5]}-${r[6]}`,i+r[7],c];else throw new Error(`Unable to parse line ${n} since there are ${r.length} parts.`)}e.push([s[0],s[1],s[2].join(" ")])}}return e}async run(t,e,n){if(!Me.default.existsSync(t))throw new Error(`Database ${e} does not exist.`);let s=this.database(t),r=await this.dump(s,e);return this.makeTar(r,e,n)}};m();var le=require("@dataplug/tasenor-common");var Ks=P(require("knex")),Gs=P(require("dot-object")),mt=P(require("path")),pt=P(require("fs")),cn=class extends ue{async getConfig(t){let e=le.Bookkeeper.createConfig(),n={};for(let s of await t("settings").select("*"))n[s.name]=s.value;return Object.assign(e,Gs.default.object(n)),e}async getAccounts(t){let e={};for(let s of await t("heading").select("*").orderBy("level")){e[s.number]=e[s.number]||[];let r="";for(let a=0;a<s.level;a++)r+="_";s.text=r+s.text,e[s.number].push(s)}let n=[["# number / title","text","type","code","flags","data"]];for(let s of await t("account").select("*").orderBy("number")){if(e[s.number])for(let i of e[s.number])n.push([i.text,"","","","",""]);let r=[];s.data.favourite&&r.push("FAVOURITE");let a=s.data.code||"";delete s.data.code,delete s.data.favourite,n.push([s.number,s.name,s.type,a,r.join(" "),Object.keys(s.data).length?JSON.stringify(s.data):""])}return(0,le.log)(`Found ${n.length} lines of data for headings and accounts.`),n}async getPeriods(t){let e=[["# start","end","flags"]];for(let n of await t("period").select("*").orderBy("start_date"))e.push([n.start_date,n.end_date,n.locked?"LOCKED":""]);return(0,le.log)(`Found ${e.length} lines of data for periods.`),e}async getEntries(t){let e=[["# number","date / account","amount","text","flags"]],n=1;for(let s of await t("period").select("*").orderBy("start_date")){e.push([`Period ${n}`,"","","",""]);for(let r of await t("document").select("*").where({period_id:s.id}).orderBy("period_id","number")){e.push([r.number,r.date,"","",""]);for(let a of await t("entry").join("account","entry.account_id","account.id").select("entry.*","account.number").where({document_id:r.id}).orderBy("row_number")){let i=[];a.data.vat&&a.data.vat.ignore&&i.push("VAT_IGNORE"),a.data.vat&&a.data.vat.reconciled&&i.push("VAT_RECONCILED"),e.push(["",a.number,a.debit?a.amount:-a.amount,a.description,i.join(" ")])}}n++}return(0,le.log)(`Found ${e.length} lines of data for documents and entries.`),e}async getTags(t,e){let n=[["# tag","name","mime","picture","type","order"]],s=mt.default.join(e,"pictures");pt.default.existsSync(s)||pt.default.mkdirSync(s);for(let r of await t("tags").select("*").orderBy("order")){let a=r.mime.split("/")[1],i=`${r.type}-${r.order}.${a}`;pt.default.writeFileSync(mt.default.join(s,i),r.picture),n.push([r.tag,r.name,r.mime,mt.default.join("pictures",i),r.type,r.order])}return(0,le.log)(`Found ${n.length} lines of data for tags.`),n}async run(t,e,n=void 0){let s=Fe.getKnexConfig(t),r=await this.dump((0,Ks.default)(s),e);return this.makeTar(r,e,n)}async runDb(t,e,n=void 0){let s=await this.dump(t,e);return this.makeTar(s,e,n)}};m();m();var Je=require("interactive-elements"),N=require("interactive-stateful-process"),U=require("@dataplug/tasenor-common");m();var dn=P(Ee()),Ys=P(require("merge")),Qs=require("sprintf-js"),x=require("interactive-stateful-process"),R=require("@dataplug/tasenor-common");m();function Ae(o){if(typeof o!="object"||o===null)return!1;let t=o.getRate;return!(typeof t!="function"||(t=o.getStock,typeof t!="function")||(t=o.initializeBalances,typeof t!="function")||(t=o.getAccountCanditates,typeof t!="function")||(t=o.getVAT,typeof t!="function"))}function Ra(o,t){return o.size!==t.size?!1:new Set([...o,...t]).size===o.size}function un(o,t){return Ra(o,new Set(t))}function ln(o,t=null,e=!1){let n;return t!==null?n=(0,Qs.sprintf)(`%.${t}f`,o):n=`${o}`,e&&o>=0&&(n=`+${n}`),n}var ve=class{constructor(t,e,n){this.handler=t,this.config=e,this.state=n,this.stocks={},this.balances=new R.BalanceBookkeeping}get UI(){return this.handler.UI}async initialize(t){await this.handler.system.connector.initializeBalances(t,this.balances,this.config)}getBalances(){return this.balances.summary()}getBalance(t){return this.balances.get(t)}applyBalance(t){return this.balances.apply(t)}getConfig(t,e=void 0){if(!this.config[t]){if(e!==void 0)return e;throw new x.SystemError(`A variable ${t} is not configured for transfer analyser.`)}return this.config[t]}async getTranslation(t){return this.handler.getTranslation(t,this.getConfig("language"))}getLines(t){return this.handler.getLines(this.state,t)}async collectAccounts(t,e,n={findMissing:!1}){let s=[],r={};for(let a of e.transfers){let i=await this.getAccount(a.reason,a.type,a.asset,t.id);if(i===void 0){if(!n.findMissing)throw new x.BadState(`Unable to find an account number for ${a.reason}.${a.type}.${a.asset}.`);s.push(`${a.reason}.${a.type}.${a.asset}`);continue}if(r[`${a.reason}.${a.type}.${a.asset}`]=i,a.reason==="trade"&&a.type==="stock"&&this.getConfig("allowShortSelling",!1)){let c=await this.getAccount("trade","short",a.asset,t.id);if(c===void 0){if(!n.findMissing)throw new x.BadState(`Unable to find an account number for trade.short.${a.asset}.`);s.push(`trade.short.${a.asset}`)}else r[`trade.short.${a.asset}`]=c;continue}}return n.findMissing?s:r}async collectOtherValues(t,e){let n=this.getConfig("currency"),s=new Set(t.transfers.filter(l=>!["fee"].includes(l.reason)).map(l=>l.reason)),r=new Set(t.transfers.filter(l=>!["fee"].includes(l.reason)).map(l=>l.type));function a(l,d){return un(s,l)&&un(r,d)}function i(l,d,f=null){return typeof d=="string"&&(d=[d]),t.transfers.filter(y=>y.reason===l&&d.includes(y.type)&&(f===null||y.asset===f))}function c(l,d,f=null){let y=i(l,d,f);if(y.length<1)throw new x.InvalidFile(`Dit not find entries matching ${l}.${d}.${f} from ${JSON.stringify(t)}`);if(y.length>1)throw new x.InvalidFile(`Found too many entries matching ${l}.${d}.${f}: ${JSON.stringify(y)}`);return y[0]}e.currency=n,e.exchange=this.handler.name.replace(/Import$/,""),t.transfers.forEach(l=>{l.data&&Object.assign(e,l.data)});let u;if(a(["trade"],["currency","crypto"])||a(["trade"],["currency","stock"])){let l=c("trade","currency");if(l.amount===void 0)throw new x.SystemError(`Invalid transfer amount undefined in ${JSON.stringify(l)}.`);u=l.amount<0?"buy":"sell";let d=c("trade",["crypto","stock"]);if(d.amount===void 0)throw new x.SystemError(`Invalid transfer amount undefined in ${JSON.stringify(d)}.`);e.takeAmount=ln(d.amount,null,!0),e.takeAsset=d.asset}else if(a(["trade"],["crypto"])||a(["trade"],["stock"]))u="trade";else if(a(["trade"],["currency","short"])){if(!e.kind)throw new x.BadState(`Kind is not defined in values for short trade ${JSON.stringify(t.transfers)}.`);u=e.kind}else if(a(["forex"],["currency"])||a(["forex","profit"],["currency"])||a(["forex","loss"],["currency"])){u="forex";let l=t.transfers.filter(f=>f.reason==="forex"&&f.type==="currency"&&f.asset===n);if(l.length===0)throw new x.SystemError(`Cannot find transfer of currency ${n} from ${JSON.stringify(l)}.`);if(l.length>1)throw new x.SystemError(`Too many transfers of currency ${n} in ${JSON.stringify(l)}.`);if(l[0].amount===void 0)throw new x.SystemError(`Invalid transfer amount undefined in ${JSON.stringify(l)}.`);let d=t.transfers.filter(f=>f.reason==="forex"&&f.type==="currency"&&f.asset!==n);if(l.length===0)throw new x.SystemError(`Cannot find transfer of currency not ${n} from ${JSON.stringify(l)}.`);if(l.length>1)throw new x.SystemError(`Too many transfers of currency not ${n} in ${JSON.stringify(l)}.`);if(d[0].amount===void 0)throw new x.SystemError(`Invalid transfer amount undefined in ${JSON.stringify(d)}.`);e.takeAsset=l[0].amount<0?d[0].asset:l[0].asset,e.giveAsset=l[0].amount<0?l[0].asset:d[0].asset}else if(a(["dividend","income"],["currency","statement"])||a(["tax","dividend","income"],["currency","statement"]))u="dividend";else if(a(["income"],["currency","statement"])||a(["income","tax"],["currency","statement"])){u="income";let l=c("income","statement");e.name=await this.getTranslation(`income-${l.asset}`)}else if(a(["income"],["account"])){u="income";let l=t.transfers.filter(d=>d.type==="account"&&d.data&&d.data.text!==void 0).map(d=>d.data?.text);if(!l.length)throw new x.SystemError(`If transfer uses direct 'account' type, one of the parts must have text defined in data: ${JSON.stringify(t.transfers)}`);e.name=l.join(" ")}else if(a(["investment"],["currency","statement"])){u="investment";let l=c("investment","statement");e.name=await this.getTranslation(`income-${l.asset}`)}else if(a(["expense"],["currency","statement"])||a(["expense","tax"],["currency","statement"])){u="expense";let l=c("expense","statement");e.name=await this.getTranslation(`expense-${l.asset}`)}else if(a(["expense"],["account"])){u="expense";let l=t.transfers.filter(d=>d.type==="account"&&d.data&&d.data.text!==void 0).map(d=>d.data?.text);if(!l.length)throw new x.SystemError(`If transfer uses direct 'account' type, one of the parts must have text defined in data: ${JSON.stringify(t.transfers)}`);e.name=l.join(" ")}else if(a(["distribution"],["currency","statement"])){u="distribution";let l=c("distribution","statement");e.name=await this.getTranslation(`expense-${l.asset}`)}else if(a(["tax"],["currency","statement"])){u="tax";let l=c("tax","statement");e.name=await this.getTranslation(`tax-${l.asset}`)}else if(a(["deposit"],["currency","external"])){u="deposit";let l=c("deposit","currency",n);if(l.amount===void 0)throw new x.SystemError(`Invalid transfer amount undefined in ${JSON.stringify(l)}.`)}else if(a(["withdrawal"],["currency","external"])){u="withdrawal";let l=c("withdrawal","currency",n);if(l.amount===void 0)throw new x.SystemError(`Invalid transfer amount undefined in ${JSON.stringify(l)}.`)}else if(a(["transfer"],["currency","external"])){u="transfer";let l=c("transfer","currency",n);if(l.amount===void 0)throw new x.SystemError(`Invalid transfer amount undefined in ${JSON.stringify(l)}.`);let d=c("transfer","external");e.service=d.asset}else if(a(["correction"],["currency","statement"])||a(["tax","correction"],["currency","statement"])||a(["tax","correction"],["statement"])){u="correction";let l=t.transfers.filter(f=>f.reason!=="tax"&&f.type==="statement").reduce((f,y)=>f.add(y.asset),new Set);if(l.size>1)throw new x.SystemError(`Mixed asset ${[...l].join(" and ")} corrections not supported in ${JSON.stringify(t.transfers)}`);if(!l.size)throw new x.SystemError(`Cannot find any statement types in ${JSON.stringify(t.transfers)}`);let d=l.values().next().value;/^INCOME/.test(d)?e.name=await this.getTranslation(`income-${d}`):e.name=await this.getTranslation(`expense-${d}`)}else throw console.log("Failing transfers:"),console.dir(t,{depth:null}),new x.NotImplemented(`Analyzer does not handle combination '${[...s]}' and '${[...r]}' yet.`);return e.kind=u,e}setData(t,e){t.data||(t.data={}),Object.assign(t.data,e)}setRate(t,e,n){t.data||(t.data={}),t.data.rates||(t.data.rates={}),t.data.rates[e]=n}async getRate(t,e,n,s){if(e.data&&e.data.rates&&e.data.rates[s]!==void 0&&e.data.rates[s]!==void 0){let r=e.data.rates[s];if(r!==void 0)return r}return await this.getRateAt(t,n,s)}async setValue(t,e,n,s,r=null){let a=this.getConfig("currency");if(r===null){if(e.amount===null||e.amount===void 0)return;r=e.amount}if(n==="currency"&&s===a||n==="account")e.value=Math.round(r*100);else{let i=await this.getRate(t,e,n,s);e.value=Math.round(i*r*100),this.setRate(e,s,i),n==="currency"&&(0,R.isCurrency)(e.asset)&&this.setData(e,{currency:e.asset,currencyValue:Math.round(r*100)})}}async fillInLocalCurrencies(t,e){let n=this.getConfig("currency");for(let s of e.transfers)(s.type==="account"||s.type==="currency"&&s.asset===n)&&s.amount!==null&&await this.setValue(t,s,s.type,s.asset)}async fillInCurrencies(t,e){for(let n of e.transfers)if(!n.value&&n.amount!==null){if(n.type==="currency"&&(0,R.isCurrency)(n.asset))await this.setValue(t,n,n.type,n.asset);else if(n.data&&n.data.currency&&(0,R.isCurrency)(n.data.currency)&&n.data.currencyValue)await this.setValue(t,n,"currency",n.data.currency,n.data.currencyValue/100);else if(n.type==="currency")throw new x.SystemError(`Cannot determine currency in ${JSON.stringify(n)}.`)}}fillLastMissing(t,e){if(t.length===1)return t[0].value!==null&&t[0].value!==void 0;let n=0,s=null;for(let r of t)if(r.value===null||r.value===void 0)if(s===null&&e)s=r;else return!1;else n+=r.value;return s&&(s.value=-n),!0}async calculateAssetValues(t,e){let n={},s=t.transfers.some(c=>c.reason==="trade"&&c.type!=="account"&&c.type!=="currency"&&c.amount&&c.amount<0),r=t.transfers.every(c=>c.value!==void 0),a=!1,i=!s;for(let c of t.transfers)if(c.reason==="trade"&&c.type==="stock"){let u=c.amount||0,{amount:l}=await this.getStock(e.time,c.type,c.asset);if(l<0&&u>0){a=!0,i=!1;break}}for(let c of t.transfers)if(!(c.data&&c.data.currency!==void 0&&c.data.currencyValue!==void 0)){if(c.amount===void 0)throw new x.SystemError(`Invalid transfer amount undefined in ${JSON.stringify(c)}. Please use amount="null" to denote value that needs to be calculated.`);if(!(0,R.isAssetTransferReason)(c.reason))throw new x.SystemError(`Invalid transfer reason ${JSON.stringify(c.reason)} in ${JSON.stringify(c)}.`);if(!(0,R.isAssetType)(c.type))throw new x.SystemError(`Invalid transfer type ${JSON.stringify(c.type)} in ${JSON.stringify(c)}.`)}if(await this.fillInLocalCurrencies(e.time,t),!r&&this.fillLastMissing(t.transfers,i)||(await this.fillInCurrencies(e.time,t),!r&&this.fillLastMissing(t.transfers,i)))return n;for(let c of t.transfers)if(c.value===void 0&&c.reason==="tax"){let u=c?.data?.currency;if(!u)throw new x.SystemError(`A currency must be defined in data for ${c.reason} transfers in ${JSON.stringify(c)}.`);await this.setValue(e.time,c,"currency",u)}if(!r&&this.fillLastMissing(t.transfers,i))return n;for(let c of t.transfers)c.value===void 0&&(c.reason==="fee"||c.reason==="dividend")&&await this.setValue(e.time,c,c.type,c.asset);if(!r&&this.fillLastMissing(t.transfers,i))return n;for(let c of t.transfers)if(c.reason==="trade"){let u=c.amount||0;if(u<0){if(c.value!==void 0)c.value=Math.round(c.value||0);else{let{value:l,amount:d}=await this.getStock(e.time,c.type,c.asset);if((0,R.less)(d,-u)){if(!await this.UI.getBoolean(this.config,"allowShortSelling","Do we allow short selling of assets?"))throw new x.SystemError(`We have ${d} assets ${c.asset} in stock for trading on ${e.time} when ${u} needed.`);if(d>0)throw new x.NotImplemented(`Cannot handle mix of short selling and normal selling ${u} ${c.asset} on ${e.time} and having ${d}.`);c.type="short",n.kind="short-sell",c.value=-t.transfers.filter(y=>y.value&&y.value>0&&y.type==="currency").reduce((y,p)=>y+(p&&p.value||0),0)}else if(c.value=Math.round(u*(l/d)),!c.value)throw new x.SystemError(`Asset ${c.type} ${c.asset} have no value left when trading on ${e.time}.`)}n.giveAmount=ln(u,null,!0),n.giveAsset=c.asset}else{if(a){let{value:l,amount:d}=await this.getStock(e.time,c.type,c.asset);c.value=Math.round(u*(l/d)),c.type="short",n.kind="short-buy"}else if(c.value===void 0){let l=await this.getRate(e.time,c,c.type,c.asset);c.value=Math.round(l*u*100),this.setRate(c,c.asset,l)}else c.value=Math.round(c.value||0);n.takeAmount=ln(u,null,!0),n.takeAsset=c.asset}}if(i&&await this.handleMultipleMissingValues(t),!this.fillLastMissing(t.transfers,i))throw new x.SystemError(`Unable to determine valuation in ${JSON.stringify(t)}.`);return n}async handleMultipleMissingValues(t){let e=[],n={};for(let a of t.transfers)if(a.amount===null)e.push(a);else{let i=`${a.reason}.${a.type}`;n[i]=n[i]||[],n[i].push(a)}let s=e.length;if(s<2)return;let r=Object.keys(n);if(un(new Set(["income.statement","tax.statement"]),r)){for(let a of r)n[a].length>s&&(0,R.warning)(`Trying to resolve more than one missing value, but probably leads to fail, since we got ${n[a].length} entries for ${a} while expecting ${s}.`);for(let a=0;a<s;a++){let i=[e[a]];for(let c of r)n[c][a]&&i.push(n[c][a]);this.fillLastMissing(i,!0)}return}throw new x.NotImplemented(`Not able yet to calculate missing values for ${r.join(" and ")}`)}async analyze(t,e,n){Ys.default.recursive(this.config,n),t=(0,dn.default)(t);let s=await this.collectAccounts(e,t),r=!1,a=t.transfers.filter(p=>p.reason==="fee").length>0;if(a){let p=new Set(t.transfers.filter(h=>h.reason!=="fee"&&h.reason!=="profit"&&h.reason!=="loss").map(h=>h.reason));if(p.size>1)throw new Error(`Too many non-fees (${[...p].join(" and ")}) to determine actual transfer reasoning ${JSON.stringify(t.transfers)}.`);let A=[...p][0],w=new Set(t.transfers.filter(h=>h.reason==="fee").map(h=>h.type));if(w.size>1)throw new Error(`Too many fee types (${[...w].join(" and ")}) to determine actual fee type ${JSON.stringify(t.transfers)}.`);let v=[...w][0],T;if(A==="trade")switch(v){case"currency":T="isTradeFeePartOfTotal";break;case"crypto":T="isCryptoTradeFeePartOfTotal";break;default:throw new x.NotImplemented(`Cannot handle fee type '${v}' yet.`)}else if(A==="withdrawal")T="isWithdrawalFeePartOfTotal";else if(A==="forex")T="isForexFeePartOfTotal";else throw new Error(`Handling non-fee '${A}' not implemented.`);if(r=!await this.UI.getBoolean(n,T,"Is transaction fee of type {type} already included in the {reason} total?".replace("{type}",v).replace("{reason}",await this.getTranslation(`reason-${A}`))),r)for(let h of t.transfers.filter(D=>D.reason==="fee")){let D=t.transfers.filter(S=>S.type===h.type&&S.asset===h.asset&&["trade","forex","withdrawal"].includes(S.reason));if(D.length<1)throw new x.SystemError(`Cannot find any assets to adjust for ${h.asset} fee in ${JSON.stringify(t.transfers)}`);if(D[0].amount===void 0||h.amount===void 0)throw new x.SystemError(`Unable to adjust fee assets for ${h.asset} fee in ${JSON.stringify(t.transfers)}`);D[0].amount-=h.amount}}let i=await this.calculateAssetValues(t,e),c=await this.collectOtherValues(t,i),u=c.kind,l={},d={};if(a)for(let p of t.transfers)(p.type==="crypto"||p.type==="stock"||p.type==="short")&&p.reason==="fee"&&(l[p.asset]=(l[p.asset]||0)+(p.amount||0),d[p.asset]=(d[p.asset]||0)+(p.value||0));for(let p of t.transfers){let A={};if((p.type==="crypto"||p.type==="stock"||p.type==="short")&&p.reason!=="fee"){if(p.value===void 0)throw Error(`Encountered invalid transfer value undefined for ${JSON.stringify(p)}.`);if(p.amount===void 0)throw Error(`Encountered invalid transfer amount undefined for ${JSON.stringify(p)}.`);A[p.asset]={value:p.value||0,amount:p.amount||0};let w={stock:{change:A}};l[p.asset]&&(A[p.asset].amount-=l[p.asset],A[p.asset].value-=d[p.asset],w.feeAmount=l[p.asset],w.feeCurrency=p.asset,delete l[p.asset]),this.setData(p,w);let v=p.type==="short"?"stock":p.type;await this.changeStock(e.time,v,p.asset,p.amount,p.value)}}if(Object.keys(l).length)throw new Error(`There was no matching transfer to deduct ${Object.keys(l).join(" and ")} in ${JSON.stringify(t.transfers)}.`);let f=0;for(let p of t.transfers){if(p.value===void 0)throw new x.SystemError(`Failed to determine value of transfer ${JSON.stringify(p)}.`);f+=p.value}if((u==="trade"||u==="sell"||u==="short-buy")&&f){let p=u==="short-buy"?t.transfers.filter(D=>D.reason==="trade"&&D.value&&D.value>0):t.transfers.filter(D=>D.reason==="trade"&&D.value&&D.value<0);if(p.length!==1)throw new x.BadState(`Did not found unique asset that was sold from ${JSON.stringify(t.transfers)}`);let A,w;f>0?(A="income",u==="short-buy"?w="TRADE_PROFIT_SHORT":w=`TRADE_PROFIT_${p[0].type.toUpperCase()}`):(A="expense",u==="short-buy"?w="TRADE_LOSS_SHORT":w=`TRADE_LOSS_${p[0].type.toUpperCase()}`);let v={reason:A,asset:w,amount:-f/100,type:"statement",value:-f};p[0].data&&p[0].data.notes&&(v.data={notes:p[0].data.notes});let T=await this.getAccount(v.reason,v.type,v.asset,e.id),h=`${v.reason}.${v.type}.${v.asset}`;T?s[h]=T:await this.UI.throwGetAccount(n,h),t.transfers.push(v),f=0}if(Math.abs(f)>R.ZERO_CENTS)throw new x.SystemError(`Total should be zero but got ${f} from ${JSON.stringify(t.transfers)}.`);this.fillCurrencies(t);let y=await this.createTransaction(t,u,c,s,e);return t.transactions=[y],t}async createTransaction(t,e,n,s,r){let a={date:r.time,segmentId:r.id,entries:[]},i;for(let c=0;c<t.transfers.length;c++){let u=t.transfers[c],l=u.data||{};u.text&&(i=u.text);let d=i;if(d||(d=await this.constructText(e,{...n,...l},t)),!d)throw new x.SystemError(`Failed to construct description for ${JSON.stringify(u)}.`);if(u.data&&u.data.notes){let w=[];for(let v of u.data.notes)if(v&&`${v}`.trim()){let T=await this.getTranslation(`note-${v}`);T!==`note-${v}`?w.push(T):w.push(v)}w.length&&(d+=` (${w.join(", ")})`)}let f={account:s[`${u.reason}.${u.type}.${u.asset}`],amount:u.value===void 0?0:u.value,description:d};if(!f.account)throw new x.SystemError(`Cannot find account ${u.reason}.${u.type}.${u.asset} for entry ${JSON.stringify(f)}`);let y=this.applyBalance(f);if(this.balances.mayTakeLoan(u.reason,u.type,u.asset)&&(0,R.realNegative)(y)){let w=`${u.reason}.${u.type}.${u.asset}`,v=this.balances.debtAddress(w);this.getConfig(`account.${v}`,null)===null&&await this.UI.throwDebtAccount(this.config,f.account,w)}u.data&&(f.data=(0,dn.default)(u.data));let{reason:p,type:A}=u;A==="external"&&(p==="deposit"?await this.UI.getBoolean(this.config,"recordDeposits","Deposits tend to appear in two import sources. Do you want to record deposits in this import?")||(a.executionResult="ignored"):p==="withdrawal"&&(await this.UI.getBoolean(this.config,"recordWithdrawals","Withdrawals tend to appear in two import sources. Do you want to record withdrawals in this import?")||(a.executionResult="ignored"))),f=await this.postProcessTags(f,u,r),a.entries.push(f)}return a}async postProcessTags(t,e,n){let s;if("tags"in e?s=e.tags:s=await this.getTags(e.reason,e.type,e.asset),s){if(typeof s=="string"&&/^(\[[a-zA-Z0-9]+\])+$/.test(s)&&(s=s.substr(1,s.length-2).split("][")),!(s instanceof Array))throw new x.BadState(`Invalid tags ${JSON.stringify(s)}`);t.description=`[${s.filter(r=>!!r).join("][")}] ${t.description}`}return t}async getAccount(t,e,n,s){let r=this.getConfig(`account.${t}.${e}.${n}`,null);if(typeof r=="string")return r;let a=this.getConfig(`account.${t}.${e}.*`,null);if(typeof a=="string")return a;if(/^[0-9]+$/.test(n))return n;if(!s)return;let i=this.getConfig("answers",{});if(i[s]&&i[s][`account.${t}.${e}.${n}`])return i[s][`account.${t}.${e}.${n}`]}async getTags(t,e,n){for(let s of[`tags.${t}.${e}.${n}`,`tags.${t}.${e}.*`,`tags.${t}.*.*`,"tags.*.*.*"]){let r=this.getConfig(s,null);if(r!==null){if(r instanceof Array)return r;throw new x.BadState(`Bad tags configured ${JSON.stringify(r)} for tags.${t}.${e}.${n}`)}}}async getTagsForAddr(t){let[e,n,s]=t.split(".");return this.getTags(e,n,s)}async getAccountQuery(t,e,n){let s=this.getConfig(`account.${t}.${e}.${n}`,null);if(typeof s=="object"&&s!==null)return s}async constructText(t,e,n){let s=`import-text-${t}`,r=this.getConfig("transaction.prefix",""),a=await this.getTranslation(s);if(a===s)throw new x.BadState(`Not able to find translation for '${s}'.`);for(a=`${r}${a}`;;){let i=/(\{([a-zA-Z0-9]+)\})/.exec(a);if(!i)break;if(e[i[2]]===void 0)throw new x.BadState(`Not able to find value '${i[2]}' from ${JSON.stringify(n)}`);let c=`${e[i[2]]}`;a=a.replace(i[1],c)}return a}async getRateAt(t,e,n){let s=this.handler.name,r=this.getConfig("currency");if(e==="currency"&&n===r||e==="account")return 1;if(!s&&e==="crypto")throw new Error(`Exchange is compulsory setting in cryptocurrency import. Cannot determine rate for ${n} at ${t}.`);if(!Ae(this.handler.system.connector))throw new x.SystemError("Connector used is not a transaction import connector.");return this.handler.getRate(t,e,n,r,s)}async getStock(t,e,n){if(!Ae(this.handler.system.connector))throw new x.SystemError("Connector used is not a transaction import connector.");let s=await this.getAccount("trade",e,n);if(!s)throw new Error(`Unable to find account for ${e} ${n}.`);if(this.stocks[s]||(this.stocks[s]=new R.StockBookkeeping(`Account ${s}`)),!this.stocks[s].has(e,n)){let{value:a,amount:i}=await this.handler.system.connector.getStock(t,s,n);return this.stocks[s].set(t,e,n,i,a),{value:a,amount:i}}return this.stocks[s].get(t,e,n)}async changeStock(t,e,n,s,r){await this.getStock(t,e,n);let a=await this.getAccount("trade",e,n);if(!a)throw new Error(`Unable to find account for ${e} ${n}.`);this.stocks[a]||(this.stocks[a]=new R.StockBookkeeping(`Account ${a}`)),await this.stocks[a].change(t,e,n,s,r)}async getAverage(t,e,n){let{amount:s,value:r}=await this.getStock(t,e,n);return r/s}fillCurrencies(t){let e={},n=new Set,s=(a,i)=>{e[a]!==void 0&&Math.abs(i-(e[a]||0))>.1&&(0,R.warning)(`Found two different rates ${e[a]} and ${i} for ${a} on ${JSON.stringify(t.transfers)}.`),e[a]=i};if(t.transfers.forEach(a=>{a.data&&a.data.currency&&a.data.currencyValue&&a.value!==void 0&&(s(a.data.currency,a.value/a.data.currencyValue),n.add(a.data.currency)),a.data&&a.data.rates!==void 0&&Object.keys(a.data.rates).forEach(i=>{a.data!==void 0&&a.data.rates!==void 0&&a.data.rates[i]!==void 0&&s(i,parseFloat(a.data.rates[i]))})}),Object.keys(e).length===0||(t.transfers.forEach(a=>{a.data=a.data||{},a.data.rates=a.data.rates||{},Object.assign(a.data.rates,e)}),n.size!==1))return;let r=[...n][0];t.transfers.forEach(a=>{a.data&&a.data.currency===void 0&&a.data.currencyValue===void 0&&a.value!==void 0&&e[r]!==void 0&&(a.data=a.data||{},a.data.currency=r,a.data.currencyValue=Math.round(a.value/(e[r]||0)))})}};var Ws=P(require("object-hash"));m();var Z=require("interactive-stateful-process"),Be=class{constructor(t){this.deps=t}async getConfigOrAsk(t,e,n){if(e in t)return t[e];throw new Z.AskUI({type:"flat",elements:[n,await this.submit("Continue",1,t.language)]})}async getBoolean(t,e,n){return this.getConfigOrAsk(t,e,{type:"yesno",name:`configure.${e}`,label:await this.getTranslation(n,t.language),actions:{}})}async getTranslation(t,e){return this.deps.getTranslation(t,e)}async accountLabel(t,e){let[n,s,r]=t.split("."),a=await this.getTranslation(`account-${n}-${s}`,e),i=r;return s==="statement"&&(n==="income"?i=await this.getTranslation(`income-${r}`,e):n==="expense"?i=await this.getTranslation(`expense-${r}`,e):n==="tax"&&(i=await this.getTranslation(`tax-${r}`,e))),a.replace("{asset}",i)}accountFilter(t){let[e]=t.split(".");switch(`${e}`){case"debt":return{type:["ASSET","LIABILITY"]};case"deposit":case"trade":case"withdrawal":return{type:"ASSET"};case"fee":return{type:"EXPENSE"}}return null}async account(t,e,n=void 0){let s=t.language,r={type:"account",name:`configure.account.${e}`,actions:{},label:await this.accountLabel(e,s),filter:this.accountFilter(e)};if(n)r.defaultValue=n;else{let a=await this.deps.getAccountCanditates(e,{...t,plugin:t.handlers instanceof Array&&t.handlers.length?t.handlers[0]:void 0});a.length&&(r.defaultValue=a[0],a.length>1&&(r.preferred=a))}return r}async throwGetAccount(t,e){let n=await this.account(t,e),s=await this.submit("Continue",1,t.language);throw new Z.AskUI({type:"flat",elements:[n,s]})}async throwDebtAccount(t,e,n){let s=t.language,r=await this.getTranslation("The account below has negative balance. If you want to record it to the separate debt account, please select another account below.",s),a=await this.message(r,"info"),i=n.split("."),c=`debt.${i[1]}.${i[2]}`,u=await this.account(t,c,e),l=await this.submit("Continue",1,s);throw new Z.AskUI({type:"flat",elements:[a,u,l]})}async accountGroup(t,e){let[n,s]=e[0].split("."),r=[],a=t.language;for(let i of e)r.push(await this.account(t,i));return{type:"flat",elements:[{type:"boolean",name:`grouping.${n}.${s}`,label:await this.getTranslation("Do you want to use the same account for all of them?",a),defaultValue:!1,actions:{}},{type:"case",condition:`grouping.${n}.${s}`,cases:{true:await this.account(t,`${n}.${s}.*`),false:{type:"flat",elements:r}}}]}}async submit(t,e,n){let s=await this.getTranslation("Saving failed",n),r=await this.getTranslation("Saved successfully",n);return t==="Retry"&&(s=await this.getTranslation("Retry failed",n),r=await this.getTranslation("Retried successfully",n)),{type:"button",label:t,actions:{onClick:{type:"post",url:"",objectWrapLevel:e,errorMessage:s,successMessage:r}}}}async message(t,e){return{type:"message",severity:e,text:t}}async throwErrorRetry(t,e){throw new Z.AskUI({type:"flat",elements:[await this.message(t,"error"),await this.submit("Retry",0,e)]})}async parseQuery(t,e,n){if("ask"in e)return{name:t,type:"radio",label:e.label||await this.getTranslation("Select one of the following:",n),actions:{},options:e.ask};if("chooseTag"in e)return{name:t,type:"tags",label:e.label||await this.getTranslation("Select one of the following:",n),actions:{},single:!0,options:e.chooseTag};if("text"in e)return{name:t,type:"text",label:e.label||await this.getTranslation("Please enter text:",n),actions:{}};throw new Z.SystemError(`Unable to parse UI from query ${JSON.stringify(e)}.`)}async query(t,e,n,s){let r=[];if(n&&n.length&&r.push(await this.describeLines(n,s)),e instanceof Array)for(let a of e)r.push(await this.parseQuery(t,a,s));else r.push(await this.parseQuery(t,e,s));return r.push(await this.submit("Continue",2,s)),{type:"flat",elements:r}}async throwQuery(t,e,n,s){let r=await this.query(t,e,n,s);this.throw(r)}throw(t){throw new Z.AskUI(t)}async describeLines(t,e){let n=t.map(s=>({type:"textFileLine",line:s}));return{type:"box",elements:[{type:"html",html:`<strong>${await this.getTranslation("Based on the following imported lines",e)}</strong>`},...n]}}async throwRadioQuestion(t,e,n,s){throw new Z.AskUI({type:"flat",elements:[{type:"message",severity:"info",text:t},{type:"radio",name:`configure.${e}`,options:n,actions:{}},{type:"button",label:await this.deps.getTranslation("Continue",s),actions:{onClick:{type:"post",url:"",objectWrapLevel:1}}}]})}async throwNoFilterMatchForLine(t,e,n){throw new Z.AskUI({type:"ruleEditor",name:"once",actions:{onContinue:{type:"post",url:""},onCreateRule:{type:"post",url:"/rule"}},lines:t,options:n,cashAccount:e.cashAccount})}};m();var C=require("@dataplug/tasenor-common"),$e=require("interactive-stateful-process"),ht=P(Ee()),Ve=class{constructor(t){this.handler=t,this.UI=t.UI,this.clearCache()}clearCache(){this.cache={}}cachedQuery(t){if(t.name)if((0,C.isUIQueryRef)(t)){if(!this.cache[t.name])throw new $e.BadState(`Cannot use a reference to question '${t.name}' before it is defined.`);return this.cache[t.name]}else this.cache[t.name]=t;return t}async getAnswers(t,e,n,s){let r=s.language,a={},i=[];for(let[c,u]of Object.entries(n)){u=this.cachedQuery(u);let l=s.answers||{};t in l&&c in l[t]?a[c]=l[t][c]:i.push(await this.UI.parseQuery(`answer.${t}.${c}`,u,r))}if(i.length){let c={type:"flat",elements:[await this.UI.describeLines(e,r),...i,await this.UI.submit("Continue",2,r)]};this.UI.throw(c)}return a}async classifyLines(t,e,n){let s=[],r=e.rules||[],a=new C.RulesEngine,i=!1;e=(0,ht.default)(e),e.questions&&e.questions.forEach(u=>this.cachedQuery(u));let c=e.language;(0,C.debug)("RULES","============================================================"),(0,C.debug)("RULES","Classifying segment",n.id),(0,C.debug)("RULES","============================================================");try{for(let u of t){let l=!1,d=(0,ht.default)(u.columns);if((0,C.debug)("RULES","-----------------------------------------------------"),(0,C.debug)("RULES",u.text),(0,C.debug)("RULES","-----------------------------------------------------"),(0,C.debug)("RULES",d),e.answers&&u.segmentId){let f=e.answers;if(f[u.segmentId]&&f[u.segmentId].transfers)return await this.postProcess(n,{type:"transfers",transfers:f[u.segmentId].transfers})}for(let f of r){f=(0,ht.default)(f);let y={...d,config:e,rule:f,text:u.text,lineNumber:u.line};if(a.eval(f.filter,y)){if((0,C.debug)("RULES","Rule",f.name,"with filter",f.filter,"matches."),i=!0,l=!0,!f.result)throw new $e.BadState(`The rule ${JSON.stringify(f)} has no result section.`);let p=f.questions?await this.getAnswers(n.id,t,f.questions,e):{},A="length"in f.result?f.result:[f.result];if(f.questions){let v=f.questions;Object.keys(v).forEach(T=>{v[T]=this.cachedQuery(v[T])})}let w=0;for(let v of A){(0,C.debug)("RULES",`Result[${w}]:`);let T={};for(let[h,D]of Object.entries(v))h in T?(0,C.warning)(`A rule '${f.name}' resulted duplicate value in formula '${D}' for the field '${h}''. Already having ${JSON.stringify(T)}.`):(T[h]=a.eval(D,{...y,...p}),(0,C.debug)("RULES",`  ${h} =`,JSON.stringify(T[h])));if(T.if===void 0||a.eval(T.if,{...y,...p}))if((0,C.isAssetTransfer)(T)&&T.asset!=="undefined"&&T.asset!=="null")s.push(T),T.if&&(0,C.debug)("RULES","  Accepted condition",T.if);else throw console.log("Failing lines:"),console.dir(t,{depth:null}),console.log("Matching rule:"),console.dir(f,{depth:null}),new $e.BadState(`Asset transfer ${JSON.stringify(T)} is incomplete.`);else(0,C.debug)("RULES","  Dropped due to condition",T.if);w++}break}}l||await this.UI.throwNoFilterMatchForLine(t,e,this.handler.importOptions)}if(s.length>0)return await this.postProcess(n,{type:"transfers",transfers:s})}catch(u){if(u instanceof C.RuleParsingError){(0,C.error)(`Parsing error in expression '${u.expression}': ${u.message}`),u.variables.rule&&(0,C.error)(`While parsig rule ${JSON.stringify(u.variables.rule)}`),u.variables&&u.variables.text&&(0,C.error)(`Failure in line ${u.variables.lineNumber}: ${u.variables.text}`);let l=(await this.UI.getTranslation("Parsing error in expression `{expr}`: {message}",c)).replace("{expr}",u.expression).replace("{message}",u.message);await this.UI.throwErrorRetry(l,c)}else throw u}throw i?new Error(`Found matches but the result list is empty for ${JSON.stringify(t)}.`):new Error(`Could not find rules matching ${JSON.stringify(t)}.`)}async postProcess(t,e){let n=new Set(["dividend","income","expense"]),s=new Set(e.transfers.filter(r=>n.has(r.reason)&&r.type==="currency").map(r=>r.asset));if(s.size>1)throw new $e.SystemError(`Not yet able to sort out VAT for multiple different currencies in ${JSON.stringify(e.transfers)}`);if(s.size){let r=[...s][0],a=[];for(let i of e.transfers){let c;i.data&&"vat"in i.data?c=i.data.vat:c=await this.handler.getVAT(t.time,i,r);let u=i.data&&"vatValue"in i.data?i.data.vatValue:null;if((c||u)&&i.amount){let l=Math.round(i.amount*100),d=u!=null?Math.round(l-u*100):Math.round(i.amount*100/(1+c/100));i.amount=d/100;let f=l-d,y={reason:"tax",type:"statement",asset:f>0?"VAT_FROM_PURCHASES":"VAT_FROM_SALES",amount:f/100,data:{currency:r}};i.tags&&(y.tags=i.tags),a.push(y)}}e.transfers=e.transfers.concat(a)}return e}};var fn=class extends N.TextFileProcessHandler{constructor(e){super(e);this.importOptions={parser:"csv",numericFields:[],requiredFields:[],textField:null,totalAmountField:null,csv:{}};this.UI=new Be(this),this.rules=new Ve(this)}canAppend(e){return!1}getBalance(e){if(!this.analyzer)throw new Error(`Cannot access balance for ${e} when no analyzer instantiated.`);return this.analyzer.getBalance(e)}async getTranslation(e,n){if(!n)throw new N.SystemError("Language is compulsory setting for importing, if there are unknowns to ask from UI.");return this.system.getTranslation(e,n)}getAccountCanditates(e,n){return this.system.connector.getAccountCanditates(e,n)}async groupingById(e){e.segments={};for(let n of Object.keys(e.files)){for(let s=0;s<e.files[n].lines.length;s++){let r=e.files[n].lines[s];if(!r.columns||Object.keys(r.columns).length===0)continue;let a=this.segmentId(r);if(!a||!e.segments)throw new N.InvalidFile(`The segment ID for ${JSON.stringify(r)} was not found by ${this.constructor.name}.`);a!==Je.NO_SEGMENT&&(e.segments[a]=e.segments[a]||{id:a,time:void 0,lines:[]},e.segments[a].lines.push({number:s,file:n}),r.segmentId=a)}if(!e.segments)throw new N.InvalidFile("This cannot happen.");Object.values(e.segments).forEach(s=>{let r=new Set;if(s.lines.forEach(a=>{let i=e.files[a.file].lines[a.number],c=this.time(i);c&&r.add(c.getTime())}),r.size===0)throw new N.InvalidFile(`Was not able to find timestamps for lines ${JSON.stringify(s.lines)}.`);if(r.size>1)throw new N.InvalidFile(`Found more than one (${r.size}) canditate for timestamp (${[...r]}) from lines ${JSON.stringify(s.lines)}.`);s.time=new Date([...r][0])})}return e}async parse(e,n={}){switch(this.importOptions.parser){case"csv":return this.parseCSV(e,this.importOptions.csv);default:throw new N.SystemError(`Parser '${this.importOptions.parser}' is not implemented.`)}}async segmentationCSV(e,n,s){let r=await this.parse(n,e.config),a=await this.groupingById(r);return this.debugSegmentation(a),a}async segmentationPostProcess(e){for(let n of Object.keys(e.files)){let{textField:s,totalAmountField:r}=this.importOptions;for(let a=0;a<e.files[n].lines.length;a++){let i=e.files[n].lines[a].columns;for(let c of this.importOptions.requiredFields)i[c]===void 0&&(i[c]="");for(let c of this.importOptions.numericFields)i[c]!==void 0&&(i[c]=i[c]===""?0:(0,Je.num)(i[c]));s&&(i._textField=i[s]),r&&(i._totalAmountField=i[r])}}return e}async segmentation(e,n,s){return await this.segmentationPostProcess(await this.segmentationCSV(e,n,s))}debugSegmentation(e){e.files&&Object.keys(e.files).forEach(n=>{(0,U.debug)("SEGMENTATION",`Segmentation of ${n}`),(0,U.debug)("SEGMENTATION",e.files[n].lines.filter(s=>Object.keys(s.columns).length>0))})}hash(e){let n=Object.entries(e.columns).filter(s=>s[1]!==void 0).reduce((s,r)=>({...s,[r[0]]:r[1].trim()}),{});return Ws.default.sha1(n)}segmentId(e){return e.columns&&Object.keys(e.columns).length?this.hash(e):Je.NO_SEGMENT}time(e){throw new N.NotImplemented(`Import class ${this.constructor.name} does not implement time().`)}async classification(e,n,s){let r={stage:"classified",files:n.files,segments:n.segments,result:{}};if(n.segments)for(let a of this.sortSegments(n.segments)){let i=a.lines.map(u=>n.files[u.file].lines[u.number]),c=await this.classifyLines(i,e.config,n.segments[a.id]);r.result&&(r.result[a.id]=[c])}return this.debugClassification(r),r}debugClassification(e){e.result&&Object.keys(e.result).forEach(n=>{e.result&&e.result[n]&&((0,U.debug)("CLASSIFICATION",`Classification of ${n}`),(0,U.debug)("CLASSIFICATION",e.result[n]))})}async classifyLines(e,n,s){throw new N.NotImplemented(`Import class ${this.constructor.name} does not implement classifyLines().`)}getLines(e,n){return e.segments&&e.segments[n]?e.segments[n].lines.map(a=>e.files[a.file].lines[a.number]):null}async needInputForAnalysis(e,n){if(!e.result||!e.segments)return!1;let s=new Set,r=new ve(this,n,e);for(let[a,i]of Object.entries(e.result)){let c=e.segments[a],u=i;for(let l of u)for(let d of await r.collectAccounts(c,l,{findMissing:!0}))s.add(d);for(let l of s){if(n.answers){let w=n.answers;if(a in w&&`account.${l}`in w[a]&&w[a][`account.${l}`]!==void 0){s.delete(l);continue}}let[d,f,y]=l.split("."),p=await r.getAccountQuery(d,f,y),A=this.getLines(e,a);if(!A)throw new Error(`Failed to collect lines for segment ${a}.`);if(p){let w=await this.UI.describeLines(A,n.language),v=await this.UI.query(`answer.${a}.account.${l}`,p,[],n.language);return new N.Directions({type:"ui",element:{type:"flat",elements:[w,v]}})}}}return s.size?this.directionsForMissingAccounts(s,n):!1}async directionsForMissingAccounts(e,n){let s=Object.keys(n).filter(i=>/^account\.\w+\.\w+\./.test(i)),r={};for(let i of s){let[,c,u,l]=i.split(".");l!=="*"&&(r[`${c}.${u}`]=r[`${c}.${u}`]||new Set,r[`${c}.${u}`].add(`${c}.${u}.${l}`))}for(let i of e){let[c,u,l]=i.split(".");r[`${c}.${u}`]=r[`${c}.${u}`]||new Set,r[`${c}.${u}`].add(`${c}.${u}.${l}`)}let a=[];for(let i of Object.values(r))if(i.size===1)e.has([...i][0])&&a.push(await this.UI.account(n,[...i][0]));else{let c=0;for(let u of i)e.has(u)&&c++;c&&a.push(await this.UI.accountGroup(n,[...i]))}return a.length===0?!1:(a.push(await this.UI.submit("Continue",1,n.language)),new N.Directions({type:"ui",element:{type:"flat",elements:a}}))}sortSegments(e){let n=s=>typeof s.time=="string"?new Date(s.time).getTime():s.time.getTime();return Object.values(e).sort((s,r)=>n(s)-n(r))}async analysis(e,n,s,r){if(this.analyzer=new ve(this,r,n),n.result&&n.segments){let i=this.sortSegments(n.segments),c;if(i.length){let l,d=r.firstDate?new Date(`${r.firstDate}T00:00:00.000Z`):null;for(let f=0;f<i.length;f++){let y=typeof i[f].time=="string"?new Date(i[f].time):i[f].time;if(!d||y>=d){l=y;break}}if(!l)throw new Error(`Unable to find any valid time stamps after ${d}.`);c=n.result[i[i.length-1].id],await this.analyzer.initialize(l)}for(let l of i){let d=n.result[l.id];if(!d)throw new N.BadState(`Cannot find results for segment ${l.id} during analysis (${JSON.stringify(l)})`);for(let f=0;f<d.length;f++)d[f]=await this.analyze(d[f],l,r,n)}let u=this.analyzer.getBalances().filter(l=>l.mayTakeLoan);if(c&&u.length){if(!this.analyzer)throw new Error("No analyzer. Internal error.");let l=c[c.length-1].transactions;for(let d of u){let f={date:l[l.length-1].date,segmentId:l[l.length-1].segmentId,entries:[]},[y,p,A]=d.debtAddress.split("."),w=await this.analyzer.getAccount(y,p,A);if(d.account===w)continue;let v=this.analyzer.getBalance(d.address)||0,T=this.analyzer.getBalance(d.debtAddress)||0,h,D;if((0,U.realNegative)(v)){let S=await this.getTranslation("Additional loan taken",r.language);h={account:d.account,amount:-v,description:S},D={account:w||"0",amount:v,description:S}}else if((0,U.realNegative)(T)){let S=await this.getTranslation("Loan paid back",r.language),k=Math.abs(Math.min(-T,v));(0,U.realPositive)(k)&&(h={account:d.account,amount:-k,description:S},D={account:w||"0",amount:k,description:S})}if(h&&D){let S=await this.analyzer.getTagsForAddr(d.debtAddress);if(S){let k=S instanceof Array?`[${S.join("][")}]`:S;h.description=`${k} ${h.description}`,D.description=`${k} ${D.description}`}f.entries.push(h),this.analyzer.applyBalance(h),f.entries.push(D),this.analyzer.applyBalance(D),l.push(f)}}}}let a={...n,stage:"analyzed"};return this.debugAnalysis(a),a}async analyze(e,n,s,r){if(!this.analyzer)throw new N.SystemError("Calling analyze() without setting up analyzer.");switch(e.type){case"transfers":return await this.analyzer.analyze(e,n,s);default:throw new N.NotImplemented(`Cannot analyze yet type '${e.type}' in ${this.constructor.name}.`)}}debugAnalysis(e){e.result!==void 0&&Object.keys(e.result).forEach(n=>{if((0,U.debug)("ANALYSIS",`Analyzed ${n}`),e.result&&n in e.result)for(let s of e.result[n])(0,U.debug)("ANALYSIS",s.transfers)})}async execution(e,n,s){let r=new U.TransactionApplyResults;if(n.result){for(let a of Object.keys(n.result)){let i=n.result[a];for(let c of i)if(c.transactions)for(let u of c.transactions)u.executionResult||(u.executionResult="not done")}for(let a of Object.keys(n.result)){(0,U.debug)("EXECUTION",`Execution of segment ${a}`);let i=n.result[a];for(let c of i){(0,U.debug)("EXECUTION",c.transactions);let u=await this.system.connector.applyResult(e.id,c);r.add(u)}}}return this.analyzer=null,{...n,output:r.toJSON(),stage:"executed"}}async getVAT(e,n,s){return this.system.connector.getVAT(e,n,s)}async getRate(e,n,s,r,a){if(!Ae(this.system.connector))throw new N.SystemError("Connector used is not a transaction import connector.");return this.system.connector.getRate(e,n,s,r,a)}};m();m();var pn=P(require("crypto")),gt=P(require("bcrypt")),mn=class{static async hash(t){let e=await gt.default.genSalt(13);return await gt.default.hash(t,e)}static async compare(t,e){return await gt.default.compare(t,e)}};function ye(o=32){return pn.default.randomBytes(o/2).toString("hex")}function Na(){function o(){return(pn.default.randomBytes(1)[0]%16).toString(16)}return"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx".replace(/x/g,o)}m();var er=P(require("cors")),yn=P(require("express")),j=require("@dataplug/tasenor-common");m();var te=require("@dataplug/tasenor-common"),bt=P(require("jsonwebtoken")),Zs=require("ts-opaque");m();var hn=["TASENOR_API_URL","API_SITE_TOKEN","DATABASE_ROOT_PASSWORD","DATABASE_ROOT_USER","DATABASE_URL","SECRET","ERP_SITE_TOKEN"],Oa=new Set(hn),yt=class{constructor(t){this.url=t,this.values={},this.initialized=!1,this.secret=null}async initialize(){throw new Error(`A class ${this.constructor.name} does not implement initialize().`)}get(t){if(!Oa.has(t))throw new Error(`A variable ${t} is not valid vault value.`);if(!(t in this.values))throw new Error(`Cannot find variable ${t} from the vault.`);return this.values[t]}getPrivateSecret(){return this.secret===null&&(this.secret=ye(512)),this.secret}setPrivateSecret(t){this.secret=t}},wt=class extends yt{async initialize(){for(let t of hn){let e=g.default.env[t];e!==void 0&&(this.values[t]=e)}}},He;function Pe(){if(He&&He.url===g.default.env.VAULT_URL)return He;if(!g.default.env.VAULT_URL)throw new Error("No VAULT_URL set and cannot instantiate the vault.");let o=new URL(g.default.env.VAULT_URL);switch(o.protocol){case"env:":He=new wt(g.default.env.VAULT_URL);break;default:throw new Error(`Cannot recognize protocol ${o.protocol} of vault URL ${g.default.env.VAULT_URL}`)}return He}function La(o){let t=Pe();if(!t.initialized)throw new Error("Cannot use the vault before it is initialized.");let e=t.get(o);if(e===void 0)throw new Error(`Cannot find value ${o} from the vault.`);return e}function Fa(){let o=Pe();if(!o.initialized)throw new Error("Cannot use the vault before it is initialized.");return o.getPrivateSecret()}function Ua(o){Pe().setPrivateSecret(o)}async function ja(){let o=Pe();o.initialized=!0,await o.initialize()}var L={get:La,getPrivateSecret:Fa,getVault:Pe,initialize:ja,setPrivateSecret:Ua};function Ma(o){let t;return o.query&&o.query.token?t=o.query.token:o.headers.authorization&&/^Bearer /.test(o.headers.authorization)&&(t=o.headers.authorization.substr(7)),t}async function gn(o,t,e=0){let n=t==="refresh"?await L.get("SECRET"):L.getPrivateSecret();if(!n)throw new Error("Cannot fins secret to sign token.");e||(e=t==="refresh"?te.REFRESH_TOKEN_EXPIRY_TIME:te.TOKEN_EXPIRY_TIME);let s={audience:t,expiresIn:e,issuer:te.TOKEN_ISSUER};return(0,Zs.create)(bt.default.sign({data:o},n,s))}async function Ba(o,t,e=0){let n=await gn(o,t,e),s=await gn({audience:t,owner:o.owner,feats:o.feats,plugins:o.plugins},"refresh",e*2);return{token:n,refresh:s}}function Va(o,t,e,n=!1){if(!t)throw new Error("Cannot verify token since no secret given.");if(!e)throw new Error("Cannot verify token since no audience given.");function s(r){n||(0,te.error)(r)}try{let r=bt.default.verify(o,t,{audience:e,issuer:[te.TOKEN_ISSUER]});if(!r)s("Cannot decode the token.");else if(!r.data)s(`Cannot find any payload from the token ${o}.`);else{if(!r.exp)return s(`Token content ${r} does not have exp-field.`),null;if(r.data.audience){let a=r.data;return!a.owner||!a.feats?(s(`Cannot find proper payload from the refresh token with content ${JSON.stringify(r)}.`),null):a}else{let a=r.data;return!a.owner||!a.feats?(s(`Cannot find proper payload from the token with content ${JSON.stringify(r)}.`),null):a}}}catch(r){s(`Token verification failed ${r} for ${JSON.stringify(Xs(o))}`)}return null}function Xs(o){return bt.default.decode(o,{json:!0,complete:!0})}async function Ja(o,t,e=!1){if(!o)return!1;let n=t==="refresh"?await L.get("SECRET"):L.getPrivateSecret();return n?!!ne.verify(o,n,t,e):!1}var ne={check:Ja,get:Ma,parse:Xs,sign:gn,sign2:Ba,verify:Va};var tr=P(require("helmet"));function Tt(o){return o.replace(/\btoken=[^&]+\b/,"token=xxxx")}function Ha(o){let t=[];t.push((n,s,r)=>{if(n.method!=="OPTIONS"){let a,i=ne.get(n);if(i){let l=ne.parse(i);if(l&&l.payload&&l.payload.data){a=l.payload.data.owner;let d=l.payload.aud;switch(l.payload.aud==="refresh"&&(d=l.payload.data.audience),d){case"sites":a=`Site ${a}`;break;case"bookkeeping":a=`User ${a}`;break}}}let u=`${a?`${a} from ${n.ip}`:`${n.ip}`} ${n.method} ${n.hostname} ${Tt(n.originalUrl)}`;(0,j.log)(u)}r()}),t.push((0,er.default)({origin:o.origin}));let e;if(o.api){let n=new URL(o.api).origin;e={useDefaults:!0,directives:{defaultSrc:["'self'",n],imgSrc:["'self'","data:",n],scriptSrc:["'self'","'unsafe-eval'"]}}}else e=!1;return t.push((0,tr.default)({contentSecurityPolicy:e})),t}function qa(){let o=[];return o.push((t,e,n,s)=>{if((0,j.error)("Internal error:",t),n.headersSent)return s(t);n.status(500).send({message:"Internal server error."});let r=`${e.ip} ${e.method} ${e.hostname} ${Tt(e.originalUrl)} => ${n.statusCode}`;(0,j.error)(r)}),o}function za({url:o,json:t,user:e,uuid:n,admin:s,superuser:r,audience:a,token:i,upload:c}){let u=[];r&&(s=!0),s&&(e=!0),e&&!a&&(a="bookkeeping"),a&&(i=!0),n&&(i=!0);let l={};return c&&(l.limit=j.MAX_UPLOAD_SIZE),(o||c&&!o&&!t)&&u.push(yn.default.urlencoded({extended:!0,...l})),t&&u.push(yn.default.json({...l})),i&&u.push(async(d,f,y)=>{f.locals.token=ne.get(d),y()}),n&&u.push(async(d,f,y)=>{if(!f.locals.token)return(0,j.error)("There is no token in the request and we are looking for UUID."),f.status(403).send({message:"Forbidden."});let p=d.headers["x-uuid"];if(!p)return(0,j.error)("Cannot find UUID from the request."),f.status(403).send({message:"Forbidden."});let A=ne.parse(f.locals.token);if(!A)return(0,j.error)(`Cannot parse payload from the token ${f.locals.token}`),f.status(403).send({message:"Forbidden."});let w=A.payload.aud,v=L.getPrivateSecret(),T=ne.verify(f.locals.token,v,w);if(!T)return(0,j.error)(`Failed to verify token ${f.locals.token} for audience ${w}.`),f.status(403).send({message:"Forbidden."});f.locals.uuid=p,f.locals.owner=T.owner,y()}),a&&u.push(async(d,f,y)=>{let p=f.locals.token;if(!p){(0,j.error)(`Request ${d.method} ${Tt(d.originalUrl)} from ${d.ip} has no token.`),f.status(401).send({message:"Unauthorized."});return}let A=a==="refresh"?await L.get("SECRET"):L.getPrivateSecret();if(!A)return(0,j.error)("Cannot find SECRET."),f.status(500).send({message:"Unable to handle authorized requests at the moment."});if(!a)return f.status(500).send({message:"Internal error."});let w=ne.verify(p,A,a);if(!w)return(0,j.error)(`Request from ${d.ip} has bad token ${p}`),f.status(403).send({message:"Forbidden."});if(s&&!w.feats.ADMIN&&!w.feats.SUPERUSER)return(0,j.error)(`Request denied for admin access to ${JSON.stringify(w)}`),f.status(403).send({message:"Forbidden."});if(r&&!w.feats.SUPERUSER)return(0,j.error)(`Request denied for superuser access to ${JSON.stringify(w)}`),f.status(403).send({message:"Forbidden."});f.locals.auth=w,f.locals.user=w.owner,y()}),u}m();m();var nr=P(require("path"));var V=class{constructor(){this.id=null,this.code="",this.title="",this.version=null,this.releaseDate=null,this.use="unknown",this.type="unknown",this.icon="",this.description="",this.path="",this.languages={}}async install(){}async uninstall(){}async installToDb(t){}async uninstallFromDb(t){}get fullPath(){return nr.default.join(sn(),"src","plugins",this.path)}filePath(t){return`${this.fullPath}/${t}`}toJSON(){return{id:this.id,code:this.code,title:this.title,description:this.description,icon:this.icon,version:this.version,releaseDate:this.releaseDate,use:this.use,type:this.type,path:this.path}}getSettings(){return null}getGlobalSettings(){return null}t(t,e){return this.catalog?this.catalog.t(t,e):e in this.languages&&t in this.languages[e]?this.languages[e][t]:t}async getSetting(t,e){let n=await t("settings").select("value").where({name:`${this.code}.${e}`}).first();return n?n.value:void 0}static create(t,e,n){let s=new t;return s.path=e,s.catalog=n,s}};m();var sr=P(require("fs"));var wn=class extends V{constructor(...e){super();this.sources=e}async getKnowledge(){let e={};for(let n of this.sources){let s=this.filePath(`${n}.json`),r=JSON.parse(sr.default.readFileSync(s).toString("utf-8"));Object.assign(e,{[n]:r})}return e}};m();var rr=require("@dataplug/tasenor-common"),ar=P(require("fs"));var bn=class extends V{constructor(e){super();this.handler=e,this.UI=e.UI,this.languages=this.getLanguages()}getLanguages(){return{en:{"account-debt-currency":"Account for recording debt in {asset} currency","account-deposit-currency":"Account for depositing {asset} currency","account-deposit-external":"Account for external deposit source for {asset}","account-distribution-currency":"Account to pay our {asset} dividends from","account-distribution-statement":"Account to record our dividend payments for {asset}","account-dividend-currency":"Account for recording received {asset} dividends","account-expense-currency":"Account for expenses in {asset} currency","account-expense-statement":"Account for recording expense {asset}","account-fee-currency":"Account for fees in {asset} currency","account-fee-crypto":"Account for fees in {asset} crypto currency","account-forex-currency":"Account for {asset} foreign exchange","account-income-currency":"Account for income in {asset} currency","account-income-statement":"Account for recording income {asset}","account-investment-currency":"Account for receiving investments in {asset} currency","account-investment-statement":"Account for recording investment {asset}","account-loss-currency":"Account for recording losses in currency {asset}","account-profit-currency":"Account for recording profits in currency {asset}","account-tax-currency":"Account for recording tax in currency {asset}","account-tax-statement":"Account for tax statament {asset}","account-trade-crypto":"Account for trading crypto currency {asset}","account-trade-stock":"Account for trading stocks {asset}","account-trade-currency":"Account for using currency {asset} for trading","account-transfer-currency":"Account for transferring currency {asset}","account-transfer-external":"Account for transferring to/from external source {asset}","account-withdrawal-currency":"Account for withdrawing currency {asset}","account-withdrawal-external":"Account for withdrawing from external source {asset}","asset-type-crypto":"a crypto currency","asset-type-currency":"a currency","asset-type-external":"an external instance","asset-type-statement":"a statement recording","asset-type-stock":"a stock exchange traded asset","asset-type-short":"a short position","import-text-buy":"Buy {takeAmount} {takeAsset}","import-text-correction":"{name}","import-text-deposit":"Deposit to {exchange} service","import-text-distribution":"{name}","import-text-dividend":"Dividend {asset}","import-text-expense":"{name}","import-text-forex":"Sell currency {giveAsset} for {takeAsset}","import-text-income":"{name}","import-text-investment":"{name}","import-text-sell":"Sell {giveAmount} {giveAsset}","import-text-short-buy":"Closing short position {takeAmount} {takeAsset}","import-text-short-sell":"Short selling {giveAmount} {giveAsset}","import-text-tax":"{name}","import-text-trade":"Trade {giveAmount} {giveAsset} {takeAmount} {takeAsset}","import-text-transfer":"{service} transfer","import-text-withdrawal":"Withdrawal from {exchange} service","reason-deposit":"deposit","reason-dividend":"payment","reason-expense":"expense","reason-fee":"fee","reason-forex":"exchange","reason-income":"income","reason-loss":"loss","reason-profit":"profit","reason-trade":"trading","reason-transfer":"transfers","reason-withdrawal":"withdrawal","note-split":"Split","note-converted":"Converted"},fi:{"account-debt-currency":"Tili veloille valuutassa {asset}","account-deposit-currency":"Tili valuutan {asset} talletuksille","account-deposit-external":"Vastatili ulkoisille talletuksille {asset}","account-distribution-currency":"Tili, josta maksetaan {asset} osingot","account-distribution-statement":"Raportointitili, johon kirjataan maksettavat osingot {asset}","account-dividend-currency":"Tili saaduista {asset} osingoista","account-expense-currency":"Tili kuluille {asset} valuutassa","account-expense-statement":"Raportointitili {asset} kuluille","account-fee-currency":"Tili k\xE4ytt\xF6maksuille {asset} valuutassa","account-fee-crypto":"Tili k\xE4ytt\xF6maksuille {asset} kryptovaluutassa","account-forex-currency":"Valuutanvaihtotili {asset} valuutalle","account-income-currency":"Tili tuloille {asset} valuutassa","account-income-statement":"Raportointitili {asset} tuloille","account-investment-currency":"Tili saaduille sijoituksille {asset} valuutassa","account-investment-statement":"Raportointitili sijoituksille {asset} valuutassa","account-loss-currency":"Tili tappioiden kirjaamiseen {asset} valuutassa","account-profit-currency":"Raportointitili tappioiden kirjaamiseen {asset} valuutassa","account-tax-currency":"Verot {asset} valuutassa","account-tax-statement":"Raportointitili veroille {asset} valuutassa","account-trade-crypto":"Vaihto-omaisuustili {asset} kryptovaluutalle","account-trade-stock":"Vaihto-omaisuustili {asset} osakkeelle","account-trade-currency":"Valuuttatili {asset} valuutalle vaihto-omaisuuden hankintaan","account-transfer-currency":"Siirtotili {asset} valuutalle","account-transfer-external":"Siirtotili ulkoiseen kohteeseen {asset} valuutalle","account-withdrawal-currency":"Nostotili {asset} valuutalle","account-withdrawal-external":"Vastatili valuutan {asset} nostoille","asset-type-crypto":"kryptovaluutta","asset-type-currency":"valuutta","asset-type-external":"ulkopuolinen instanssi","asset-type-statement":"raportointi","asset-type-stock":"osake tai vastaava","asset-type-short":"lyhyeksi myyty positio","Do you want to import also currency deposits here?":"Haluatko tuoda my\xF6s valuuttojen talletukset t\xE4nne?","Do you want to import also currency withdrawals here?":"Haluatko tuoda my\xF6s valuuttojen nostot t\xE4nne?","import-text-buy":"Osto {takeAmount} {takeAsset}","import-text-correction":"{name}","import-text-deposit":"Talletus {exchange}-palveluun","import-text-distribution":"{name}","import-text-dividend":"Osinko {asset}","import-text-expense":"{name}","import-text-forex":"Valuutanvaihto","import-text-investment":"{name}","import-text-sell":"Myynti {giveAmount} {giveAsset}","import-text-short-buy":"Suljettu lyhyeksimyynti {takeAmount} {takeAsset}","import-text-short-sell":"Lyhyeksimyynti {giveAmount} {giveAsset}","import-text-tax":"{name}","import-text-trade":"Vaihto {giveAmount} {giveAsset} {takeAmount} {takeAsset}","import-text-transfer":"{service} siirto","import-text-withdrawal":"Nosto {exchange}-palvelusta","Parsing error in expression `{expr}`: {message}":"Virhe laskukaavassa `{expr}`: {message}","reason-deposit":"talletus","reason-dividend":"maksu","reason-expense":"meno","reason-fee":"kulu","reason-forex":"vaihto","reason-income":"tulo","reason-loss":"tappio","reason-profit":"tuotto","reason-trade":"vaihdanta","reason-transfer":"siirto","reason-withdrawal":"nosto","Retried successfully":"Uudelleenyritys onnistui","Retry failed":"Uudelleenyritys ei onnistunut","Select one of the following:":"Valitse yksi seuraavista:","Additional information needed":"Tarvitaan lis\xE4tietoja","Based on the following imported lines":"Seuraavien tuotujen rivien perusteella","Do you want to use the same account for all of them?":"Haluatko k\xE4ytt\xE4\xE4 samaa tili\xE4 kaikille samanlaisille?",Created:"Luotuja",Duplicates:"Aiemmin luotuja",Ignored:"V\xE4liinj\xE4tettyj\xE4","Account Changes":"Tilien muutokset","Process Was Successfully Completed!":"Prosessointi saatu p\xE4\xE4t\xF6kseen onnistuneesti!","Do we allow short selling of assets?":"Sallitaanko lyhyeksi myynti?",January:"tammikuu",February:"helmikuu",March:"maaliskuu",April:"huhtikuu",May:"toukokuu",June:"kes\xE4kuu",July:"hein\xE4kuu",August:"elokuu",September:"syyskuu",October:"lokakuu",November:"marraskuu",December:"joulukuu","note-split":"splitti","note-converted":"konvertoitu","The account below has negative balance. If you want to record it to the separate debt account, please select another account below:":"Tilill\xE4 {account} on negatiivinen saldo. Jos haluat kirjata negatiiviset saldot erilliselle velkatilille, valitse tili seuraavasta:","Additional loan taken":"Lainanoton lis\xE4ys","Loan paid back":"Lainan takaisinmaksu","The date {date} falls outside of the period {firstDate} to {lastDate}.":"P\xE4iv\xE4m\xE4\xE4r\xE4 {date} on tilikauden {firstDate} - {lastDate} ulkopuolella.","What do we do with that kind of transactions?":"Mit\xE4 t\xE4m\xE4nkaltaisille tapahtumille tulisi tehd\xE4?","Ignore transaction":"J\xE4tt\xE4\xE4 v\xE4liin","Halt with an error":"Keskeytt\xE4\xE4 tuonti virheeseen","Is transaction fee of type {type} already included in the {reason} total?":"Onko {reason}-tapahtumassa tyypin {type} kulut lis\xE4tty valmiiksi yhteissummaan?"}}}getHandler(){return this.handler}getRules(){let e=this.filePath("rules.json");return(0,rr.log)(`Reading rules ${e}.`),JSON.parse(ar.default.readFileSync(e).toString("utf-8")).rules}};m();var Tn=P(require("fs"));var qe=P(require("dayjs")),or=P(require("dayjs/plugin/quarterOfYear"));qe.default.extend(or.default);var An=class extends V{constructor(...e){super();this.formats=e}getReportStructure(e){let n=this.filePath(`${e}.tsv`);if(Tn.default.existsSync(n))return Tn.default.readFileSync(n).toString("utf-8")}getReportStructures(){let e={};for(let n of this.formats)e[n]=this.getReportStructure(n);return e}hasReport(e){return this.formats.includes(e)}getReportOptions(e){return{}}time2str(e){return e===null?null:(e instanceof Date&&(e=e.toISOString()),e.substr(0,10))}flags2item(e){let n={};return e.forEach(s=>{switch(s){case"NEW_PAGE":break;case"BREAK":n.break=!0;break;case"BOLD":n.bold=!0;break;case"ITALIC":n.italic=!0;break;case"DETAILS":n.accountDetails=!0;break;case"HIDE_TOTAL":n.hideTotal=!0;break;case"REQUIRED":n.required=!0;break;default:throw new Error(`Cannot recoginze report format flag '${s}'.`)}}),n}async getColumns(e,n,s,r){if(!s.periods)throw new Error(`Need periods to define columns ${JSON.stringify(s)}`);let a=s.periods.map(i=>({type:"numeric",name:"period"+i.id,title:this.columnTitle(e,i,s)}));return a.unshift({name:"title",title:"",type:"name"}),a}columnTitle(e,n,s){throw new Error(`Report plugin ${this.constructor.name} does not implement columnTitle().`)}forceOptions(e){return{negateAssetAndProfit:!1,addPreviousPeriod:!1}}async constructSqlQuery(e,n,s){let r="(CASE debit WHEN true THEN 1 ELSE -1 END)";n.negateAssetAndProfit&&(r+=" * (CASE WHEN account.type IN ('ASSET', 'PROFIT') THEN 1 ELSE -1 END)");let a=[n.periodId];if(n.addPreviousPeriod){let c=await e.select("*").from("period").where("id","<=",n.periodId).orderBy("end_date","desc").limit(2);c.length>1&&a.push(c[1].id),n.periods=c}let i=e.select("document.period_id AS periodId","document.number AS documentId","document.date","account.name","account.type","account.number",e.raw(`CAST(ROUND(${r} * entry.amount * 100) AS BIGINT) AS amount`),"entry.description").from("entry").leftJoin("account","account.id","entry.account_id").leftJoin("document","document.id","entry.document_id").whereIn("document.period_id",a);return n.accountId&&(i=i.andWhere("account.id","=",n.accountId)),i=i.orderBy("document.date").orderBy("document.number").orderBy("document.id").orderBy("entry.row_number"),i}async renderReport(e,n,s={}){Object.assign(s,this.forceOptions(s));let r=(await e("settings").where("name","like",`${this.code}.%`).orWhere({name:"companyName"}).orWhere({name:"companyCode"})).reduce((f,y)=>({...f,[y.name]:y.value}),{}),a=`${this.code}.tagTypes`;if(s.byTags&&r[a]){let f=await e("tags").select("id","tag","name","type","order").from("tags").whereIn("type",r[a]).orderBy("order");r.tags=f}else r.tags=[];s.format=this.getReportStructure(n);let c=await await this.constructSqlQuery(e,s,r);for(let f of c)f.amount=parseInt(f.amount);c=this.doFiltering(n,c,s,r);let u=await this.getColumns(n,c,s,r),l=this.preProcess(n,c,s,r,u);l=this.postProcess(n,l,s,r,u);let d={format:n,columns:u,meta:{businessName:r.companyName,businessId:r.companyCode},data:l};return s.csv?vn(d,s):d}doFiltering(e,n,s,r){let a=i=>!0;return s.quarter1&&(a=i=>(0,qe.default)(i.date).quarter()<=1),s.quarter2&&(a=i=>(0,qe.default)(i.date).quarter()<=2),s.quarter3&&(a=i=>(0,qe.default)(i.date).quarter()<=3),n.filter(a)}preProcess(e,n,s,r,a){throw new Error(`Report plugin ${this.constructor.name} does not implement preProcess().`)}postProcess(e,n,s,r,a){return n}parseAndCombineReport(e,n,s,r,a){let i=Array.from(e).sort(),c=[];return r.split(`
`).forEach(u=>{if(/^#/.test(u))return;let[l,d,f]=u.split("	");l=l.split(" "),f=f?new Set(f.trim().split(/\s+/)):new Set;let y=d?d.replace(/^(_*).*/,"$1").length:0;if(d=d?d.replace(/^_+/,""):"",f.has("NEW_PAGE")){c.push({pageBreak:!0});return}if(f.has("BREAK")){c.push({paragraphBreak:!0});return}let p={};s.forEach(v=>p[v]=null);let A=!0,w={tab:y,...this.flags2item(f)};for(let v=0;v<l.length;v++){let T=l[v].split("-"),h=T[0],D=T[1];s.forEach(S=>{i.forEach(k=>{k>=h&&k<D&&(A=!1,a[S][k]!==void 0&&(p[S]+=a[S][k]))})})}if(w.accountDetails||(w.required||!A)&&(w.name=d,w.amounts=p,c.push(w)),w.accountDetails)for(let v=0;v<l.length;v++){let T=l[v].split("-"),h=T[0],D=T[1];i.forEach(S=>{if(S>=h&&S<D){let k={tab:y,...this.flags2item(f)};k.isAccount=!0,delete k.accountDetails,k.name=n[S],k.number=S,k.amounts={},s.forEach(oe=>{k.amounts||(k.amounts={}),a[oe][S]===void 0?k.amounts[oe]=null:k.amounts[oe]=a[oe][S]+0}),c.push(k)}})}}),c}};m();var $n=class extends V{constructor(...e){super();this.schemes=new Set(e)}hasScheme(e){return this.schemes.has(e)}getSchemePaths(e){throw new Error(`A class ${this.constructor.name} does not implement getScheme().`)}getSchemeDefaults(e){return{}}supportedCurrencies(){return[]}supportedLanguages(){return[]}};m();var ir=P(require("axios")),X=require("@dataplug/tasenor-common");var Pn=class extends V{constructor(...e){super();this.services=e}getServices(){return this.services}async executeQuery(e,n,s,r){let a={};for(let c of await n("settings").select("*").where("name","like",`${this.code}.%`)){let[,u]=c.name.split(".");a[u]=c.value}if(this.isAdequate(e))return;let i;try{i=await this.query(n,a,s,r)}catch(c){(0,X.error)(`Exception when handling service ${s} query ${JSON.stringify(r)}: ${c}`),i={status:500,message:`Execution of service ${s} query failed on plugin ${this.constructor.name}.`}}this.addResult(e,i)}async query(e,n,s,r){throw new Error(`A service plugin ${this.constructor.name} does not implement query().`)}addResult(e,n){(n.status>=200&&n.status<300||e.status===404&&e.message==="No handlers found.")&&(delete e.message,Object.assign(e,n))}isAdequate(e){return e.status>=200&&e.status<300}async request(e,n,s,r,a={}){if(n!=="GET")throw new Error("Only GET method currently supported in plugin requests.");return(0,X.note)(`Service ${e} request ${n} ${s}`),new Promise((i,c)=>{ir.default.request({method:n,url:s,params:r,headers:a}).then(u=>{(0,X.log)(`Request ${n} ${s}: HTTP ${u.status}`),i({status:u.status,data:u.data})}).catch(u=>{let l=u.response?u.response.status:500,d=u.response&&u.response.data&&u.response.data.message?u.response.data.message:`${u}`;(0,X.error)(`Request ${n} ${s} failed: HTTP ${l} ${d}`),i({status:l,message:d})})})}cacheHeadersKey(e,n){return{}}cacheParamsKey(e,n){return n}async cachedRequest(e,n,s,r,a,i={},c={}){let u=this.cacheParamsKey(n,a),l=this.cacheHeadersKey(n,i),d=e?await e("cached_requests").select("status","result").where({method:s,url:r,query:u,headers:l}).first():null;if(d&&d.status>=200&&d.status<300)return(0,X.log)(`Using cached service ${n} result for ${s} ${r}`),d.result;c.rateLimitDelay&&await(0,X.waitPromise)(c.rateLimitDelay);let f=await this.request(n,s,r,a,i);return e&&await e("cached_requests").insert({method:s,url:r,query:u,headers:l,status:f.status||null,result:f}),f}};m();var J=P(require("fs")),H=P(require("fs/promises")),ae=P(require("glob")),E=P(require("path")),cr=P(require("tar")),Sn=require("@dataplug/tasenor-common"),ze=require("ts-opaque"),ur=["code","title","version","icon","releaseDate","use","type","description"],lr={BUILD_PATH:void 0,DEVELOPMENT_PATH:void 0,INSTALL_PATH:void 0,PLUGIN_PATH:void 0};function O(o){let t=lr[o];if(t===void 0)throw new Error(`Configuration variable ${o} is required but it is not set.`);return t}function de(o,t){lr[o]=t,o==="PLUGIN_PATH"&&(J.default.existsSync(E.default.join(t,"build"))&&de("BUILD_PATH",E.default.join(t,"build")),J.default.existsSync(E.default.join(t,"Build"))&&de("BUILD_PATH",E.default.join(t,"Build")),J.default.existsSync(E.default.join(t,"installed"))&&de("INSTALL_PATH",E.default.join(t,"installed")),J.default.existsSync(E.default.join(t,"Installed"))&&de("INSTALL_PATH",E.default.join(t,"Installed")),J.default.existsSync(E.default.join(t,"development"))&&de("DEVELOPMENT_PATH",E.default.join(t,"development")),J.default.existsSync(E.default.join(t,"Development"))&&de("DEVELOPMENT_PATH",E.default.join(t,"Development")))}function xn(o){return o.sort((t,e)=>t.code<e.code?-1:t.code>e.code?1:0)}function Ka(o,t){if(o.length!==t.length)return!1;o=xn(o),t=xn(t);for(let e=0;e<o.length;e++){if(o[e].id!==t[e].id||o[e].code!==t[e].code||o[e].installedVersion!==t[e].installedVersion||o[e].path!==t[e].path)return!1;if(o[e].versions||t[e].versions){let n=o[e].versions||[],s=t[e].versions||[];if(n.length!==s.length)return!1;for(let r=0;r<n.length;r++)if(n[r].version!==s[r].version)return!1}}return!0}function dr(){return J.default.existsSync(E.default.join(O("PLUGIN_PATH"),"index.json"))?JSON.parse(J.default.readFileSync(E.default.join(O("PLUGIN_PATH"),"index.json")).toString("utf-8")):[]}function Ga(o){return dr().find(n=>n.code===o)||null}async function Ya(){let o=await Sn.ERP_API.call("GET","/plugins");return o.success?o.data:[]}function Qa(){let o=O("INSTALL_PATH"),t=o.split("/"),e=ae.default.sync(E.default.join(o,"*","plugin.json")),n=[];for(let s of e){let r=JSON.parse(J.default.readFileSync(s).toString("utf-8")),a=s.split("/");r.path=`${t[t.length-1]}/${a[a.length-2]}`,n.push(r)}return n}function Wa(){let o=ae.default.sync(E.default.join(O("DEVELOPMENT_PATH"),"*","index.tsx")).concat(ae.default.sync(E.default.join(O("DEVELOPMENT_PATH"),"*","ui","index.tsx"))),t=new RegExp(`^\\s*static\\s+(${ur.join("|")})\\s*=\\s*(?:'([^']*)'|"([^"]*)")`),e=[];for(let n of o){let s,r=n.split("/");r[r.length-2]==="ui"?s=`${r[r.length-4]}/${r[r.length-3]}`:s=`${r[r.length-3]}/${r[r.length-2]}`;let a={code:(0,ze.create)("Unknown"),title:"Unknown Development Plugin",icon:"HelpOutline",path:s,version:(0,ze.create)("0"),releaseDate:null,use:"unknown",type:"unknown",description:"No description"},i=J.default.readFileSync(n).toString("utf-8").split(`
`);for(let c of i){let u=t.exec(c);u&&(a[u[1]]=u[2])}a.releaseDate&&(a.releaseDate=new Date(a.releaseDate)),e.push(a)}return e}function Za(){let o=ae.default.sync(E.default.join(O("DEVELOPMENT_PATH"),"*","index.ts")).concat(ae.default.sync(E.default.join(O("DEVELOPMENT_PATH"),"*","backend","index.ts"))),t=new RegExp(`^\\s*this\\.(${ur.join("|")})\\s*=\\s*(?:'([^']*)'|"([^"]*)")`),e=[];for(let n of o){let s=n.split("/"),r;s[s.length-2]==="backend"?r=`${s[s.length-4]}/${s[s.length-3]}`:r=`${s[s.length-3]}/${s[s.length-2]}`;let a={code:(0,ze.create)("Unknown"),title:"Unknown Development Plugin",icon:"HelpOutline",path:r,version:(0,ze.create)("0"),releaseDate:null,use:"unknown",type:"unknown",description:"No description"},i=J.default.readFileSync(n).toString("utf-8").split(`
`);for(let c of i){let u=t.exec(c);u&&(a[u[1]]=u[2])}a.releaseDate&&(a.releaseDate=new Date(a.releaseDate)),e.push(a)}return e}async function Xa(){let o=O("BUILD_PATH");return await H.default.rm(o,{force:!0,recursive:!0}),H.default.mkdir(o)}async function eo(){let o=O("DEVELOPMENT_PATH");return await H.default.rm(o,{force:!0,recursive:!0}),H.default.mkdir(o)}async function to(){let o=O("INSTALL_PATH");return await H.default.rm(o,{force:!0,recursive:!0}),H.default.mkdir(o)}async function no(o,t,e){let n=E.default.join(O("BUILD_PATH"),`${o.code}-${o.version}.tgz`);if(await H.default.mkdir(E.default.join(O("BUILD_PATH"),o.code),{recursive:!0}),await H.default.writeFile(E.default.join(O("BUILD_PATH"),o.code,"plugin.json"),JSON.stringify(o,null,2)),o.use!=="ui"){if(!e)throw new Error("No backend path given.");await H.default.mkdir(E.default.join(O("BUILD_PATH"),o.code,"backend"),{recursive:!0});for(let s of ae.default.sync(E.default.join(e,"*")))await H.default.copyFile(s,E.default.join(O("BUILD_PATH"),o.code,"backend",E.default.basename(s)))}if(o.use!=="backend"){if(!t)throw new Error("No UI path given.");await H.default.mkdir(E.default.join(O("BUILD_PATH"),o.code,"ui"),{recursive:!0});for(let s of ae.default.sync(E.default.join(t,"*")))await H.default.copyFile(s,E.default.join(O("BUILD_PATH"),o.code,"ui",E.default.basename(s)))}return await cr.default.c({gzip:!0,cwd:O("BUILD_PATH"),file:n},["./"+o.code]),n}async function so(o,t){return o.releaseDate=new Date,o.package=J.default.readFileSync(t).toString("base64"),Sn.ERP_API.call("POST","/plugins/publish",o)}var ro={buildPlugin:no,cleanBuildDir:Xa,cleanDevDir:eo,cleanInstallDir:to,findPluginFromIndex:Ga,fetchOfficialPluginList:Ya,getConfig:O,loadPluginIndex:dr,publishPlugin:so,samePlugins:Ka,scanBackendPlugins:Za,scanInstalledPlugins:Qa,scanUIPlugins:Wa,setConfig:de,sortPlugins:xn};m();m();var fr=P(require("json2csv")),mr=require("sprintf-js");function vn(o,t){let e=[],n={id:(c,u)=>u.id,name:(c,u)=>`${u.isAccount?u.number+" ":""}${u.name}`,text:(c,u)=>u[c.name],numeric:(c,u)=>u.amounts&&!u.hideTotal&&u.amounts[c.name]!==""&&!isNaN(u.amounts[c.name])&&u.amounts[c.name]!==void 0?u.amounts[c.name]===null?"\u2014":(0,mr.sprintf)("%.2f",u.amounts[c.name]/100):""},{data:s,columns:r}=o,a={};t.dropTitle||(r.forEach(c=>a[c.name]=c.title),e.push(a)),s.forEach(c=>{c.paragraphBreak||(a={},r.forEach(u=>{c.pageBreak||c.paragraphBreak?a[u.name]="":a[u.name]=n[u.type](u,c)}),e.push(a))});let i=r.map(c=>c.name);return fr.default.parse(e,{fields:i,header:!1})}0&&(module.exports={ALLOWED_VAULT_VARIABLES,BackendPlugin,BookkeeperImporter,CLI,CLIRunner,DB,DataPlugin,EnvironmentVault,Exporter,ImportPlugin,Password,ReportPlugin,SchemePlugin,ServicePlugin,TasenorExporter,TilitinExporter,TransactionImportHandler,TransactionRules,TransactionUI,TransferAnalyzer,Vault,cleanUrl,cli,createUuid,data2csv,getServerRoot,getVault,isDevelopment,isProduction,isTransactionImportConnector,nodeEnv,plugins,randomString,setServerRoot,system,systemPiped,tasenorFinalStack,tasenorInitialStack,tasenorStack,tokens,vault});
